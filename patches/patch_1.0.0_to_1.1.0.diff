diff --git a/.gitattributes b/.gitattributes
index baa4b8d..36dce4d 100644
--- a/.gitattributes
+++ b/.gitattributes
@@ -1,3 +1 @@
-# Auto detect text files and perform LF normalization
-* text=auto
 *.npy filter=lfs diff=lfs merge=lfs -text
diff --git a/.github/FUNDING.yml b/.github/FUNDING.yml
new file mode 100644
index 0000000..93f00ef
--- /dev/null
+++ b/.github/FUNDING.yml
@@ -0,0 +1,14 @@
+# These are supported funding model platforms
+
+github: # Replace with up to 4 GitHub Sponsors-enabled usernames e.g., [user1, user2]
+patreon: venexs
+open_collective: # Replace with a single Open Collective username
+ko_fi: # Replace with a single Ko-fi username
+tidelift: # Replace with a single Tidelift platform-name/package-name e.g., npm/babel
+community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
+liberapay: # Replace with a single Liberapay username
+issuehunt: # Replace with a single IssueHunt username
+lfx_crowdfunding: # Replace with a single LFX Crowdfunding project-name e.g., cloud-foundry
+polar: # Replace with a single Polar username
+buy_me_a_coffee: # Replace with a single Buy Me a Coffee username
+custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']
diff --git a/Anime Version/Accept Job Change/gui.py b/Anime Version/Accept Job Change/gui.py
index 1ad7684..0bb98e2 100644
--- a/Anime Version/Accept Job Change/gui.py	
+++ b/Anime Version/Accept Job Change/gui.py	
@@ -17,6 +17,7 @@ import sys
 import threading
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 project_root = os.path.abspath(os.path.join(current_dir, '../../'))
@@ -84,7 +85,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -103,7 +104,7 @@ def ex_close(win):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=20, delay=1)
 
 canvas = Canvas(
diff --git a/Anime Version/All Jobs/gui.py b/Anime Version/All Jobs/gui.py
index 6d24cb7..e44908c 100644
--- a/Anime Version/All Jobs/gui.py	
+++ b/Anime Version/All Jobs/gui.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 project_root = os.path.abspath(os.path.join(current_dir, '../../'))
@@ -73,7 +74,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
diff --git a/Anime Version/All Jobs/gui1.py b/Anime Version/All Jobs/gui1.py
index 030fdf4..f897c08 100644
--- a/Anime Version/All Jobs/gui1.py	
+++ b/Anime Version/All Jobs/gui1.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 project_root = os.path.abspath(os.path.join(current_dir, '../../'))
@@ -73,7 +74,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -127,13 +128,13 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
diff --git a/Anime Version/All Jobs/gui2.py b/Anime Version/All Jobs/gui2.py
index eced697..a7679ca 100644
--- a/Anime Version/All Jobs/gui2.py	
+++ b/Anime Version/All Jobs/gui2.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 project_root = os.path.abspath(os.path.join(current_dir, '../../'))
@@ -73,7 +74,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -127,13 +128,13 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
diff --git a/Anime Version/All Jobs/gui3.py b/Anime Version/All Jobs/gui3.py
index a0f1180..621cda8 100644
--- a/Anime Version/All Jobs/gui3.py	
+++ b/Anime Version/All Jobs/gui3.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 project_root = os.path.abspath(os.path.join(current_dir, '../../'))
@@ -75,7 +76,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -129,13 +130,13 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
diff --git a/Anime Version/All Jobs/gui4.py b/Anime Version/All Jobs/gui4.py
index fee3786..f4e9ed6 100644
--- a/Anime Version/All Jobs/gui4.py	
+++ b/Anime Version/All Jobs/gui4.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 project_root = os.path.abspath(os.path.join(current_dir, '../../'))
@@ -75,7 +76,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -129,13 +130,13 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
diff --git a/Anime Version/All Jobs/gui5.py b/Anime Version/All Jobs/gui5.py
index 0c85989..553501f 100644
--- a/Anime Version/All Jobs/gui5.py	
+++ b/Anime Version/All Jobs/gui5.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 project_root = os.path.abspath(os.path.join(current_dir, '../../'))
@@ -75,7 +76,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -129,13 +130,13 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
diff --git a/Anime Version/All Jobs/gui6.py b/Anime Version/All Jobs/gui6.py
index 5e7a593..ce426a0 100644
--- a/Anime Version/All Jobs/gui6.py	
+++ b/Anime Version/All Jobs/gui6.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 project_root = os.path.abspath(os.path.join(current_dir, '../../'))
@@ -77,7 +78,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -92,7 +93,7 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 canvas = Canvas(
@@ -132,20 +133,20 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
     window.after(5000, fourth)
 
 def fourth():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="hidden")
@@ -153,7 +154,7 @@ def fourth():
     window.after(5000, fifth)
 
 def fifth():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="hidden")
@@ -162,7 +163,7 @@ def fifth():
     window.after(5000, sixth)
 
 def sixth():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="hidden")
diff --git a/Anime Version/All Jobs/gui7.py b/Anime Version/All Jobs/gui7.py
index 8641716..61dd15c 100644
--- a/Anime Version/All Jobs/gui7.py	
+++ b/Anime Version/All Jobs/gui7.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 project_root = os.path.abspath(os.path.join(current_dir, '../../'))
@@ -75,7 +76,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -129,13 +130,13 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
diff --git a/Anime Version/Calorie Input/gui.py b/Anime Version/Calorie Input/gui.py
index 814ad71..8a7142c 100644
--- a/Anime Version/Calorie Input/gui.py	
+++ b/Anime Version/Calorie Input/gui.py	
@@ -19,6 +19,7 @@ import sys
 import os
 import ujson
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -82,7 +83,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (715, 41), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (715, 41), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -102,7 +103,7 @@ def ex_close(eve):
         update_thread.join()
 
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=12, delay=1)
 
 
diff --git a/Anime Version/Credits/gui.py b/Anime Version/Credits/gui.py
index 3a50704..56969d6 100644
--- a/Anime Version/Credits/gui.py	
+++ b/Anime Version/Credits/gui.py	
@@ -104,10 +104,10 @@ def ex_close(win):
     if setting_data["Settings"]["Performernce (ANIME):"] != "True":
         stop_event.set()
         update_thread.join()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, misc.resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=50, delay=1)
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, misc.resource_path('Files/Mod/default/sfx.py')])
 
 def attri_show():
     canvas.itemconfig("Credit", state="hidden")
diff --git a/Anime Version/Daily Quest Rewards/gui.py b/Anime Version/Daily Quest Rewards/gui.py
index c350d30..305cde0 100644
--- a/Anime Version/Daily Quest Rewards/gui.py	
+++ b/Anime Version/Daily Quest Rewards/gui.py	
@@ -18,6 +18,7 @@ import csv
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -50,11 +51,11 @@ def move_window(event):
 
 def ex_close(window):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=20, delay=1)
     
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
@@ -151,7 +152,7 @@ def get():
         tab_son_data=json.load(tab_son)
 
     if tab_son_data["Status"]=='Close':
-        subprocess.Popen(['python', 'Anime Version/Status Tab/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Anime Version/Status Tab/gui.py')])
     ex_close(window)
 
 def secret_get():
@@ -203,7 +204,7 @@ def secret_get():
     with open("Files/Player Data/Tabs.json",'r') as tab_son:
         tab_son_data=json.load(tab_son)
     if tab_son_data["Status"]!='Open':
-        subprocess.Popen(['python', 'Anime Version/Status Tab/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Anime Version/Status Tab/gui.py')])
     window.quit()
 
 def great_get():
@@ -255,7 +256,7 @@ def great_get():
     with open("Files/Player Data/Tabs.json",'r') as tab_son:
         tab_son_data=json.load(tab_son)
     if tab_son_data["Status"]!='Open':
-        subprocess.Popen(['python', 'Anime Version/Status Tab/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Anime Version/Status Tab/gui.py')])
     window.quit()
 
 def give_rev():
diff --git a/Anime Version/Daily Quest/gui.py b/Anime Version/Daily Quest/gui.py
index 4bdc267..37136ad 100644
--- a/Anime Version/Daily Quest/gui.py	
+++ b/Anime Version/Daily Quest/gui.py	
@@ -83,7 +83,7 @@ def ex_close(win):
         update_thread.join()
     thesystem.misc.update_screen("Daily","Close")
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=30, delay=1)
 
 with open("Files/Checks/Daily_time_check.csv", 'r') as Daily_date_check_file:
@@ -160,7 +160,7 @@ if full_check==False:
     top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (488, 38), job, type_="top")
     bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (488, 33), job, type_="bottom")
 
-    subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx.py')])
 
     window.configure(bg = "#FFFFFF")
     set_data=thesystem.misc.return_settings()
@@ -450,7 +450,7 @@ if full_check==False:
     )
 
     def update_pushup():
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_point.py')])
         #global pushup_txt
         current_text=int((((canvas.itemcget(pushup_txt, "text")).split("/"))[0])[1:])
         daily_quest_data["Player"]["Push"]+=1
@@ -458,7 +458,7 @@ if full_check==False:
         canvas.itemconfig(pushup_txt, text=f"[{current_text+1}/{fl_push}]")
 
     def update_situp():
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_point.py')])
         #global situp_txt
         current_text=int((((canvas.itemcget(situp_txt, "text")).split("/"))[0])[1:])
         daily_quest_data["Player"]["Sit"]+=1
@@ -466,7 +466,7 @@ if full_check==False:
         canvas.itemconfig(situp_txt, text=f"[{current_text+1}/{fl_sit}]")
 
     def update_sqat():
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_point.py')])
         #global situp_txt
         current_text=int((((canvas.itemcget(squat_txt, "text")).split("/"))[0])[1:])
         daily_quest_data["Player"]["Squat"]+=1
@@ -474,7 +474,7 @@ if full_check==False:
         canvas.itemconfig(squat_txt, text=f"[{current_text+1}/{fl_sit}]")
 
     def update_run():
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_point.py')])
         #global run_txt
         current_text=float((((canvas.itemcget(run_txt, "text")).split("/"))[0])[1:])
         daily_quest_data["Player"]["Run"]+=0.5
@@ -482,7 +482,7 @@ if full_check==False:
         canvas.itemconfig(run_txt, text=f"[{current_text+0.5}/{fl_run}]")
 
     def update_int():
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_point.py')])
         #global int_txt
         current_text=float((((canvas.itemcget(int_txt, "text")).split("/"))[0])[1:])
         daily_quest_data["Player"]["Int_type"]+=0.5
@@ -490,7 +490,7 @@ if full_check==False:
         canvas.itemconfig(int_txt, text=f"[{current_text+0.5}/{fl_int}]")
 
     def update_sleep():
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_point.py')])
         #global sleep_txt
         current_text=int((((canvas.itemcget(sleep_txt, "text")).split("/"))[0])[1:])
         daily_quest_data["Player"]["Sleep"]+=1
@@ -651,4 +651,4 @@ elif full_check==True:
         with open("Files/Temp Files/Daily Rewards.csv", 'w', newline='') as rew_csv_open:
             rew_fw=csv.writer(rew_csv_open)
             rew_fw.writerow(["Reward"])
-        subprocess.Popen(['python', 'Anime Version/Daily Quest Rewards/gui.py'])
\ No newline at end of file
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Anime Version/Daily Quest Rewards/gui.py')])
\ No newline at end of file
diff --git a/Anime Version/Demon Castle Quest Reminder/gui.py b/Anime Version/Demon Castle Quest Reminder/gui.py
index f5fbdcd..3c495af 100644
--- a/Anime Version/Demon Castle Quest Reminder/gui.py	
+++ b/Anime Version/Demon Castle Quest Reminder/gui.py	
@@ -21,6 +21,7 @@ import sys
 import os
 import atexit
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -74,7 +75,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (332, 30), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (322, 25), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 thesystem.system.animate_window_open(window, target_height, window_width, step=50, delay=1)
 
@@ -102,7 +103,7 @@ def ex_close(eve=0):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=50, delay=1)
 
 def count_completed_images(data):
diff --git a/Anime Version/Demon Castle/__pycache__/raid_interface.cpython-39.pyc b/Anime Version/Demon Castle/__pycache__/raid_interface.cpython-39.pyc
index e7eb6ec6f434de1b9f1fa28141ba591de5e732df..1989d81adb790e5d130094b209e325f298a3f909 100644
GIT binary patch
delta 30
kcmaFT!MLk~kt>mxmx}=i?lx`Yy1>M2pKP_6ojKMK0Ex;7W&i*H

delta 72
zcmdnh!T6+ukt>mxmx}=i3KBMQU0~A9Oty*%Elw>ej!7-ZPtJ&O$uG~#$xlovjtR*~
a)eWvJE=kSR%}vbAQ_wKd+<ccQ))4?y`WS=&

diff --git a/Anime Version/Demon Castle/gui.py b/Anime Version/Demon Castle/gui.py
index 60611f5..13dd316 100644
--- a/Anime Version/Demon Castle/gui.py	
+++ b/Anime Version/Demon Castle/gui.py	
@@ -28,6 +28,13 @@ from math import sin, cos, pi
 import random
 from raid_interface import RaidInterface
 
+current_dir = os.path.dirname(os.path.abspath(__file__))
+
+project_root = os.path.abspath(os.path.join(current_dir, '../../'))
+
+sys.path.insert(0, project_root)
+
+import thesystem.misc
 # ✨ NEW: Helper function to load player stats
 def load_player_stats():
     try:
@@ -547,7 +554,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (1229, 47), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (1229, 47), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx.py')])
 
 thesystem.system.animate_window_open(window, target_height, window_width, step=50, delay=1)
 
@@ -595,7 +602,7 @@ def ex_close(win):
         tab_son_data["Castle"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=50, delay=1)
 
 def ex_dc_close(win):
@@ -611,10 +618,10 @@ def ex_dc_close(win):
         tab_son_data["Castle"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
 
-    subprocess.Popen(['python', 'Anime Version/Demon Castle Quest Reminder/gui.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Anime Version/Demon Castle Quest Reminder/gui.py')])
     
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=50, delay=1)
 
 canvas = Canvas(
diff --git a/Anime Version/Demon Castle/gui1.py b/Anime Version/Demon Castle/gui1.py
index 79f7e3c..8b68a4e 100644
--- a/Anime Version/Demon Castle/gui1.py	
+++ b/Anime Version/Demon Castle/gui1.py	
@@ -19,6 +19,7 @@ import sys
 import os
 import random
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -72,7 +73,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (840, 47), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (723, 47), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 thesystem.system.animate_window_open(window, target_height, window_width, step=30, delay=1)
 
@@ -348,11 +349,11 @@ def next():
         thesystem.system.get_fin_xp()
         stop_event.set()
         update_thread.join()
-        subprocess.Popen(['python', 'Anime Version/Demon Castle/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Anime Version/Demon Castle/gui.py')])
         window.quit()
 
     else:
-        subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+        subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
         mob_fun()
 
 canvas = Canvas(
diff --git a/Anime Version/Demon Castle/guitest.py b/Anime Version/Demon Castle/guitest.py
index 1aad841..89597e4 100644
--- a/Anime Version/Demon Castle/guitest.py	
+++ b/Anime Version/Demon Castle/guitest.py	
@@ -317,7 +317,7 @@ class Castle3D(OpenGLFrame):
                 p['life'] = random.uniform(1, 5)
             
             # 3. Draw the particle
-            glVertex3fv(p['pos'])
+            glVertex3fv(p['pos')])
         glEnd()
 
 
@@ -351,7 +351,7 @@ class Castle3D(OpenGLFrame):
             is_highlighted = (floor['num'] == self.current_scroll_floor)
             glPushMatrix()
             glTranslatef(0, floor['y_center'], 0)
-            glScalef(floor['width'], floor['height'], floor['depth'])
+            glScalef(floor['width'], floor['height'], floor['depth')])
             draw_building_block(size=1.0, window_size=0.15, window_spacing=0.2, highlight=is_highlighted)
             glPopMatrix()
 
diff --git a/Anime Version/Dungeon Runs/BACKUP_summon_challenge_gui.py b/Anime Version/Dungeon Runs/BACKUP_summon_challenge_gui.py
index 78a289a..6f34aca 100644
--- a/Anime Version/Dungeon Runs/BACKUP_summon_challenge_gui.py	
+++ b/Anime Version/Dungeon Runs/BACKUP_summon_challenge_gui.py	
@@ -368,9 +368,9 @@ class DungeonSystem:
         
     def update_images(self):
         self.image_index = (self.image_index + 1) % len(self.top_preloaded_images)
-        self.canvas.itemconfig(self.top_image, image=self.top_preloaded_images[self.image_index])
+        self.canvas.itemconfig(self.top_image, image=self.top_preloaded_images[self.image_index)])
         self.bot_image_index = (self.bot_image_index + 1) % len(self.bottom_preloaded_images)
-        self.canvas.itemconfig(self.bottom_image, image=self.bottom_preloaded_images[self.bot_image_index])
+        self.canvas.itemconfig(self.bottom_image, image=self.bottom_preloaded_images[self.bot_image_index)])
         self.window.after(1000 // 24, self.update_images)
         
     def start_move(self, event):
@@ -390,9 +390,9 @@ class DungeonSystem:
         stop_event.set()
         update_thread.join()
         threading.Thread(target=thesystem.system.fade_out, args=(self.window, 0.8)).start()
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
         thesystem.system.animate_window_close(self.window, 0, self.window_width, step=20, delay=1)
-        subprocess.Popen(['python', 'Anime Version/Message/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Anime Version/Message/gui.py')])
         
     def start_dungeon(self):
         self.hide_activities_and_checkboxes()
@@ -462,7 +462,7 @@ class DungeonSystem:
         elif self.rank == "S":
             base_waves = 10
             
-        wave_variation = random.choice([-1, 0, 0, 0, 1])
+        wave_variation = random.choice([-1, 0, 0, 0, 1)])
         total_waves = max(3, base_waves + wave_variation)
         self.total_waves = total_waves
         
@@ -634,7 +634,7 @@ class DungeonSystem:
             if 'Final' in self.waves:
                 self.show_boss_wave()
             else:
-                self.mob = int(list(self.waves.keys())[0])
+                self.mob = int(list(self.waves.keys())[0)])
                 wave_num = str(self.mob)
         
         self.canvas.itemconfig(self.waves_txt, text=f"[Wave - {wave_num}/{len(self.waves)}]")
@@ -816,7 +816,7 @@ class DungeonSystem:
                 activity_widgets = [self.activity1, self.activity2, self.activity3, self.activity4]
                 for idx in incomplete_indices:
                     self.canvas.itemconfig(activity_widgets[idx], fill="#FF0000")
-                self.window.after(500, lambda: [self.canvas.itemconfig(activity_widgets[idx], fill=self.normal_font_col) for idx in incomplete_indices])
+                self.window.after(500, lambda: [self.canvas.itemconfig(activity_widgets[idx], fill=self.normal_font_col) for idx in incomplete_indices)])
                 return
         
         # For non-boss waves, calculate completion percentage
@@ -1170,7 +1170,7 @@ class SkillSystem:
             self.skill_panel_title,
             self.close_panel_button,
             self.close_panel_x
-        ])
+        )])
         
         # Create a frame to hold the canvas and scrollbar
         self.skill_frame = Frame(self.parent.window, bg="#1E1E1E")
@@ -1418,7 +1418,7 @@ class SkillSystem:
             if modified_activities:
                 self.parent.window.after(3000, lambda widgets=modified_activities: 
                                     [self.parent.canvas.itemconfig(w, fill=self.parent.normal_font_col) 
-                                        for w in widgets])
+                                        for w in widgets)])
             
             # Feedback notification
             notification = self.parent.canvas.create_text(
@@ -1481,7 +1481,7 @@ class SkillSystem:
             if modified_activities:
                 self.parent.window.after(3000, lambda activities=modified_activities: 
                                     [self.parent.canvas.itemconfig(w[0], fill=self.parent.normal_font_col) 
-                                        for w in activities])
+                                        for w in activities)])
             
             # Feedback notification
             notification = self.parent.canvas.create_text(
@@ -1545,7 +1545,7 @@ class SkillSystem:
             if modified_activities:
                 self.parent.window.after(3000, lambda widgets=modified_activities: 
                                     [self.parent.canvas.itemconfig(w, fill=self.parent.normal_font_col) 
-                                        for w in widgets])
+                                        for w in widgets)])
             
             # Feedback notification
             count = len(modified_activities)
@@ -1608,7 +1608,7 @@ class ShadowManager:
             if os.path.exists("Files/Player Data/Summons.json"):
                 with open("Files/Player Data/Summons.json", 'r') as summon_file:
                     summons_data = json.load(summon_file)
-                    return summons_data.get("summons", [])
+                    return summons_data.get("summons", [)])
             else:
                 # Create default structure if it doesn't exist
                 default_data = {
@@ -1778,7 +1778,7 @@ class ShadowManager:
             
             # Pre-select active summons
             if is_active:
-                selected_summons.append(summon['name'])
+                selected_summons.append(summon['name')])
         
         # Update canvas scroll region
         inner_frame.update_idletasks()
@@ -1998,7 +1998,7 @@ class ShadowManager:
                         # Increase loyalty (capped at 100%)
                         summon['loyalty'] = min(100, summon.get('loyalty', 50) + loyalty_gain)
                         
-                        updated_summons.append(summon['name'])
+                        updated_summons.append(summon['name')])
                 
                 # Save updated summons data
                 with open("Files/Player Data/Summons.json", 'w') as summon_file:
@@ -2639,7 +2639,7 @@ def modify_dungeon_system():
                 json.dump(temp_data, f)
             
             # Launch the shadow extraction system
-            subprocess.Popen(['python', 'shadow_summon_system.py'])
+            subprocess.Popen([sys.executable, resource_path('shadow_summon_system.py')])
             
         except Exception as e:
             print(f"Error launching shadow extraction: {e}")
@@ -2735,7 +2735,7 @@ def modify_dungeon_system():
                 json.dump(temp_data, f)
             
             # Launch the shadow extraction system
-            subprocess.Popen(['python', 'Anime Version/Dungeon Runs/shadow_summon_system.py'])
+            subprocess.Popen([sys.executable, resource_path('Anime Version/Dungeon Runs/shadow_summon_system.py')])
             
         except Exception as e:
             print(f"Error launching shadow extraction: {e}")
@@ -2790,7 +2790,7 @@ def modify_dungeon_system1():
                     import re
                     numbers = re.findall(r'\d+', current_text)
                     if numbers:
-                        num = int(numbers[0])
+                        num = int(numbers[0)])
                         reduced_num = max(1, int(num * 0.8))  # 20% reduction
                         new_text = current_text.replace(str(num), str(reduced_num))
                         new_text += " [STR BUFF]"
@@ -2805,7 +2805,7 @@ def modify_dungeon_system1():
                     import re
                     numbers = re.findall(r'\d+', current_text)
                     if numbers:
-                        num = int(numbers[0])
+                        num = int(numbers[0)])
                         increased_num = int(num * 1.2)  # 20% increase
                         new_text = current_text.replace(str(num), str(increased_num))
                         new_text += " [AGI DEBUFF]"
diff --git a/Anime Version/Dungeon Runs/gui.py b/Anime Version/Dungeon Runs/gui.py
index 0d2a28c..2676125 100644
--- a/Anime Version/Dungeon Runs/gui.py	
+++ b/Anime Version/Dungeon Runs/gui.py	
@@ -15,6 +15,7 @@ import time
 import math
 import json
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 project_root = os.path.abspath(os.path.join(current_dir, '../../'))
@@ -386,9 +387,9 @@ class DungeonSystem:
         stop_event.set()
         update_thread.join()
         threading.Thread(target=thesystem.system.fade_out, args=(self.window, 0.8)).start()
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
         thesystem.system.animate_window_close(self.window, 0, self.window_width, step=20, delay=1)
-        subprocess.Popen(['python', 'Anime Version/Message/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Anime Version/Message/gui.py')])
         
     def start_dungeon(self):
         self.hide_activities_and_checkboxes()
diff --git a/Anime Version/Dungeon Runs/shadow_management.py b/Anime Version/Dungeon Runs/shadow_management.py
index 81ca857..aa59c24 100644
--- a/Anime Version/Dungeon Runs/shadow_management.py	
+++ b/Anime Version/Dungeon Runs/shadow_management.py	
@@ -93,7 +93,7 @@ window.wm_attributes("-topmost", True)
 top_preloaded_images = thesystem.system.preload_images(top_images, (970, 40))
 bottom_preloaded_images = thesystem.system.preload_images(bottom_images, (970, 40))
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -118,7 +118,7 @@ def ex_close():
         tab_son_data["Shadows"] = 'Close'
         ujson.dump(tab_son_data, fin_tab_son, indent=4)
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=50, delay=1)
 
 canvas = Canvas(
@@ -279,7 +279,7 @@ class ShadowManager:
             if os.path.exists("Files/Player Data/Summons.json"):
                 with open("Files/Player Data/Summons.json", 'r') as summon_file:
                     summons_data = json.load(summon_file)
-                    self.summons = summons_data.get("summons", [])
+                    self.summons = summons_data.get("summons", [)])
             else:
                 # Create default structure if it doesn't exist
                 default_data = {
@@ -922,8 +922,8 @@ class ShadowManager:
         summon_type = summon.get('type', 'Normal')
         summon_rank = summon.get('rank', 'E')
         
-        type_descriptions = descriptions.get(summon_type, descriptions['Normal'])
-        description = type_descriptions.get(summon_rank, type_descriptions['E'])
+        type_descriptions = descriptions.get(summon_type, descriptions['Normal')])
+        description = type_descriptions.get(summon_rank, type_descriptions['E')])
         
         # If Red rank, override description
         if summon_rank == "Red":
diff --git a/Anime Version/Dungeon Runs/shadow_summon_system.py b/Anime Version/Dungeon Runs/shadow_summon_system.py
index 06869ad..fbb6a3c 100644
--- a/Anime Version/Dungeon Runs/shadow_summon_system.py	
+++ b/Anime Version/Dungeon Runs/shadow_summon_system.py	
@@ -635,11 +635,11 @@ class ShadowSummonSystem:
             while not stop_event.is_set():
                 # Update top image
                 self.image_index = (self.image_index + 1) % len(self.top_preloaded_images)
-                self.canvas.itemconfig(self.top_image, image=self.top_preloaded_images[self.image_index])
+                self.canvas.itemconfig(self.top_image, image=self.top_preloaded_images[self.image_index)])
 
                 # Update bottom image
                 self.bot_image_index = (self.bot_image_index + 1) % len(self.bottom_preloaded_images)
-                self.canvas.itemconfig(self.bottom_image, image=self.bottom_preloaded_images[self.bot_image_index])
+                self.canvas.itemconfig(self.bottom_image, image=self.bottom_preloaded_images[self.bot_image_index)])
 
                 # Sleep for animation timing (24 FPS)
                 time.sleep(1/24)
@@ -822,7 +822,7 @@ class ShadowSummonSystem:
             print(f"Error updating Tabs.json: {e}")
             
         threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
         thesystem.system.animate_window_close(window, initial_height, window_width, step=50, delay=1)
 
 # Shadow Manager class to handle summoned soldiers in dungeons
@@ -838,7 +838,7 @@ class ShadowManager:
         try:
             with open("Files/Player Data/Summons.json", 'r') as summon_file:
                 summons_data = json.load(summon_file)
-                return summons_data.get("summons", [])
+                return summons_data.get("summons", [)])
         except Exception as e:
             print(f"Error loading summons: {e}")
             return []
@@ -987,7 +987,7 @@ class ShadowManager:
                 # Increase loyalty (capped at 100%)
                 summon['loyalty'] = min(100, summon['loyalty'] + loyalty_gain)
                 
-                updated_summons.append(summon['name'])
+                updated_summons.append(summon['name')])
         
         # Save updated summons data
         try:
@@ -995,7 +995,7 @@ class ShadowManager:
                 summons_data = json.load(summon_file)
                 
             # Update summons in the data
-            for i, summon in enumerate(summons_data.get("summons", [])):
+            for i, summon in enumerate(summons_data.get("summons", [)])):
                 for updated_name in updated_summons:
                     if summon['name'] == updated_name:
                         # Find the updated summon data
diff --git a/Anime Version/Dungeon/gui.py b/Anime Version/Dungeon/gui.py
index 3521e96..5b29bd6 100644
--- a/Anime Version/Dungeon/gui.py	
+++ b/Anime Version/Dungeon/gui.py	
@@ -87,7 +87,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (490, 34), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (490, 34), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx.py')])
 presets_data = thesystem.misc.load_ujson("Files/Mod/presets.json")
 
 
@@ -116,7 +116,7 @@ def ex_close(win):
         tab_son_data["Dungeons"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=20, delay=1)
 
 e_rank,d_rank,c_rank,b_rank,a_rank,s_rank=thesystem.dungeon.dun_check()
diff --git a/Anime Version/Equip Item/gui.py b/Anime Version/Equip Item/gui.py
index 854832d..c6b0a1e 100644
--- a/Anime Version/Equip Item/gui.py	
+++ b/Anime Version/Equip Item/gui.py	
@@ -27,6 +27,7 @@ sys.path.insert(0, project_root)
 import thesystem.system
 import thesystem.itemequip
 import thesystem.misc
+from thesystem.misc import resource_path
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -59,7 +60,7 @@ def ex_close(win):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=20, delay=1)
 
 window = Tk()
@@ -108,7 +109,7 @@ top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (580, 3
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (580, 33), job, type_="bottom")
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 canvas = Canvas(
     window,
diff --git a/Anime Version/Equip Title/gui.py b/Anime Version/Equip Title/gui.py
index 671f789..e8fbbeb 100644
--- a/Anime Version/Equip Title/gui.py	
+++ b/Anime Version/Equip Title/gui.py	
@@ -25,6 +25,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 import thesystem.titleequip
+import thesystem.misc
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -50,8 +51,8 @@ def ex_close(win):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
-    subprocess.Popen(['python', 'Anime Version/Status Tab/gui.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_close.py')])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Anime Version/Status Tab/gui.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=20, delay=1)
 
 
@@ -178,7 +179,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (580, 38), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (580, 33), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx.py')])
 
 canvas = Canvas(
     window,
diff --git a/Anime Version/Equipment/gui.py b/Anime Version/Equipment/gui.py
index 9de7cee..74602cc 100644
--- a/Anime Version/Equipment/gui.py	
+++ b/Anime Version/Equipment/gui.py	
@@ -28,6 +28,7 @@ import thesystem.equipmentbk
 import thesystem.system
 import thesystem.inventory
 import thesystem.equipmentbk as equipment
+from thesystem.misc import resource_path
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -86,7 +87,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (970, 40), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (970, 40), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -114,7 +115,7 @@ def ex_close():
             ujson.dump(tab_son_data,fin_tab_son,indent=4)
 
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=20, delay=1)
 
 def split_text(text, segment_length):
@@ -144,12 +145,12 @@ def open_select(cat):
     fw.writerow(rec)
     fout.close()
 
-    subprocess.Popen(['python', 'Anime Version/Equip Item/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Anime Version/Equip Item/gui.py')])
 
     ex_close()
 
 def set_effect_open():
-    subprocess.Popen(['python', 'Anime Version/Set Effects/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Anime Version/Set Effects/gui.py')])
 
 canvas = Canvas(
     window,
diff --git a/Anime Version/Fatigue/gui.py b/Anime Version/Fatigue/gui.py
index 56e8c13..8e3b6d4 100644
--- a/Anime Version/Fatigue/gui.py	
+++ b/Anime Version/Fatigue/gui.py	
@@ -29,6 +29,7 @@ project_root = os.path.abspath(os.path.join(current_dir, '../../'))
 sys.path.insert(0, project_root)
 
 import thesystem.system
+import thesystem.misc
 
 
 OUTPUT_PATH = Path(__file__).parent
@@ -84,7 +85,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (400, 19), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (400, 16), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -99,7 +100,7 @@ def move_window(event):
 
 def ex_close(win=0):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=35, delay=1)
 
 last_val=0
@@ -116,16 +117,16 @@ def fatigue_return():
         fatigue_max=stat_data["status"][0]["fatigue_max"]
         fatigue_percent=int((fatigue/fatigue_max)*100)
         if (last_val!=fatigue_percent) and (fatigue_percent<70):
-            subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_point.py')])
         elif (fatigue_percent>=70 and fatigue_percent<90) and warn1==False:
-            subprocess.Popen(['python', 'Files/Mod/default/sfx_error.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_error.py')])
             canvas.itemconfig(fat_val, fill="#FF0000")
             warn1=True
         elif (fatigue_percent>=70 and fatigue_percent<90):
-            subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_point.py')])
             canvas.itemconfig(fat_val, fill="#FF0000")
         elif fatigue_percent>=90:
-            subprocess.Popen(['python', 'Files/Mod/default/sfx_error.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_error.py')])
             canvas.itemconfig(fat_val, fill="#FF0000")
         
         last_val=fatigue_percent
diff --git a/Anime Version/Final Penalty/gui.py b/Anime Version/Final Penalty/gui.py
index 1b423e1..7678360 100644
--- a/Anime Version/Final Penalty/gui.py	
+++ b/Anime Version/Final Penalty/gui.py	
@@ -18,6 +18,7 @@ import ujson
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -86,7 +87,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (715, 41), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (715, 41), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])   
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])   
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -105,7 +106,7 @@ def ex_close(win):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=30, delay=1)
 
 
diff --git a/Anime Version/Info/gui.py b/Anime Version/Info/gui.py
index 27493b9..d7e488b 100644
--- a/Anime Version/Info/gui.py	
+++ b/Anime Version/Info/gui.py	
@@ -86,7 +86,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, misc.resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -112,7 +112,7 @@ def ex_close(win):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, misc.resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=20, delay=1)
 
 canvas = Canvas(
diff --git a/Anime Version/Instance Dungeon Confirm/gui.py b/Anime Version/Instance Dungeon Confirm/gui.py
index 4e35581..23e0541 100644
--- a/Anime Version/Instance Dungeon Confirm/gui.py	
+++ b/Anime Version/Instance Dungeon Confirm/gui.py	
@@ -26,6 +26,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 import thesystem.dungeon
+from thesystem.misc import resource_path
 
 with open("Files/Mod/presets.json", 'r') as pres_file:
     pres_file_data=ujson.load(pres_file)
@@ -79,7 +80,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (715, 41), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (715, 41), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -98,7 +99,7 @@ def ex_close(win):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=35, delay=1)
 
 rank='X'
diff --git a/Anime Version/Intro/gui.py b/Anime Version/Intro/gui.py
index 4ece8d3..7997f80 100644
--- a/Anime Version/Intro/gui.py	
+++ b/Anime Version/Intro/gui.py	
@@ -28,7 +28,6 @@ sys.path.insert(0, project_root)
 import thesystem.system
 import thesystem.misc as misc
 
-
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
 
@@ -87,7 +86,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, misc.resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -113,7 +112,7 @@ def ex_close(win):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, misc.resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=20, delay=1)
 
 canvas = Canvas(
diff --git a/Anime Version/Inventory/gui.py b/Anime Version/Inventory/gui.py
index 073223f..89423c6 100644
--- a/Anime Version/Inventory/gui.py	
+++ b/Anime Version/Inventory/gui.py	
@@ -21,6 +21,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 import thesystem.inventory
+from thesystem.misc import resource_path
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -79,7 +80,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (970, 40), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (970, 40), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -105,7 +106,7 @@ def ex_close(win):
         tab_son_data["Inventory"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=50, delay=1)
 
 canvas = Canvas(
@@ -201,7 +202,7 @@ for i, key in enumerate(rol[:24]):
 #    image=button_image_25,
 #    borderwidth=0,
 #    highlightthickness=0,
-#    command=lambda: subprocess.Popen(['python', 'Anime Version/Inventory Addition/gui.py']),
+#    command=lambda: subprocess.Popen([sys.executable, resource_path('Anime Version/Inventory Addition/gui.py')]),
 #    relief="flat"
 #)
 #button_25.place(
diff --git a/Anime Version/Item Data/gui.py b/Anime Version/Item Data/gui.py
index b7e5772..f024464 100644
--- a/Anime Version/Item Data/gui.py	
+++ b/Anime Version/Item Data/gui.py	
@@ -30,6 +30,7 @@ import thesystem.system
 import thesystem.equipmentbk as equipment
 import thesystem.inventory
 import thesystem.itemequip
+from thesystem.misc import resource_path
 
 
 window = Tk()
@@ -76,7 +77,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (957, 43), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (1026, 47), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 debuff_1_name=''
 debuff_2_name=''
@@ -109,8 +110,8 @@ def ex_close(win):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
-    subprocess.Popen(['python', 'Anime Version/Inventory/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
+    subprocess.Popen([sys.executable, resource_path('Anime Version/Inventory/gui.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=20, delay=1)
 
 typs='Item'
diff --git a/Anime Version/Leveled up/gui.py b/Anime Version/Leveled up/gui.py
index 1d7bfa5..98f20c4 100644
--- a/Anime Version/Leveled up/gui.py	
+++ b/Anime Version/Leveled up/gui.py	
@@ -15,6 +15,7 @@ import threading
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -77,7 +78,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (715, 41), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (715, 41), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 canvas = Canvas(
     window,
@@ -144,7 +145,7 @@ def ex_close(eve):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=5, delay=1)
 
 canvas.place(x = 0, y = 0)
diff --git a/Anime Version/Message/gui.py b/Anime Version/Message/gui.py
index cfc2c57..b02636d 100644
--- a/Anime Version/Message/gui.py	
+++ b/Anime Version/Message/gui.py	
@@ -25,6 +25,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 import thesystem.misc
+from thesystem.misc import resource_path
 
 with open("Files/Mod/presets.json", 'r') as pres_file:
     pres_file_data=ujson.load(pres_file)
@@ -80,7 +81,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (715, 41), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (715, 41), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])             
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])             
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -99,7 +100,7 @@ def ex_close(win):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=30, delay=1)
 
 canvas = Canvas(
diff --git a/Anime Version/New Items/gui.py b/Anime Version/New Items/gui.py
index f294c69..21df3f8 100644
--- a/Anime Version/New Items/gui.py	
+++ b/Anime Version/New Items/gui.py	
@@ -31,6 +31,7 @@ import thesystem.system
 import thesystem.misc as misc
 import thesystem.dailyquest as dailyquest
 import thesystem.quests as quests
+from thesystem.misc import resource_path
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -91,7 +92,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -110,7 +111,7 @@ def ex_close(win):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=20, delay=1)
 
 with open("Files\Temp Files\Quest Rewards.json", "r") as file:
diff --git a/Anime Version/Night Market/gui.py b/Anime Version/Night Market/gui.py
index f6e03eb..401f311 100644
--- a/Anime Version/Night Market/gui.py	
+++ b/Anime Version/Night Market/gui.py	
@@ -18,6 +18,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -81,7 +82,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (748, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (763, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
diff --git a/Anime Version/Penalty Quest Rewards/gui.py b/Anime Version/Penalty Quest Rewards/gui.py
index 3d6a2e3..ad8e542 100644
--- a/Anime Version/Penalty Quest Rewards/gui.py	
+++ b/Anime Version/Penalty Quest Rewards/gui.py	
@@ -15,6 +15,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -49,7 +50,7 @@ def ex_close(win):
 
 window = Tk()
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 initial_height = 0
 target_height = 669
diff --git a/Anime Version/Penalty Quest/gui.py b/Anime Version/Penalty Quest/gui.py
index 0971610..0d9c922 100644
--- a/Anime Version/Penalty Quest/gui.py	
+++ b/Anime Version/Penalty Quest/gui.py	
@@ -10,6 +10,7 @@ import ctypes
 import sys
 import psutil
 import numpy as np
+from thesystem.misc import resource_path
 
 # Hosts modification-related imports
 current_dir = os.path.dirname(os.path.abspath(__file__))
@@ -63,7 +64,7 @@ def close_programs_if_open(program_name1, program_name2):
     if program_name2 != "-":
         to_close.add(program_name2.lower())
 
-    for proc in psutil.process_iter(['name']):
+    for proc in psutil.process_iter(['name')]):
         try:
             pname = proc.info['name']
             if pname and pname.lower() in to_close:
@@ -74,7 +75,7 @@ def close_programs_if_open(program_name1, program_name2):
             pass
 
 def ex_close(eve):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=5, delay=1)
 
 canvas = Canvas(
diff --git a/Anime Version/Quest Info/gui.py b/Anime Version/Quest Info/gui.py
index 58df1ed..303bf13 100644
--- a/Anime Version/Quest Info/gui.py	
+++ b/Anime Version/Quest Info/gui.py	
@@ -26,6 +26,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.quests
 import thesystem.system
+from thesystem.misc import resource_path
 
 window = Tk()
 
@@ -62,7 +63,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (957, 43), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (1026, 47), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window.configure(bg = transp_clr)
 set_data=thesystem.misc.return_settings()
@@ -86,7 +87,7 @@ def move_window(event):
 
 def ex_close(win):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=50, delay=1)
 
 
@@ -634,7 +635,7 @@ elif typeof == "Common":
         with open("Files/Temp Files/Quest Reminder.csv", 'w', newline='') as csv_open:
             writer=csv.writer(csv_open)
             writer.writerow([name, ex_tr_txt])
-        subprocess.Popen(['python', "Anime Version/Quest Reminder/gui.py"])
+        subprocess.Popen([sys.executable, resource_path("Anime Version/Quest Reminder/gui.py")])
         ex_close(0)
     
     with open("Files/Player Data/Active_Quests.json", 'r') as fson:
@@ -691,7 +692,7 @@ elif typeof == "Common":
         ex_tr_txt=canvas.itemcget(ex_txt, "text")
         new_1=int(ex_tr_txt)+1
         be_new_1=f"{new_1}"
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         canvas.itemconfig(ex_txt, text=be_new_1)
         
 
diff --git a/Anime Version/Quest Reminder/gui.py b/Anime Version/Quest Reminder/gui.py
index 1d05d6c..fb3966f 100644
--- a/Anime Version/Quest Reminder/gui.py	
+++ b/Anime Version/Quest Reminder/gui.py	
@@ -21,6 +21,7 @@ import sys
 import os
 import atexit
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -84,7 +85,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (400, 19), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (400, 16), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 with open("Files/Temp Files/Quest Reminder.csv", "r") as f:
     reader = csv.reader(f)
@@ -121,7 +122,7 @@ def ex_close(win=0):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=35, delay=1)
 
 def check_castle_status(file_path, stop_event):
diff --git a/Anime Version/Quest adder/gui.py b/Anime Version/Quest adder/gui.py
index 5769370..3d5bebd 100644
--- a/Anime Version/Quest adder/gui.py	
+++ b/Anime Version/Quest adder/gui.py	
@@ -26,8 +26,9 @@ sys.path.insert(0, project_root)
 
 import thesystem.quests
 import thesystem.system
+from thesystem.misc import resource_path
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -67,7 +68,7 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 ft=13
diff --git a/Anime Version/Quests/gui.py b/Anime Version/Quests/gui.py
index 4412284..ee7ce78 100644
--- a/Anime Version/Quests/gui.py	
+++ b/Anime Version/Quests/gui.py	
@@ -26,6 +26,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.quests
 import thesystem.system
+from thesystem.misc import resource_path
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -80,7 +81,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (580, 38), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (580, 33), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window.configure(bg = "#FFFFFF")
 set_data=thesystem.misc.return_settings()
@@ -112,11 +113,11 @@ def ex_close(win):
     with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
         tab_son_data["Quest"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=30, delay=1)
 
 def questadd():
-    subprocess.Popen(['python', 'Anime Version/Quest adder/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Anime Version/Quest adder/gui.py')])
     ex_close(window)
 
 canvas = Canvas(
diff --git a/Anime Version/Rank up/gui.py b/Anime Version/Rank up/gui.py
index cb7e4e9..7f64f77 100644
--- a/Anime Version/Rank up/gui.py	
+++ b/Anime Version/Rank up/gui.py	
@@ -17,6 +17,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 import json
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
@@ -86,7 +87,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -112,7 +113,7 @@ def ex_close(win):
         stop_event.set()
         update_thread.join()
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=20, delay=1)
 
 canvas = Canvas(
@@ -183,7 +184,7 @@ with open("Files/Temp Files/Rank file.csv", "r") as f:
     reader = csv.reader(f)
     for row in reader:
         if len(row) == 1:
-            old_lvl = int(row[0])
+            old_lvl = int(row[0)])
             status_data = misc.load_ujson("Files/Player Data/Status.json")
             name = status_data["status"][0]["name"]
             level = status_data["status"][0]["level"]
diff --git a/Anime Version/Settings/gui.py b/Anime Version/Settings/gui.py
index f0b1f1d..8c16f45 100644
--- a/Anime Version/Settings/gui.py	
+++ b/Anime Version/Settings/gui.py	
@@ -27,6 +27,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 import thesystem.settings as settings
+from thesystem.misc import resource_path
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -84,7 +85,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (490, 34), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (490, 34), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 checkbox_var0 = IntVar(value=0)
 checkbox_var2 = IntVar(value=0)
@@ -146,7 +147,7 @@ def ex_close(win):
         tab_son_data["Settings"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=20, delay=1)
 
 def theme_open():
@@ -154,7 +155,7 @@ def theme_open():
         fw=csv.writer(info_open)
         fw.writerow(["True"])
         
-    subprocess.Popen(['python', 'First/Theme Check/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('First/Theme Check/gui.py')])
     ex_close(window)
 
 def info_open():
@@ -162,7 +163,7 @@ def info_open():
         fw=csv.writer(info_open)
         fw.writerow(["True"])
 
-    subprocess.Popen(['python', 'First/Info/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('First/Info/gui.py')])
     ex_close(window)
 
 def dailys_open():
@@ -170,7 +171,7 @@ def dailys_open():
         fw=csv.writer(info_open)
         fw.writerow(["True"])
 
-    subprocess.Popen(['python', 'First/Daily Quest Tweak/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('First/Daily Quest Tweak/gui.py')])
     ex_close(window)
 
 def penalty_open():
@@ -178,11 +179,11 @@ def penalty_open():
         fw=csv.writer(info_open)
         fw.writerow(["True"])
 
-    subprocess.Popen(['python', 'First/Penalty Tweak/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('First/Penalty Tweak/gui.py')])
     ex_close(window)
 
 def apply_changes():
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_button.py')])
     with open("Files/Player Data/Settings.json", 'r') as settings_open:
         setting_data=ujson.load(settings_open)
     setting_data["Settings"]["Transparency"] = float(entry_3.get())
diff --git a/Anime Version/Shop/gui.py b/Anime Version/Shop/gui.py
index fbc8e9a..2e7df17 100644
--- a/Anime Version/Shop/gui.py	
+++ b/Anime Version/Shop/gui.py	
@@ -25,6 +25,7 @@ project_root = os.path.abspath(os.path.join(current_dir, '../../'))
 sys.path.insert(0, project_root)
 
 import thesystem.system
+import thesystem.misc
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -83,7 +84,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (550, 38), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (550, 33), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -106,7 +107,7 @@ def ex_close(win):
     with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
         tab_son_data["Shop"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 with open("Files/Player Data/Status.json", 'r') as fson:
@@ -121,7 +122,7 @@ def open_prog(name, cat, rank, desc, value):
             rec=[name,cat,rank,desc,value]
             fw.writerow(rec)
 
-        subprocess.Popen(['python', 'Anime Version/Shop/gui1.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Anime Version/Shop/gui1.py')])
 
         ex_close(window)
 
diff --git a/Anime Version/Shop/gui1.py b/Anime Version/Shop/gui1.py
index 5089cbf..526df6a 100644
--- a/Anime Version/Shop/gui1.py	
+++ b/Anime Version/Shop/gui1.py	
@@ -23,8 +23,8 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 import thesystem.shop
-
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+import thesystem.misc
+subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame1")
diff --git a/Anime Version/Skill Info/gui.py b/Anime Version/Skill Info/gui.py
index 6fcddca..eaebb10 100644
--- a/Anime Version/Skill Info/gui.py	
+++ b/Anime Version/Skill Info/gui.py	
@@ -25,6 +25,7 @@ project_root = os.path.abspath(os.path.join(current_dir, '../../'))
 sys.path.insert(0, project_root)
 
 import thesystem.system
+from thesystem.misc import resource_path
 
 check=False
 
@@ -81,7 +82,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (957, 43), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (1026, 47), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -253,13 +254,13 @@ def delete():
     with open("Files/Player Data/Skill.json", 'w') as fols:
         ujson.dump(skills, fols, indent=6)
 
-    subprocess.Popen(['python', 'Anime Version/Skills Tab/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Anime Version/Skills Tab/gui.py')])
 
     window.quit()
 
 def update():
     if lvl!="MAX":
-        subprocess.Popen(['python', 'Anime Version/Skill Info/gui1.py'])
+        subprocess.Popen([sys.executable, resource_path('Anime Version/Skill Info/gui1.py')])
 
         window.quit()
 
@@ -515,7 +516,7 @@ button_1 = Button(
     image=button_image_1,
     borderwidth=0,
     highlightthickness=0,
-    command=lambda: (subprocess.Popen(['python', 'Anime Version/Skills Tab/gui.py']),window.quit()),
+    command=lambda: (subprocess.Popen([sys.executable, resource_path('Anime Version/Skills Tab/gui.py')]),window.quit()),
     relief="flat"
 )
 button_1.place(
diff --git a/Anime Version/Skill Info/gui1.py b/Anime Version/Skill Info/gui1.py
index b6d2e2b..e52ebae 100644
--- a/Anime Version/Skill Info/gui1.py	
+++ b/Anime Version/Skill Info/gui1.py	
@@ -24,6 +24,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 import thesystem.misc as misc
+from thesystem.misc import resource_path
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame1")
@@ -40,7 +41,7 @@ def up():
     screen_tr_txt=canvas_1.itemcget(screen_txt, "text")
     av_tr_txt=canvas_1.itemcget(av_txt, "text")
     if int(av_tr_txt)!=0:
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         new=int(screen_tr_txt)+1
         be_new=f"{new:03d}"
         canvas_1.itemconfig(screen_txt, text=be_new)
@@ -55,7 +56,7 @@ def down():
     screen_tr_txt=canvas_1.itemcget(screen_txt, "text")
     av_tr_txt=canvas_1.itemcget(av_txt, "text")
     if int(screen_tr_txt)!=0:
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         new=int(screen_tr_txt)-1
         be_new=f"{new:03d}"
         canvas_1.itemconfig(screen_txt, text=be_new)
@@ -99,16 +100,16 @@ def confirm():
     with open("Files/Player Data/Skill.json", 'w') as fin_skill:
         ujson.dump(data_main, fin_skill, indent=6)
 
-    subprocess.Popen(['python', 'Anime Version/Skill Info/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Anime Version/Skill Info/gui.py')])
 
     window.quit()
 
 def goback():
-    subprocess.Popen(['python', 'Anime Version/Skill Info/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Anime Version/Skill Info/gui.py')])
 
     window.quit()
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
diff --git a/Anime Version/Skill Use/gui.py b/Anime Version/Skill Use/gui.py
index b78c4c6..ffe4cb9 100644
--- a/Anime Version/Skill Use/gui.py	
+++ b/Anime Version/Skill Use/gui.py	
@@ -18,6 +18,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -79,7 +80,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (587, 19), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (587, 16), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -94,7 +95,7 @@ def move_window(event):
 
 def ex_close(eve):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8),daemon=True).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=5, delay=1)
 
 with open("Files/Temp Files/Skill Use.csv", "r") as f:
diff --git a/Anime Version/Skills Tab/gui.py b/Anime Version/Skills Tab/gui.py
index cf6dc04..51c5f08 100644
--- a/Anime Version/Skills Tab/gui.py	
+++ b/Anime Version/Skills Tab/gui.py	
@@ -26,6 +26,7 @@ project_root = os.path.abspath(os.path.join(current_dir, '../../'))
 sys.path.insert(0, project_root)
 
 import thesystem.system
+from thesystem.misc import resource_path
 
 
 OUTPUT_PATH = Path(__file__).parent
@@ -51,7 +52,7 @@ def ex_close(win):
         tab_son_data["Skill"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
     thesystem.system.animate_window_close(window, target_height, window_width, step=40, delay=1)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 stop_event=threading.Event()
@@ -94,7 +95,7 @@ top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (488, 3
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (609, 33), job, type_="bottom")
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 presets_data = thesystem.misc.load_ujson("Files/Mod/presets.json")
 
@@ -178,7 +179,7 @@ def open_prog(name):
             rec=[name]
             fw.writerow(rec)
 
-        subprocess.Popen(['python', 'Anime Version/Skill Info/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Anime Version/Skill Info/gui.py')])
 
         ex_close(window)
 
diff --git a/Anime Version/Status Tab/gui.py b/Anime Version/Status Tab/gui.py
index 73341ff..8d582a9 100644
--- a/Anime Version/Status Tab/gui.py	
+++ b/Anime Version/Status Tab/gui.py	
@@ -77,7 +77,7 @@ top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (488, 3
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (609, 33), job, type_="bottom")
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx.py')])
 
 presets_data = thesystem.misc.load_ujson("Files/Mod/presets.json")
 
@@ -86,7 +86,7 @@ status_data = thesystem.misc.load_ujson("Files/Player Data/Status.json")
 job_data = thesystem.misc.load_ujson("Files/Player Data/Job_info.json")
 
 def title_chng(event):
-    subprocess.Popen(['python', 'Anime Version/Equip Title/gui.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Anime Version/Equip Title/gui.py')])
 
     ex_close(0)
 
@@ -114,7 +114,7 @@ def update_fatigue_text(canvas, fatigue_val):
         # Update canvas text only if fatigue value has changed
         if current_fatigue_percent != loaded_fatigue_value:
             canvas.itemconfig(fatigue_val, text=f"{current_fatigue_percent}%")
-            subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_point.py')])
             loaded_fatigue_value = current_fatigue_percent
 
         # Wait for 3 minutes before updating again
@@ -151,7 +151,7 @@ def update_tabs_ujson(status='Open'):
 def ex_close(event=None):
     update_tabs_ujson('Close')
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_close.py')])
     stop_update_thread_func()
     if setting_data["Settings"]["Performernce (ANIME):"] != "True":
         stop_event.set()
@@ -180,8 +180,8 @@ canvas = Canvas(window, bg="#FFFFFF", height=716, width=488, bd=0, highlightthic
 canvas.place(x=0, y=0)
 
 def fatigue_window():
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
-    subprocess.Popen(['python', 'Anime Version/Fatigue/gui.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_button.py')])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Anime Version/Fatigue/gui.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -270,7 +270,7 @@ fin_xp=round(fin_list[1], 2)
 
 if re_check==True:
     try:
-        subprocess.Popen(["python", "Anime Version/Status Tab/gui.py"])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path("Anime Version/Status Tab/gui.py")])
         
         ex_close(0)
     except:
@@ -287,7 +287,7 @@ def update_stat(stat_name):
             status_data["status"][0][stat_name] += 1
             val=status_data["status"][0][stat_name]
             canvas.itemconfig(stat_text_widgets[stat_name], text=f"{val:03d}")
-            subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_point.py')])
             status_data["avail_eq"][0]["str_based" if stat_name in ["str", "agi", "vit"] else "int_based"] -= 1
             if stat_name=='vit':
                 status_data["status"][0]["fatigue_max"]+=20
@@ -304,7 +304,7 @@ def update_stat(stat_name):
         with open("Files/Temp Files/Urgent Temp.csv", 'w', newline='') as urgent_file:
             fr=csv.writer(urgent_file)
             fr.writerow([stat_name.upper()])
-        subprocess.Popen(['python', 'Anime Version/Urgent Quest/gui.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Anime Version/Urgent Quest/gui.py')])
         ex_close(0)
 
 stat_buttons = {
@@ -616,7 +616,7 @@ button_7 = Button(
     image=button_image_7,
     borderwidth=0,
     highlightthickness=0,
-    command=lambda: subprocess.Popen(['python', 'Anime Version/Statistics/gui.py']),
+    command=lambda: subprocess.Popen([sys.executable, thesystem.misc.resource_path('Anime Version/Statistics/gui.py')]),
     relief="flat"
 )
 button_7.place(
diff --git a/Anime Version/Urgent Quest PVE/gui.py b/Anime Version/Urgent Quest PVE/gui.py
index fa1001d..2d811ee 100644
--- a/Anime Version/Urgent Quest PVE/gui.py	
+++ b/Anime Version/Urgent Quest PVE/gui.py	
@@ -59,7 +59,7 @@ def ex_close(win):
         update_thread.join()
     thesystem.misc.update_screen("Daily","Close")
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=30, delay=1)
 
 def split_description(desc_full):
@@ -80,7 +80,7 @@ def split_description(desc_full):
     while len(parts) < 6:
         parts.append("")
     
-    return tuple(parts[:6])
+    return tuple(parts[:6)])
 
 
 window = Tk()
@@ -124,7 +124,7 @@ thesystem.system.animate_window_open(window, target_height, window_width, step=5
 top_preloaded_images = thesystem.system.preload_images(top_images, (488, 38))
 bottom_preloaded_images = thesystem.system.preload_images(bottom_images, (488, 33))
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window.configure(bg = "#FFFFFF")
 set_data=thesystem.misc.return_settings()
diff --git a/Anime Version/Urgent Quest/gui.py b/Anime Version/Urgent Quest/gui.py
index 06ffbe3..ded17b0 100644
--- a/Anime Version/Urgent Quest/gui.py	
+++ b/Anime Version/Urgent Quest/gui.py	
@@ -18,6 +18,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -50,8 +51,8 @@ def ex_close(win):
     if setting_data["Settings"]["Performernce (ANIME):"] != "True":
         stop_event.set()
         update_thread.join()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
-    subprocess.Popen(['python', 'Anime Version/Status Tab/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
+    subprocess.Popen([sys.executable, resource_path('Anime Version/Status Tab/gui.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=20, delay=1)
 
 window = Tk()
@@ -97,7 +98,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (1120, 47), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (1053, 43), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def complete():
     with open("Files/Player Data/Ability_Check.json", 'r') as ability_check_file:
diff --git a/Files/Checks/Daily_time_check.csv b/Files/Checks/Daily_time_check.csv
index 7170d41..71fc38d 100644
--- a/Files/Checks/Daily_time_check.csv
+++ b/Files/Checks/Daily_time_check.csv
@@ -1 +1 @@
-2025-08-17,False,Incomplete
+2025-08-22,False,Incomplete
diff --git a/Files/Checks/Message.csv b/Files/Checks/Message.csv
index 267b291..0aee9b6 100644
--- a/Files/Checks/Message.csv
+++ b/Files/Checks/Message.csv
@@ -1 +1 @@
-Quest Completed
+No Instance Keys
diff --git a/Files/Checks/theme_open.csv b/Files/Checks/theme_open.csv
index bc59c12..0ca9514 100644
--- a/Files/Checks/theme_open.csv
+++ b/Files/Checks/theme_open.csv
@@ -1 +1 @@
-False
+True
diff --git a/Files/Data/Dungeon_Rank.csv b/Files/Data/Dungeon_Rank.csv
index dc6a661..a85ca41 100644
--- a/Files/Data/Dungeon_Rank.csv
+++ b/Files/Data/Dungeon_Rank.csv
@@ -1 +1 @@
-E,Normal
+D,Normal
diff --git a/Files/Data/lowest_rank_item.csv b/Files/Data/lowest_rank_item.csv
index d119076..61d28f1 100644
--- a/Files/Data/lowest_rank_item.csv
+++ b/Files/Data/lowest_rank_item.csv
@@ -1,2 +1,2 @@
 Name,Description,Quantity,Category,Rank,Buff,Debuff,Value
-E Rank Instance Key,Instance Key to a E Rank Dungeon,1,Instance Keys,E,,,10000
+D Rank Instance Key,Instance Key to a D Rank Dungeon,1,Instance Keys,D,,,15000
diff --git a/Files/Player Data/Active_Quests.json b/Files/Player Data/Active_Quests.json
index c4d6909..e6d8799 100644
--- a/Files/Player Data/Active_Quests.json	
+++ b/Files/Player Data/Active_Quests.json	
@@ -10,5 +10,61 @@
                         "LVLADD": 10
                   }
             }
+      ],
+      "A Ronin's Path to Peace": [
+            {
+                  "desc": "Suhayl and Stanely need you to defend the realm.",
+                  "amt": 3,
+                  "amtval": "(Approx 500ML) Glasses of Water.",
+                  "type": "Common",
+                  "rank": "D",
+                  "ID": 201387,
+                  "Rewards": {
+                        "Coin Bag 500": 1
+                  },
+                  "skill": "Water"
+            }
+      ],
+      "Invincible Stand of Platinum": [
+            {
+                  "desc": "Peyton and Tyrone have a quest for you.",
+                  "amt": 20,
+                  "amtval": "Reps",
+                  "type": "Common",
+                  "Areas": [
+                        "Chest",
+                        "Shoulder",
+                        "Arms",
+                        "Core"
+                  ],
+                  "rank": "D",
+                  "ID": 277045,
+                  "Rewards": {
+                        "Coin Bag 500": 1,
+                        "Coin Bag 300": 1
+                  },
+                  "skill": "Shoulder Tap Pushups"
+            }
+      ],
+      "Super Saiyan Ascension": [
+            {
+                  "desc": "Mark Gorman and Rational send you on a mission.",
+                  "amt": 15,
+                  "amtval": "Reps",
+                  "type": "Common",
+                  "Areas": [
+                        "Chest",
+                        "Shoulder",
+                        "Arms",
+                        "Core"
+                  ],
+                  "rank": "E",
+                  "ID": 374562,
+                  "Rewards": {
+                        "Coin Bag 300": 1,
+                        "Coin Bag 100": 1
+                  },
+                  "skill": "Shoulder Tap Pushups"
+            }
       ]
 }
\ No newline at end of file
diff --git a/Files/Player Data/Inventory.json b/Files/Player Data/Inventory.json
index 9e26dfe..9594e11 100644
--- a/Files/Player Data/Inventory.json	
+++ b/Files/Player Data/Inventory.json	
@@ -1 +1,15 @@
-{}
\ No newline at end of file
+{
+    "Coin Bag 500": [
+        {
+            "desc": "A bag of 500-or-so coins",
+            "qty": 1,
+            "cat": "MONEY",
+            "rank": "D",
+            "buff": "",
+            "debuff": "",
+            "quest": true,
+            "rarity": "Common",
+            "Value": 500
+        }
+    ]
+}
\ No newline at end of file
diff --git a/Files/Player Data/Status.json b/Files/Player Data/Status.json
index dacc6df..a7d1ebb 100644
--- a/Files/Player Data/Status.json	
+++ b/Files/Player Data/Status.json	
@@ -12,7 +12,7 @@
             "per": 41,
             "man": 41,
             "XP": 1017,
-            "coins": 210,
+            "coins": 10,
             "fatigue_max": 510,
             "fatigue": 115.0,
             "last_level": 32,
diff --git a/Files/Player Data/Todays_Dungeon.json b/Files/Player Data/Todays_Dungeon.json
index cd47a53..525c627 100644
--- a/Files/Player Data/Todays_Dungeon.json	
+++ b/Files/Player Data/Todays_Dungeon.json	
@@ -1,11 +1,11 @@
 {
-      "2025-08-17": {
+      "2025-08-22": {
             "E": 2,
-            "D": 2,
-            "C": 5,
-            "B": 2,
-            "A": 1,
+            "D": 0,
+            "C": 3,
+            "B": 3,
+            "A": 0,
             "S": 0,
-            "Red Gate": 0
+            "Red Gate": 1
       }
 }
\ No newline at end of file
diff --git a/Files/Temp Files/Inventory temp.csv b/Files/Temp Files/Inventory temp.csv
index 56b95f7..9d55f05 100644
--- a/Files/Temp Files/Inventory temp.csv	
+++ b/Files/Temp Files/Inventory temp.csv	
@@ -1 +1 @@
-Demon Monarch's Ring,1,Preview
+Coin Bag 300
diff --git a/Files/Temp Files/Quest Rewards.json b/Files/Temp Files/Quest Rewards.json
index 5cfbe02..bc849a7 100644
--- a/Files/Temp Files/Quest Rewards.json	
+++ b/Files/Temp Files/Quest Rewards.json	
@@ -2,6 +2,6 @@
       "Type": "Quest",
       "Rewards": {
             "Coin Bag 500": 1,
-            "Ironclad Gauntlet": 1
+            "D Rank Instance Key": 1
       }
 }
\ No newline at end of file
diff --git a/Files/Temp Files/Quest Temp.csv b/Files/Temp Files/Quest Temp.csv
index 258d754..b006e16 100644
--- a/Files/Temp Files/Quest Temp.csv	
+++ b/Files/Temp Files/Quest Temp.csv	
@@ -1 +1 @@
-The Spirit of the Heart,741487,Common
+I Command Thee to Obey,325329,Common
diff --git a/Files/Temp Files/help.csv b/Files/Temp Files/help.csv
index 006b5ff..0d820fd 100644
--- a/Files/Temp Files/help.csv	
+++ b/Files/Temp Files/help.csv	
@@ -1 +1 @@
-Voice
+ABI Points
diff --git a/First/Calorie Penalty/gui.py b/First/Calorie Penalty/gui.py
index 9ebe5d9..7836fd6 100644
--- a/First/Calorie Penalty/gui.py	
+++ b/First/Calorie Penalty/gui.py	
@@ -20,7 +20,7 @@ window = Tk()
 
 # Configure the window
 window.geometry("1272x718")
-subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
 
 window.configure(bg="#000000")
 window.wm_attributes("-topmost", True)
@@ -62,7 +62,7 @@ if z<0:
     z=0
 
 if x==y or x>y:
-    subprocess.Popen(['python', 'Anime Version/Final Penalty/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Anime Version/Final Penalty/gui.py')])
     window.quit()
 
 # Create the canvas
@@ -78,7 +78,7 @@ canvas = Canvas(
 canvas.pack(fill="both", expand=True)
 
 def ex_close(eve):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     window.quit()
 
 # Load images
diff --git a/First/Cartenon Temple/gui.py b/First/Cartenon Temple/gui.py
index b990a45..acdca9d 100644
--- a/First/Cartenon Temple/gui.py	
+++ b/First/Cartenon Temple/gui.py	
@@ -29,7 +29,7 @@ import thesystem.system
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
@@ -79,7 +79,7 @@ def ex_close(win=window):
     win.quit()
 
 def ex_close_0(win=window):
-    subprocess.Popen(['python', 'First/Health Warning/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('First/Health Warning/gui.py')])
     win.quit()
 
 def confirming():
@@ -125,7 +125,7 @@ def play():
     window.after(5000, start)
 
 def answer():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     global confirm
 
     canvas.itemconfig("Sixth", state="hidden")
@@ -143,34 +143,34 @@ def start(c=0):
     global confirm
 
     if c==0:
-        subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+        subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
         canvas.itemconfig("Zero", state="hidden")
         canvas.itemconfig("First", state="normal")
     elif c==1:
-        subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+        subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
         canvas.itemconfig("Zero", state="hidden")
         canvas.itemconfig("First", state="hidden")
         canvas.itemconfig("Second", state="normal")
     elif c==2:
-        subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+        subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
         canvas.itemconfig("First", state="hidden")
         canvas.itemconfig("Second", state="hidden")
         canvas.itemconfig("Third", state="normal")
     elif c==3:
-        subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+        subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
         canvas.itemconfig("First", state="hidden")
         canvas.itemconfig("Second", state="hidden")
         canvas.itemconfig("Third", state="hidden")
         canvas.itemconfig("Fourth", state="normal")
     elif c==4:
-        subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+        subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
         canvas.itemconfig("First", state="hidden")
         canvas.itemconfig("Second", state="hidden")
         canvas.itemconfig("Third", state="hidden")
         canvas.itemconfig("Fourth", state="hidden")
         canvas.itemconfig("Fifth", state="normal")
     elif c==5:
-        subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+        subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
         canvas.itemconfig("First", state="hidden")
         canvas.itemconfig("Second", state="hidden")
         canvas.itemconfig("Third", state="hidden")
@@ -394,7 +394,7 @@ image_17 = canvas.create_image(
 )
 
 play()
-subprocess.Popen(['python', 'First/Cartenon Temple/gui1.py'])
+subprocess.Popen([sys.executable, resource_path('First/Cartenon Temple/gui1.py')])
 
 window.resizable(False, False)
 window.mainloop()
diff --git a/First/Cartenon Temple/gui1.py b/First/Cartenon Temple/gui1.py
index 1fb3298..35c6501 100644
--- a/First/Cartenon Temple/gui1.py	
+++ b/First/Cartenon Temple/gui1.py	
@@ -147,7 +147,7 @@ image_3 = canvas.create_image(
 )
 
 prog()
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window.resizable(False, False)
 window.mainloop()
diff --git a/First/Check/gui.py b/First/Check/gui.py
index 5618160..04515af 100644
--- a/First/Check/gui.py
+++ b/First/Check/gui.py
@@ -17,6 +17,7 @@ import time
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -60,7 +61,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window.geometry(f"{window_width}x{initial_height}")
 thesystem.system.animate_window_open(window, target_height, window_width, step=20, delay=1)
@@ -87,7 +88,7 @@ def move_window(event):
 
 
 def ex_close(eve):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=30, delay=1)
 
 def prog():
@@ -109,7 +110,7 @@ def end_prog():
     window.quit()  # Uncomment this line if you want to close the window after 20 seconds
 
 def fin(a):
-    subprocess.Popen(['python', 'First/Congrats/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('First/Congrats/gui.py')])
     window.quit()
 
 def no(a):
diff --git a/First/Congrats/gui.py b/First/Congrats/gui.py
index b2161a5..bbdc20a 100644
--- a/First/Congrats/gui.py
+++ b/First/Congrats/gui.py
@@ -17,6 +17,7 @@ import threading
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -59,7 +60,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 39), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window.geometry(f"{window_width}x{initial_height}")
 thesystem.system.animate_window_open(window, target_height, window_width, step=45, delay=1)
@@ -86,12 +87,12 @@ def move_window(event):
 
 
 def ex_close(eve):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=45, delay=1)
 
 def fin():
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
-    subprocess.Popen(['python', 'First/Info/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
+    subprocess.Popen([sys.executable, resource_path('First/Info/gui.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=45, delay=1)
 
 canvas = Canvas(
diff --git a/First/Daily Quest Tweak/gui.py b/First/Daily Quest Tweak/gui.py
index 429161b..ae7936d 100644
--- a/First/Daily Quest Tweak/gui.py	
+++ b/First/Daily Quest Tweak/gui.py	
@@ -18,6 +18,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -48,7 +49,7 @@ def move_window(event):
 
 def ex_close(win):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=20, delay=1)
 
 window = Tk()
@@ -81,7 +82,7 @@ bottom_images = f"thesystem/{all_prev}bottom_bar"
 top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (488, 38), job, type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (488, 33), job, type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window.configure(bg = "#FFFFFF")
 set_data=thesystem.misc.return_settings()
@@ -167,13 +168,13 @@ def entry_data():
                     theme_data=ujson.load(themefile)
                     theme=theme_data["Theme"]
 
-                subprocess.Popen(['Python', f'{theme} Version/Settings/gui.py'])
+                subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Settings/gui.py')])
                 with open("Files/Checks/daily_open.csv", 'w', newline='') as info_open:
                     fw=csv.writer(info_open)
                     fw.writerow(["False"])
             
             else:
-                subprocess.Popen(['python', 'First/Penalty Check/gui.py'])
+                subprocess.Popen([sys.executable, resource_path('First/Penalty Check/gui.py')])
             
             ex_close(window)
 
diff --git a/First/Game Over/gui.py b/First/Game Over/gui.py
index fc4bc85..d607ca1 100644
--- a/First/Game Over/gui.py	
+++ b/First/Game Over/gui.py	
@@ -24,6 +24,7 @@ project_root = os.path.abspath(os.path.join(current_dir, '../../'))
 sys.path.insert(0, project_root)
 
 import thesystem.system
+from thesystem.misc import resource_path
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -58,7 +59,7 @@ top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 3
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window.geometry(f"{window_width}x{initial_height}")
 thesystem.system.make_window_transparent(window)
@@ -88,7 +89,7 @@ def move_window(event):
 
 def ex_close(eve):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=25, delay=1)
 
 
@@ -195,12 +196,8 @@ def fade_out_text(text_id, shadow_id, step=20):
     # Calculate the new color by reducing its brightness
     # This creates a fade-to-black effect.
     new_hex_val = f"#{step*8:02x}{0:02x}{0:02x}"
-    
-    try:
-        canvas.itemconfig(text_id, fill=new_hex_val)
-    except tk.TclError:
-        # This handles cases where the window is closed during animation
-        return
+
+    canvas.itemconfig(text_id, fill=new_hex_val)
 
     # Schedule the next step of the fade
     canvas.after(50, fade_out_text, text_id, shadow_id, step - 1)
@@ -209,7 +206,7 @@ def fade_out_text(text_id, shadow_id, step=20):
 def animate_dots(base_text, dot_count=0, loop_count=0, max_loops=3):
     """Animates the '...' at the end of the blue text."""
     if loop_count >= max_loops:
-        subprocess.Popen(['python', 'First/Info/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('First/Info/gui.py')])
         ex_close(window)
         return
 
diff --git a/First/Health Warning/gui.py b/First/Health Warning/gui.py
index 17f59bd..999125b 100644
--- a/First/Health Warning/gui.py	
+++ b/First/Health Warning/gui.py	
@@ -17,6 +17,7 @@ import ujson
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -36,7 +37,7 @@ def relative_to_assets(path: str) -> Path:
 
 window = Tk()
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 initial_height = 0
 target_height = 549
@@ -68,8 +69,8 @@ def move_window(event):
 
 
 def ex_close(eve):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
-    subprocess.Popen(['python', 'First/Check/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
+    subprocess.Popen([sys.executable, resource_path('First/Check/gui.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=30, delay=1)
 
 canvas = Canvas(
diff --git a/First/Info/gui.py b/First/Info/gui.py
index 6c669da..ca75cf0 100644
--- a/First/Info/gui.py
+++ b/First/Info/gui.py
@@ -19,6 +19,7 @@ import csv
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -49,7 +50,7 @@ def move_window(event):
 
 def ex_close(eve):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=20, delay=1)
 
 def get():
@@ -117,14 +118,14 @@ def get():
                 theme_data=ujson.load(themefile)
                 theme=theme_data["Theme"]
 
-            subprocess.Popen(['Python', f'{theme} Version/Settings/gui.py'])
+            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Settings/gui.py')])
             with open("Files/Checks/info_open.csv", 'w', newline='') as info_open:
                 fw=csv.writer(info_open)
                 fw.writerow(["False"])
             ex_close(window)
         
         else:
-            subprocess.Popen(['python', 'First/Daily Quest Tweak/gui.py'])
+            subprocess.Popen([sys.executable, resource_path('First/Daily Quest Tweak/gui.py')])
             ex_close(window)
 
 def only_numbers(char):
@@ -149,7 +150,7 @@ window_width = 867
 
 window.geometry(f"{window_width}x{initial_height}")
 thesystem.system.animate_window_open(window, target_height, window_width, step=40, delay=1)
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window.configure(bg = "#FFFFFF")
 set_data=thesystem.misc.return_settings()
diff --git a/First/Main BMI/gui.py b/First/Main BMI/gui.py
index fc5a032..d90db04 100644
--- a/First/Main BMI/gui.py	
+++ b/First/Main BMI/gui.py	
@@ -43,8 +43,8 @@ def move_window(event):
 
 def ex_close(eve):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
-    subprocess.Popen(['python', 'First\Daily Quest Tweak\gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
+    subprocess.Popen([sys.executable, resource_path('First\Daily Quest Tweak\gui.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=30, delay=1)
 
 window = Tk()
@@ -55,7 +55,7 @@ window_width = 867
 
 window.geometry(f"{window_width}x{initial_height}")
 thesystem.system.animate_window_open(window, target_height, window_width, step=30, delay=1)
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window.configure(bg = "#FFFFFF")
 set_data=thesystem.misc.return_settings()
diff --git a/First/Patreon/gui.py b/First/Patreon/gui.py
index 44914c6..dc0bf46 100644
--- a/First/Patreon/gui.py
+++ b/First/Patreon/gui.py
@@ -33,7 +33,7 @@ def relative_to_assets(path: str) -> Path:
 
 
 window = Tk()
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 initial_height = 0
 target_height = 144
@@ -66,7 +66,7 @@ def move_window(event):
 
 def ex_close(win):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=30, delay=1)
 
 canvas = Canvas(
diff --git a/First/Penalty Check/gui.py b/First/Penalty Check/gui.py
index 53d634f..d51ad70 100644
--- a/First/Penalty Check/gui.py	
+++ b/First/Penalty Check/gui.py	
@@ -18,6 +18,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -48,7 +49,7 @@ def move_window(event):
 
 def ex_close(eve):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=20, delay=1)
 
 window = Tk()
@@ -157,14 +158,14 @@ def complete():
             theme_data=ujson.load(themefile)
             theme=theme_data["Theme"]
 
-        subprocess.Popen(['Python', f'{theme} Version/Settings/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Settings/gui.py')])
         with open("Files/Checks/penalty_open.csv", 'w', newline='') as info_open:
             fw=csv.writer(info_open)
             fw.writerow(["False"])
         ex_close(window)
     
     else:
-        subprocess.Popen(['python', 'First/Theme Check/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('First/Theme Check/gui.py')])
         ex_close(window)
 
 def only_numbers(char):
@@ -495,13 +496,13 @@ image_index = 0
 bot_image_index = 0
 
 # Top bar animation
-top_image = canvas.create_image(367.0, 28.0, image=top_preloaded_images[image_index])
+top_image = canvas.create_image(367.0, 28.0, image=top_preloaded_images[image_index)])
 
 canvas.tag_bind(top_image, "<ButtonPress-1>", start_move)
 canvas.tag_bind(top_image, "<B1-Motion>", move_window)
 
 # Bottom bar animation
-bottom_image = canvas.create_image(376.0, 375.0, image=bottom_preloaded_images[bot_image_index])
+bottom_image = canvas.create_image(376.0, 375.0, image=bottom_preloaded_images[bot_image_index)])
 
 
 def update_images():
diff --git a/First/Start/gui.py b/First/Start/gui.py
index 4f8668f..28a8559 100644
--- a/First/Start/gui.py
+++ b/First/Start/gui.py
@@ -17,6 +17,7 @@ import time
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -59,7 +60,7 @@ top_preloaded_images = thesystem.system.load_or_cache_images(top_images, (695, 3
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_images, (702, 36), job, type_="bottom")
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window.geometry(f"{window_width}x{initial_height}")
 thesystem.system.make_window_transparent(window)
@@ -89,7 +90,7 @@ def move_window(event):
 
 def ex_close(eve):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=25, delay=1)
 
 def prog():
@@ -108,7 +109,7 @@ def show_third():
 
 def end_prog():
     canvas.itemconfig("Third", state="hidden")
-    subprocess.Popen(['python', 'First/Cartenon Temple/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('First/Cartenon Temple/gui.py')])
     window.quit()
 
 
diff --git a/First/The Order/gui.py b/First/The Order/gui.py
index a2028ab..7dd902f 100644
--- a/First/The Order/gui.py	
+++ b/First/The Order/gui.py	
@@ -16,6 +16,7 @@ import sys
 import os
 import webbrowser
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -48,7 +49,7 @@ if job!='None':
     video='Alt Video'
     transp_clr='#652AA3'
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 initial_height = 0
 target_height = 510
@@ -81,7 +82,7 @@ def move_window(event):
 
 def ex_close(win):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=30, delay=1)
 
 canvas = Canvas(
diff --git a/First/Theme Check/gui.py b/First/Theme Check/gui.py
index ef83a74..85c933f 100644
--- a/First/Theme Check/gui.py	
+++ b/First/Theme Check/gui.py	
@@ -28,6 +28,7 @@ project_root = os.path.abspath(os.path.join(current_dir, '../../'))
 sys.path.insert(0, project_root)
 
 import thesystem.system
+from thesystem.misc import resource_path
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -49,7 +50,7 @@ def move_window(event):
 
 def ex_close(eve):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=20, delay=1)
 
 def name(eve,name):
@@ -73,7 +74,7 @@ def name(eve,name):
             theme=theme_data["Theme"]
 
     if istrue=='True':
-        subprocess.Popen(['Python', f'{theme} Version/Settings/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Settings/gui.py')])
         with open("Files/Checks/theme_open.csv", 'w', newline='') as info_open:
             fw=csv.writer(info_open)
             fw.writerow(["False"])
@@ -83,7 +84,7 @@ def name(eve,name):
         with open("Files/Player Data/First_open.csv", 'w', newline='') as info_open:
             fw=csv.writer(info_open)
             fw.writerow(["True"])
-        subprocess.Popen(['python', 'gui.py'])
+        subprocess.Popen([sys.executable, resource_path('gui.py')])
         ex_close(window)
 
 window = Tk()
@@ -116,7 +117,7 @@ bottom_size = (850, 47)
 top_preloaded_images = thesystem.system.load_or_cache_images(top_folder_path, top_size, job="NONE", type_="top")
 bottom_preloaded_images = thesystem.system.load_or_cache_images(bottom_folder_path, bottom_size, job="NONE", type_="bottom")
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 canvas = Canvas(
     window,
diff --git a/First/Vows/gui.py b/First/Vows/gui.py
index e7c6951..bee663f 100644
--- a/First/Vows/gui.py
+++ b/First/Vows/gui.py
@@ -25,7 +25,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -78,7 +78,7 @@ canvas = Canvas(
 )
 
 def next(eve):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_button.py')])
     global slide
     if slide == 1:
         canvas.itemconfig("s1",state="hidden")
@@ -96,14 +96,14 @@ def next(eve):
         canvas.itemconfig("s4", state="hidden")
         canvas.itemconfig("s5", state="normal")
         canvas.itemconfig("s6", state="hidden")
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_glitch.py')])
 
 def keep(eve):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_button.py')])
     window.quit()
 
 def remove(eve):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_button.py')])
     
     file_path= "Files/Player Data/Vow_status.json"
     # Create the file
diff --git a/Manwha Version/Accept Job Change/gui.py b/Manwha Version/Accept Job Change/gui.py
index d750a70..4544ae9 100644
--- a/Manwha Version/Accept Job Change/gui.py	
+++ b/Manwha Version/Accept Job Change/gui.py	
@@ -10,7 +10,9 @@ import ujson
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -27,7 +29,7 @@ ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
 def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 target_height=316
@@ -56,7 +58,7 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=20, delay=1)
     win.quit()
 
diff --git a/Manwha Version/All Jobs/gui.py b/Manwha Version/All Jobs/gui.py
index fe1a2e8..477caff 100644
--- a/Manwha Version/All Jobs/gui.py	
+++ b/Manwha Version/All Jobs/gui.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -34,7 +35,7 @@ def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
@@ -66,7 +67,7 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 
diff --git a/Manwha Version/All Jobs/gui1.py b/Manwha Version/All Jobs/gui1.py
index f22d609..370ef45 100644
--- a/Manwha Version/All Jobs/gui1.py	
+++ b/Manwha Version/All Jobs/gui1.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -34,7 +35,7 @@ def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
@@ -66,7 +67,7 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 
@@ -108,13 +109,13 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
diff --git a/Manwha Version/All Jobs/gui2.py b/Manwha Version/All Jobs/gui2.py
index 5d34afd..b2bf017 100644
--- a/Manwha Version/All Jobs/gui2.py	
+++ b/Manwha Version/All Jobs/gui2.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -34,7 +35,7 @@ def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
@@ -66,7 +67,7 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 
@@ -108,13 +109,13 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
diff --git a/Manwha Version/All Jobs/gui3.py b/Manwha Version/All Jobs/gui3.py
index f025518..8d11c31 100644
--- a/Manwha Version/All Jobs/gui3.py	
+++ b/Manwha Version/All Jobs/gui3.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -34,7 +35,7 @@ def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
@@ -66,7 +67,7 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 
@@ -109,13 +110,13 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
diff --git a/Manwha Version/All Jobs/gui4.py b/Manwha Version/All Jobs/gui4.py
index 732c9a0..0073483 100644
--- a/Manwha Version/All Jobs/gui4.py	
+++ b/Manwha Version/All Jobs/gui4.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -34,7 +35,7 @@ def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
@@ -66,7 +67,7 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 
@@ -109,13 +110,13 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
diff --git a/Manwha Version/All Jobs/gui5.py b/Manwha Version/All Jobs/gui5.py
index b51d2d0..5a28826 100644
--- a/Manwha Version/All Jobs/gui5.py	
+++ b/Manwha Version/All Jobs/gui5.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -34,7 +35,7 @@ def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
@@ -66,7 +67,7 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 
@@ -108,13 +109,13 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
diff --git a/Manwha Version/All Jobs/gui6.py b/Manwha Version/All Jobs/gui6.py
index 5b0d838..31a5e96 100644
--- a/Manwha Version/All Jobs/gui6.py	
+++ b/Manwha Version/All Jobs/gui6.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -34,7 +35,7 @@ def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
@@ -66,7 +67,7 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 
@@ -109,20 +110,20 @@ def prog():
     window.after(5000, second)
 
 def second():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="normal")
     window.after(5000, third)
 
 def third():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="normal")
     window.after(5000, fourth)
 
 def fourth():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="hidden")
@@ -130,7 +131,7 @@ def fourth():
     window.after(5000, fifth)
 
 def fifth():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="hidden")
@@ -139,7 +140,7 @@ def fifth():
     window.after(5000, sixth)
 
 def sixth():
-    subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+    subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
     canvas.itemconfig("First", state="hidden")
     canvas.itemconfig("Second", state="hidden")
     canvas.itemconfig("Third", state="hidden")
diff --git a/Manwha Version/Calorie Input/gui.py b/Manwha Version/Calorie Input/gui.py
index 4491268..23ae399 100644
--- a/Manwha Version/Calorie Input/gui.py	
+++ b/Manwha Version/Calorie Input/gui.py	
@@ -17,6 +17,7 @@ import pandas as pd
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 import ujson
 import threading
 
@@ -38,7 +39,7 @@ def relative_to_assets(path: str) -> Path:
 
 
 window = Tk()
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 initial_height = 0
 target_height = 109
@@ -71,7 +72,7 @@ def move_window(event):
 
 def ex_close(eve):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=12, delay=1)
 
 canvas = Canvas(
diff --git a/Manwha Version/Credits/gui.py b/Manwha Version/Credits/gui.py
index 78958e9..9df98c7 100644
--- a/Manwha Version/Credits/gui.py	
+++ b/Manwha Version/Credits/gui.py	
@@ -18,6 +18,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 import webbrowser
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
@@ -28,7 +29,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
 
@@ -74,7 +75,7 @@ def ex_close(win):
         tab_son_data["Credits"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=50, delay=1)
 
 def attri_show():
diff --git a/Manwha Version/Daily Quest Rewards/gui.py b/Manwha Version/Daily Quest Rewards/gui.py
index ca134d2..55606c2 100644
--- a/Manwha Version/Daily Quest Rewards/gui.py	
+++ b/Manwha Version/Daily Quest Rewards/gui.py	
@@ -18,6 +18,7 @@ import csv
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -49,7 +50,7 @@ def move_window(event):
 
 def ex_close(l=0):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=20, delay=1)
 
 window = Tk()
@@ -60,7 +61,7 @@ window_width = 555
 
 window.geometry(f"{window_width}x{initial_height}")
 thesystem.system.make_window_transparent(window)
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 thesystem.system.animate_window_open(window, target_height, window_width, step=30, delay=1)
 
 window.configure(bg = "#FFFFFF")
@@ -148,7 +149,7 @@ def get():
         tab_son_data=ujson.load(tab_son)
 
     if tab_son_data["Status"]=='Close':
-        subprocess.Popen(['python', 'Manwha Version/Status Tab/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Status Tab/gui.py')])
     ex_close()
 
 def secret_get():
@@ -200,7 +201,7 @@ def secret_get():
     with open("Files/Player Data/Tabs.json",'r') as tab_son:
         tab_son_data=ujson.load(tab_son)
     if tab_son_data["Status"]!='Open':
-        subprocess.Popen(['python', 'Manwha Version/Status Tab/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Status Tab/gui.py')])
     window.quit()
 
 def great_get():
@@ -252,7 +253,7 @@ def great_get():
     with open("Files/Player Data/Tabs.json",'r') as tab_son:
         tab_son_data=ujson.load(tab_son)
     if tab_son_data["Status"]!='Open':
-        subprocess.Popen(['python', 'Manwha Version/Status Tab/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Status Tab/gui.py')])
     window.quit()
 
 def give_rev():
diff --git a/Manwha Version/Daily Quest/gui.py b/Manwha Version/Daily Quest/gui.py
index 850b6e8..d6186a9 100644
--- a/Manwha Version/Daily Quest/gui.py	
+++ b/Manwha Version/Daily Quest/gui.py	
@@ -20,6 +20,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -75,7 +76,7 @@ def ex_close(win):
     with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
         tab_son_data["Daily"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=10, delay=1)
 
 with open("Files/Checks/Daily_time_check.csv", 'r') as Daily_date_check_file:
@@ -123,7 +124,7 @@ if full_check==False:
         tab_son_data["Daily"]='Open'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
 
-    subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
     window = Tk()
 
@@ -136,9 +137,9 @@ if full_check==False:
 
     window.configure(bg = "#FFFFFF")
     set_data=thesystem.misc.return_settings()
-transp_value=set_data["Settings"]["Transparency"]
+    transp_value=set_data["Settings"]["Transparency"]
 
-window.attributes('-alpha',transp_value)
+    window.attributes('-alpha',transp_value)
     window.overrideredirect(True)
     window.wm_attributes("-topmost", True)
 
@@ -421,7 +422,7 @@ window.attributes('-alpha',transp_value)
         height=20.0
     )
     def update_pushup():
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         #global pushup_txt
         current_text=int((((canvas.itemcget(pushup_txt, "text")).split("/"))[0])[1:])
         daily_quest_data["Player"]["Push"]+=1
@@ -429,7 +430,7 @@ window.attributes('-alpha',transp_value)
         canvas.itemconfig(pushup_txt, text=f"[{current_text+1}/{fl_push}]")
 
     def update_situp():
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         #global situp_txt
         current_text=int((((canvas.itemcget(situp_txt, "text")).split("/"))[0])[1:])
         daily_quest_data["Player"]["Sit"]+=1
@@ -437,7 +438,7 @@ window.attributes('-alpha',transp_value)
         canvas.itemconfig(situp_txt, text=f"[{current_text+1}/{fl_sit}]")
 
     def update_sqat():
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         #global situp_txt
         current_text=int((((canvas.itemcget(squat_txt, "text")).split("/"))[0])[1:])
         daily_quest_data["Player"]["Squat"]+=1
@@ -445,7 +446,7 @@ window.attributes('-alpha',transp_value)
         canvas.itemconfig(squat_txt, text=f"[{current_text+1}/{fl_sit}]")
 
     def update_run():
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         #global run_txt
         current_text=float((((canvas.itemcget(run_txt, "text")).split("/"))[0])[1:])
         daily_quest_data["Player"]["Run"]+=0.5
@@ -453,7 +454,7 @@ window.attributes('-alpha',transp_value)
         canvas.itemconfig(run_txt, text=f"[{current_text+0.5}/{fl_run}]")
 
     def update_int():
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         #global int_txt
         current_text=float((((canvas.itemcget(int_txt, "text")).split("/"))[0])[1:])
         daily_quest_data["Player"]["Int_type"]+=0.5
@@ -461,7 +462,7 @@ window.attributes('-alpha',transp_value)
         canvas.itemconfig(int_txt, text=f"[{current_text+0.5}/{fl_int}]")
 
     def update_sleep():
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         #global sleep_txt
         current_text=int((((canvas.itemcget(sleep_txt, "text")).split("/"))[0])[1:])
         daily_quest_data["Player"]["Sleep"]+=1
@@ -556,5 +557,5 @@ elif full_check==True:
         with open("Files/Temp Files/Daily Rewards.csv", 'w', newline='') as rew_csv_open:
             rew_fw=csv.writer(rew_csv_open)
             rew_fw.writerow(["Reward"])
-        subprocess.Popen(['python', 'Manwha Version/Daily Quest Rewards/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Daily Quest Rewards/gui.py')])
 
diff --git a/Manwha Version/Demon Castle/gui.py b/Manwha Version/Demon Castle/gui.py
index e9eee38..06e2670 100644
--- a/Manwha Version/Demon Castle/gui.py	
+++ b/Manwha Version/Demon Castle/gui.py	
@@ -18,6 +18,7 @@ import threading
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -28,7 +29,7 @@ sys.path.insert(0, project_root)
 import thesystem.system
 import thesystem.castle
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
 
@@ -143,7 +144,7 @@ def ex_close(win):
         tab_son_data["Castle"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=50, delay=1)
 
 
diff --git a/Manwha Version/Demon Castle/gui1.py b/Manwha Version/Demon Castle/gui1.py
index 7d2e3db..267ecd8 100644
--- a/Manwha Version/Demon Castle/gui1.py	
+++ b/Manwha Version/Demon Castle/gui1.py	
@@ -19,6 +19,7 @@ import threading
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 import random
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
@@ -31,7 +32,7 @@ import thesystem.system
 import thesystem.castle
 import thesystem.dungeon
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame1")
 
@@ -320,11 +321,11 @@ def next():
             ujson.dump(status_read_data, fson, indent=4)
 
         thesystem.system.get_fin_xp()
-        subprocess.Popen(['python', 'Manwha Version/Demon Castle/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Demon Castle/gui.py')])
         window.quit()
 
     else:
-        subprocess.Popen(['python', 'Files\Mod\default\sfx_glitch.py'])
+        subprocess.Popen([sys.executable, resource_path('Files\Mod\default\sfx_glitch.py')])
         mob_fun()
 
 canvas = Canvas(
diff --git a/Manwha Version/Dungeon Runs/gui.py b/Manwha Version/Dungeon Runs/gui.py
index 2fa9bca..22160f9 100644
--- a/Manwha Version/Dungeon Runs/gui.py	
+++ b/Manwha Version/Dungeon Runs/gui.py	
@@ -23,6 +23,7 @@ sys.path.insert(0, project_root)
 import thesystem.dungeon
 import thesystem.system
 import thesystem.misc
+from thesystem.misc import resource_path
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -373,9 +374,9 @@ class DungeonSystem:
     def ex_close(self):
         stop_event.set()
         threading.Thread(target=thesystem.system.fade_out, args=(self.window, 0.8)).start()
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
         thesystem.system.animate_window_close(self.window, 0, self.window_width, step=20, delay=1)
-        subprocess.Popen(['python', 'Manwha Version/Message/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Message/gui.py')])
         
     def start_dungeon(self):
         self.hide_activities_and_checkboxes()
diff --git a/Manwha Version/Dungeon/gui.py b/Manwha Version/Dungeon/gui.py
index 671721b..bbf68b1 100644
--- a/Manwha Version/Dungeon/gui.py	
+++ b/Manwha Version/Dungeon/gui.py	
@@ -18,6 +18,7 @@ import pandas as pd
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -42,7 +43,7 @@ with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
 def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
@@ -83,7 +84,7 @@ def ex_close(win):
         tab_son_data["Dungeons"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=20, delay=1)
 
 e_rank,d_rank,c_rank,b_rank,a_rank,s_rank=thesystem.dungeon.dun_check()
diff --git a/Manwha Version/Equip Item/gui.py b/Manwha Version/Equip Item/gui.py
index 55aca47..797a23c 100644
--- a/Manwha Version/Equip Item/gui.py	
+++ b/Manwha Version/Equip Item/gui.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -53,11 +54,11 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
-    subprocess.Popen(['python', 'Manwha Version\Equipment\gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version\Equipment\gui.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=30, delay=1)
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
diff --git a/Manwha Version/Equip Title/gui.py b/Manwha Version/Equip Title/gui.py
index e075f14..59cb1b8 100644
--- a/Manwha Version/Equip Title/gui.py	
+++ b/Manwha Version/Equip Title/gui.py	
@@ -15,6 +15,7 @@ import ujson
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -112,7 +113,7 @@ with open("Files/Player Data/Titles.json", 'r') as fson:
     except:
         print("", end='')
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
diff --git a/Manwha Version/Equipment/gui.py b/Manwha Version/Equipment/gui.py
index 772a18f..f27b982 100644
--- a/Manwha Version/Equipment/gui.py	
+++ b/Manwha Version/Equipment/gui.py	
@@ -13,6 +13,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -41,7 +42,7 @@ def relative_to_assets(path: str) -> Path:
 
 window = Tk()
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 initial_height = 0
 target_height = 479
@@ -82,7 +83,7 @@ def ex_close():
             ujson.dump(tab_son_data,fin_tab_son,indent=4)
 
     #threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=20, delay=1)
 
 def split_text(text, segment_length):
@@ -112,12 +113,12 @@ def open_select(cat):
     fw.writerow(rec)
     fout.close()
 
-    subprocess.Popen(['python', 'Manwha Version/Equip Item/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Equip Item/gui.py')])
 
     ex_close()
 
 def set_effect_open():
-    subprocess.Popen(['python', 'Manwha Version/Set Effects/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Set Effects/gui.py')])
 
 canvas = Canvas(
     window,
diff --git a/Manwha Version/Fatigue/gui.py b/Manwha Version/Fatigue/gui.py
index aa7868c..6dbb7ed 100644
--- a/Manwha Version/Fatigue/gui.py	
+++ b/Manwha Version/Fatigue/gui.py	
@@ -18,6 +18,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 import time
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
@@ -64,7 +65,7 @@ window.overrideredirect(True)
 window.wm_attributes("-topmost", True)
 
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 def start_move(event):
     window.lastx, window.lasty = event.widget.winfo_pointerxy()
@@ -79,7 +80,7 @@ def move_window(event):
 
 def ex_close(win=0):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=35, delay=1)
 
 last_val=0
@@ -96,16 +97,16 @@ def fatigue_return():
         fatigue_max=stat_data["status"][0]["fatigue_max"]
         fatigue_percent=int((fatigue/fatigue_max)*100)
         if (last_val!=fatigue_percent) and (fatigue_percent<70):
-            subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+            subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         elif (fatigue_percent>=70 and fatigue_percent<90) and warn1==False:
-            subprocess.Popen(['python', 'Files/Mod/default/sfx_error.py'])
+            subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_error.py')])
             canvas.itemconfig(fat_val, fill="#FF0000")
             warn1=True
         elif (fatigue_percent>=70 and fatigue_percent<90):
-            subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+            subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
             canvas.itemconfig(fat_val, fill="#FF0000")
         elif fatigue_percent>=90:
-            subprocess.Popen(['python', 'Files/Mod/default/sfx_error.py'])
+            subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_error.py')])
             canvas.itemconfig(fat_val, fill="#FF0000")
         
         last_val=fatigue_percent
diff --git a/Manwha Version/Final Penalty/gui.py b/Manwha Version/Final Penalty/gui.py
index 14c1cc1..052ba1e 100644
--- a/Manwha Version/Final Penalty/gui.py	
+++ b/Manwha Version/Final Penalty/gui.py	
@@ -14,6 +14,7 @@ import csv
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 import threading
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
@@ -34,7 +35,7 @@ def relative_to_assets(path: str) -> Path:
 
 
 window = Tk()
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 initial_height = 0
 target_height = 124
@@ -66,7 +67,7 @@ def move_window(event):
 
 def ex_close(eve):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=30, delay=1)
 
 canvas = Canvas(
diff --git a/Manwha Version/Info/gui.py b/Manwha Version/Info/gui.py
index 6d70687..7539418 100644
--- a/Manwha Version/Info/gui.py	
+++ b/Manwha Version/Info/gui.py	
@@ -18,6 +18,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -48,7 +49,7 @@ window.attributes('-alpha',transp_value)
 window.overrideredirect(True)
 window.wm_attributes("-topmost", True)
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 thesystem.system.center_window(window,window_width,target_height)
 thesystem.system.animate_window_open(window, target_height, window_width, step=40, delay=1)
@@ -72,7 +73,7 @@ def ex_close(win):
     with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
         tab_son_data["Intro"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=20, delay=1)
     win.quit()
 
diff --git a/Manwha Version/Instance Dungeon Confirm/gui.py b/Manwha Version/Instance Dungeon Confirm/gui.py
index a7c45aa..ae4835b 100644
--- a/Manwha Version/Instance Dungeon Confirm/gui.py	
+++ b/Manwha Version/Instance Dungeon Confirm/gui.py	
@@ -17,6 +17,7 @@ import pandas as pd
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -34,7 +35,7 @@ ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
 def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
@@ -69,7 +70,7 @@ def move_window(event):
 
 def ex_close(win):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=35, delay=1)
 
 
diff --git a/Manwha Version/Intro/gui.py b/Manwha Version/Intro/gui.py
index cf84cf9..8a6da5c 100644
--- a/Manwha Version/Intro/gui.py	
+++ b/Manwha Version/Intro/gui.py	
@@ -10,6 +10,7 @@ import ujson
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -26,7 +27,7 @@ ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
 def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 target_height=316
@@ -62,7 +63,7 @@ def ex_close(win):
     with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
         tab_son_data["Intro"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=20, delay=1)
     win.quit()
 
diff --git a/Manwha Version/Inventory/gui.py b/Manwha Version/Inventory/gui.py
index caccf7b..0b94ff5 100644
--- a/Manwha Version/Inventory/gui.py	
+++ b/Manwha Version/Inventory/gui.py	
@@ -12,6 +12,7 @@ import threading
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -44,7 +45,7 @@ window_width = 855
 
 window.geometry(f"{window_width}x{initial_height}")
 thesystem.system.make_window_transparent(window)
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 thesystem.system.animate_window_open(window, target_height, window_width, step=30, delay=1)
 
 window.configure(bg = "#FFFFFF")
@@ -75,7 +76,7 @@ def ex_close(win):
         tab_son_data["Inventory"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=50, delay=1)
 
 canvas = Canvas(
diff --git a/Manwha Version/Item Data/gui.py b/Manwha Version/Item Data/gui.py
index 1d8a4b6..05ddfd6 100644
--- a/Manwha Version/Item Data/gui.py	
+++ b/Manwha Version/Item Data/gui.py	
@@ -17,6 +17,7 @@ import threading
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -29,7 +30,7 @@ import thesystem.system
 import thesystem.equipmentbk as equipment
 import thesystem.inventory
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -85,8 +86,8 @@ def move_window(event):
 
 def ex_close(win):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
-    subprocess.Popen(['python', 'Manwha Version/Inventory/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Inventory/gui.py')])
     thesystem.system.animate_window_close(window, 0, window_width, step=20, delay=1)
 typs='Item'
 
diff --git a/Manwha Version/Leveled up/gui.py b/Manwha Version/Leveled up/gui.py
index d70b911..6360b6b 100644
--- a/Manwha Version/Leveled up/gui.py	
+++ b/Manwha Version/Leveled up/gui.py	
@@ -15,6 +15,7 @@ import threading
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -40,7 +41,7 @@ window_width = 513
 window.geometry(f"{window_width}x{initial_height}")
 thesystem.system.make_window_transparent(window)
 thesystem.system.center_window(window,window_width,target_height)
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window.configure(bg = "#FFFFFF")
 set_data=thesystem.misc.return_settings()
@@ -64,7 +65,7 @@ def move_window(event):
 
 def ex_close(eve):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=5, delay=1)
 
 canvas = Canvas(
diff --git a/Manwha Version/Message/gui.py b/Manwha Version/Message/gui.py
index 9a8d030..842c3ea 100644
--- a/Manwha Version/Message/gui.py	
+++ b/Manwha Version/Message/gui.py	
@@ -14,6 +14,7 @@ import csv
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -32,7 +33,7 @@ def relative_to_assets(path: str) -> Path:
 
 
 window = Tk()
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 initial_height = 0
 target_height = 124
@@ -63,7 +64,7 @@ def move_window(event):
 
 
 def ex_close(eve):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=30, delay=1)
 
 canvas = Canvas(
diff --git a/Manwha Version/Penalty Quest Rewards/gui.py b/Manwha Version/Penalty Quest Rewards/gui.py
index 3174c1d..461886d 100644
--- a/Manwha Version/Penalty Quest Rewards/gui.py	
+++ b/Manwha Version/Penalty Quest Rewards/gui.py	
@@ -15,6 +15,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -44,12 +45,12 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 window = Tk()
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 initial_height = 0
 target_height = 386
diff --git a/Manwha Version/Penalty Quest/gui.py b/Manwha Version/Penalty Quest/gui.py
index bb55fa4..12f44ee 100644
--- a/Manwha Version/Penalty Quest/gui.py	
+++ b/Manwha Version/Penalty Quest/gui.py	
@@ -6,6 +6,7 @@ import subprocess
 import ujson
 import os
 import numpy as np
+from thesystem.misc import resource_path
 import threading
 import ctypes
 import sys
@@ -63,7 +64,7 @@ def move_window(event):
 # Check and request admin rights
 # thesystem.penalty.run_as_admin()
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 with open("Files/Player Data/Penalty_Info.json", "r") as pen_info_file:
     pen_info_data = ujson.load(pen_info_file)
@@ -98,7 +99,7 @@ def close_programs_if_open(program_name1, program_name2):
             pass
 
 def ex_close(eve):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=5, delay=1)
 
 
diff --git a/Manwha Version/Quest Info/gui.py b/Manwha Version/Quest Info/gui.py
index 551bd9e..43436e6 100644
--- a/Manwha Version/Quest Info/gui.py	
+++ b/Manwha Version/Quest Info/gui.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -26,7 +27,7 @@ sys.path.insert(0, project_root)
 import thesystem.system
 import thesystem.quests
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
@@ -740,7 +741,7 @@ elif typeof == "Common":
         ex_tr_txt=canvas.itemcget(ex_txt, "text")
         new_1=int(ex_tr_txt)+1
         be_new_1=f"{new_1}"
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         canvas.itemconfig(ex_txt, text=be_new_1)
 
         if int(new_1)==int(num):
diff --git a/Manwha Version/Quest adder/gui.py b/Manwha Version/Quest adder/gui.py
index bc57df2..ef940de 100644
--- a/Manwha Version/Quest adder/gui.py	
+++ b/Manwha Version/Quest adder/gui.py	
@@ -17,6 +17,7 @@ import random
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -26,7 +27,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -66,7 +67,7 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 canvas = Canvas(
diff --git a/Manwha Version/Quests/gui.py b/Manwha Version/Quests/gui.py
index 010a768..9d8b929 100644
--- a/Manwha Version/Quests/gui.py	
+++ b/Manwha Version/Quests/gui.py	
@@ -25,8 +25,9 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 import thesystem.quests
+from thesystem.misc import resource_path
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -91,11 +92,11 @@ def ex_close(win):
     with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
         tab_son_data["Quest"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=30, delay=1)
 
 def questadd():
-    subprocess.Popen(['python', 'Manwha Version/Quest adder/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Quest adder/gui.py')])
     ex_close(window)
 
 canvas.place(x = 0, y = 0)
diff --git a/Manwha Version/Rank up/gui.py b/Manwha Version/Rank up/gui.py
index d7e0d39..95f8cdd 100644
--- a/Manwha Version/Rank up/gui.py	
+++ b/Manwha Version/Rank up/gui.py	
@@ -18,6 +18,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -48,7 +49,7 @@ window.attributes('-alpha',transp_value)
 window.overrideredirect(True)
 window.wm_attributes("-topmost", True)
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 thesystem.system.center_window(window,window_width,target_height)
 thesystem.system.animate_window_open(window, target_height, window_width, step=40, delay=1)
@@ -72,7 +73,7 @@ def ex_close(win):
     with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
         tab_son_data["Intro"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=20, delay=1)
     win.quit()
 
diff --git a/Manwha Version/Settings/gui.py b/Manwha Version/Settings/gui.py
index a29e227..3ee2361 100644
--- a/Manwha Version/Settings/gui.py	
+++ b/Manwha Version/Settings/gui.py	
@@ -18,6 +18,7 @@ import pandas as pd
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -41,7 +42,7 @@ with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
 def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
@@ -100,7 +101,7 @@ def theme_open():
         fw=csv.writer(info_open)
         fw.writerow(["True"])
         
-    subprocess.Popen(['python', 'First/Theme Check/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('First/Theme Check/gui.py')])
     ex_close(window)
 
 def info_open():
@@ -108,7 +109,7 @@ def info_open():
         fw=csv.writer(info_open)
         fw.writerow(["True"])
 
-    subprocess.Popen(['python', 'First/Info/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('First/Info/gui.py')])
     ex_close(window)
 
 def dailys_open():
@@ -116,7 +117,7 @@ def dailys_open():
         fw=csv.writer(info_open)
         fw.writerow(["True"])
 
-    subprocess.Popen(['python', 'First/Daily Quest Tweak/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('First/Daily Quest Tweak/gui.py')])
     ex_close(window)
 
 def penalty_open():
@@ -124,7 +125,7 @@ def penalty_open():
         fw=csv.writer(info_open)
         fw.writerow(["True"])
 
-    subprocess.Popen(['python', 'First/Penalty Tweak/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('First/Penalty Tweak/gui.py')])
     ex_close(window)
 
 def ex_close(win):
@@ -135,11 +136,11 @@ def ex_close(win):
         tab_son_data["Settings"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=20, delay=1)
 
 def apply_changes():
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_button.py')])
     with open("Files/Player Data/Settings.json", 'r') as settings_open:
         setting_data=ujson.load(settings_open)
     setting_data["Settings"]["Transparency"] = float(entry_3.get())
diff --git a/Manwha Version/Shop/gui.py b/Manwha Version/Shop/gui.py
index b5f9d51..5541843 100644
--- a/Manwha Version/Shop/gui.py	
+++ b/Manwha Version/Shop/gui.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -25,7 +26,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -102,7 +103,7 @@ def ex_close(win):
     with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
         tab_son_data["Shop"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 with open("Files/Player Data/Status.json", 'r') as fson:
@@ -117,13 +118,13 @@ def open_prog(name, cat, rank, desc, value):
             rec=[name,cat,rank,desc,value]
             fw.writerow(rec)
 
-        subprocess.Popen(['python', 'Manwha Version/Shop/gui1.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Shop/gui1.py')])
 
         ex_close(window)
 
 def sell_tab():
     if lvl>=5:
-        subprocess.Popen(['python', 'Manwha Version/Shop Sell/gui1.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Shop Sell/gui1.py')])
 
         ex_close(window)
 
diff --git a/Manwha Version/Shop/gui1.py b/Manwha Version/Shop/gui1.py
index bad5c5d..2eed6ae 100644
--- a/Manwha Version/Shop/gui1.py	
+++ b/Manwha Version/Shop/gui1.py	
@@ -15,6 +15,7 @@ import random
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -25,7 +26,7 @@ sys.path.insert(0, project_root)
 import thesystem.system
 import thesystem.shop
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame1")
diff --git a/Manwha Version/Skill Info/gui.py b/Manwha Version/Skill Info/gui.py
index 1cd5a25..0f1c070 100644
--- a/Manwha Version/Skill Info/gui.py	
+++ b/Manwha Version/Skill Info/gui.py	
@@ -16,6 +16,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -25,7 +26,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -64,7 +65,7 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=25, delay=1)
     win.quit()
 
@@ -214,7 +215,7 @@ def preview(nameob,quantity):
             fw=csv.writer(new_csv_open)
             rec=[nameob, quantity]
             fw.writerow(rec)
-        subprocess.Popen(['python', 'Manwha Version/Preview Item/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Preview Item/gui.py')])
 
 def delete():
     with open("Files/Player Data/Skill.json", 'r') as fols:
@@ -225,13 +226,13 @@ def delete():
     with open("Files/Player Data/Skill.json", 'r') as fols:
         ujson.dump(skills, fols, indent=6)
 
-    subprocess.Popen(['python', 'Manwha Version/Skills Tab/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Skills Tab/gui.py')])
 
     ex_close(window)
 
 def update():
     if lvl!="MAX":
-        subprocess.Popen(['python', 'Manwha Version/Skill Info/gui1.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Skill Info/gui1.py')])
 
         ex_close(window)
 
@@ -418,7 +419,7 @@ button_1 = Button(
     image=button_image_1,
     borderwidth=0,
     highlightthickness=0,
-    command=lambda: (subprocess.Popen(['python', 'Manwha Version/Skills Tab/gui.py']),ex_close(window)),
+    command=lambda: (subprocess.Popen([sys.executable, resource_path('Manwha Version/Skills Tab/gui.py')]),ex_close(window)),
     relief="flat"
 )
 button_1.place(
diff --git a/Manwha Version/Skill Info/gui1.py b/Manwha Version/Skill Info/gui1.py
index b8bdfa3..9b6a70d 100644
--- a/Manwha Version/Skill Info/gui1.py	
+++ b/Manwha Version/Skill Info/gui1.py	
@@ -12,7 +12,10 @@ import csv
 import ujson
 import subprocess
 import cv2
+import sys
 from PIL import Image, ImageTk
+from thesystem.misc import resource_path
+import thesystem.system
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame1")
@@ -27,7 +30,7 @@ def up():
     screen_tr_txt=canvas_1.itemcget(screen_txt, "text")
     av_tr_txt=canvas_1.itemcget(av_txt, "text")
     if int(av_tr_txt)!=0:
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         new=int(screen_tr_txt)+1
         be_new=f"{new:03d}"
         canvas_1.itemconfig(screen_txt, text=be_new)
@@ -42,7 +45,7 @@ def down():
     screen_tr_txt=canvas_1.itemcget(screen_txt, "text")
     av_tr_txt=canvas_1.itemcget(av_txt, "text")
     if int(screen_tr_txt)!=0:
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
         new=int(screen_tr_txt)-1
         be_new=f"{new:03d}"
         canvas_1.itemconfig(screen_txt, text=be_new)
@@ -85,16 +88,16 @@ def confirm():
     with open("Files/Player Data/Skill.json", 'w') as fin_skill:
         ujson.dump(data_main, fin_skill, indent=6)
 
-    subprocess.Popen(['python', 'Manwha Version/Skill Info/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Skill Info/gui.py')])
 
     window.quit()
 
 def goback():
-    subprocess.Popen(['python', 'Manwha Version/Skill Info/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Skill Info/gui.py')])
 
     window.quit()
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 window = Tk()
 
diff --git a/Manwha Version/Skills Tab/gui.py b/Manwha Version/Skills Tab/gui.py
index ca89df8..3356814 100644
--- a/Manwha Version/Skills Tab/gui.py	
+++ b/Manwha Version/Skills Tab/gui.py	
@@ -15,6 +15,7 @@ import ujson
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -24,7 +25,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -75,22 +76,22 @@ def ex_close(win):
     with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
         tab_son_data["Skill"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 
 def job():
-    subprocess.Popen(['python', 'Manwha Version/Skills Tab/gui3.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Skills Tab/gui3.py')])
 
     ex_close(window)
 
 def active():
-    subprocess.Popen(['python', 'Manwha Version/Skills Tab/gui2.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Skills Tab/gui2.py')])
 
     ex_close(window)
 
 def passive():
-    subprocess.Popen(['python', 'Manwha Version/Skills Tab/gui1.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Skills Tab/gui1.py')])
 
     ex_close(window)
 
diff --git a/Manwha Version/Skills Tab/gui1.py b/Manwha Version/Skills Tab/gui1.py
index 431eca6..36d9461 100644
--- a/Manwha Version/Skills Tab/gui1.py	
+++ b/Manwha Version/Skills Tab/gui1.py	
@@ -17,6 +17,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -26,7 +27,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame1")
@@ -71,8 +72,8 @@ def move_window(event):
 
 def ex_close(win):
     thesystem.system.animate_window_close(window, target_height, window_width, step=40, delay=1)
-    subprocess.Popen(['python', 'Manwha Version/Skills Tab/gui.py'])
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Skills Tab/gui.py')])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 name1=name2=name3=name4=name5=name6='-'
@@ -119,7 +120,7 @@ def open_prog(name):
             rec=[name]
             fw.writerow(rec)
         
-        subprocess.Popen(['python', 'Manwha Version/Skill Info/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Skill Info/gui.py')])
 
         window.quit()
 
diff --git a/Manwha Version/Skills Tab/gui2.py b/Manwha Version/Skills Tab/gui2.py
index 75687dd..84558dc 100644
--- a/Manwha Version/Skills Tab/gui2.py	
+++ b/Manwha Version/Skills Tab/gui2.py	
@@ -17,6 +17,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -26,7 +27,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame2")
@@ -66,9 +67,9 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Manwha Version/Skills Tab/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Skills Tab/gui.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=40, delay=1)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     win.quit()
 
 name1=name2=name3=name4=name5=name6='-'
@@ -115,7 +116,7 @@ def open_prog(name):
             rec=[name]
             fw.writerow(rec)
         
-        subprocess.Popen(['python', 'Manwha Version/Skill Info/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Skill Info/gui.py')])
 
         window.quit()
 
diff --git a/Manwha Version/Skills Tab/gui3.py b/Manwha Version/Skills Tab/gui3.py
index 1341b23..8b2d5b5 100644
--- a/Manwha Version/Skills Tab/gui3.py	
+++ b/Manwha Version/Skills Tab/gui3.py	
@@ -17,6 +17,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -26,7 +27,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH2 = OUTPUT_PATH / Path(r"assets\frame3")
@@ -66,8 +67,8 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Manwha Version/Skills Tab/gui.py'])
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Skills Tab/gui.py')])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=40, delay=1)
     window.quit()
 
@@ -107,7 +108,7 @@ def open_prog(name):
             rec=[name]
             fw.writerow(rec)
 
-        subprocess.Popen(['python', 'Manwha Version/Skill Info/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Skill Info/gui.py')])
 
         ex_close(window)
 
diff --git a/Manwha Version/Status Tab/gui.py b/Manwha Version/Status Tab/gui.py
index 6322c29..7624954 100644
--- a/Manwha Version/Status Tab/gui.py	
+++ b/Manwha Version/Status Tab/gui.py	
@@ -21,6 +21,7 @@ import pandas as pd
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -52,7 +53,7 @@ window_width = 355
 window.geometry(f"{window_width}x{initial_height}")
 thesystem.system.animate_window_open(window, target_height, window_width, step=40, delay=1)
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 window.configure(bg = "#FFFFFF")
 set_data=thesystem.misc.return_settings()
 transp_value=set_data["Settings"]["Transparency"]
@@ -81,12 +82,12 @@ def ex_close(eve):
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
 
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     stop_update_thread_func()
     thesystem.system.animate_window_close(window, initial_height, window_width, step=20, delay=1)
 
 def title_chng(event):
-    subprocess.Popen(['python', 'Manwha Version/Equip Title/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Equip Title/gui.py')])
 
     ex_close(0)
 
@@ -174,8 +175,8 @@ def start_job(event):
         ujson.dump(data, fson, indent=4)
 
 def fatigue_window():
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
-    subprocess.Popen(['python', 'Manwha Version/Fatigue/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_button.py')])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Fatigue/gui.py')])
 
 canvas = Canvas(
     window,
@@ -315,7 +316,7 @@ fin_xp=round(fin_list[1], 2)
 
 if re_check==True:
     try:
-        subprocess.Popen(["python", "Manwha Version/Status Tab/gui.py"])
+        subprocess.Popen([sys.executable, resource_path("Manwha Version/Status Tab/gui.py")])
         
         ex_close(0)
     except:
@@ -333,7 +334,7 @@ def update_stat(stat_name):
             data["status"][0][stat_name] += 1
             val=data["status"][0][stat_name]
             canvas.itemconfig(stat_text_widgets[stat_name], text=f"{val:03d}")
-            subprocess.Popen(['python', 'Files/Mod/default/sfx_point.py'])
+            subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_point.py')])
             data["avail_eq"][0]["str_based" if stat_name in ["str", "agi", "vit"] else "int_based"] -= 1
             if stat_name=='vit':
                 data["status"][0]["fatigue_max"]+=20
@@ -350,7 +351,7 @@ def update_stat(stat_name):
         with open("Files/Temp Files/Urgent Temp.csv", 'w', newline='') as urgent_file:
             fr=csv.writer(urgent_file)
             fr.writerow([stat_name.upper()])
-        subprocess.Popen(['python', 'Manwha Version/Urgent Quest/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('Manwha Version/Urgent Quest/gui.py')])
         ex_close(0)
 
 # / =================================================
diff --git a/Manwha Version/Urgent Quest/gui.py b/Manwha Version/Urgent Quest/gui.py
index 33b345a..e103354 100644
--- a/Manwha Version/Urgent Quest/gui.py	
+++ b/Manwha Version/Urgent Quest/gui.py	
@@ -17,6 +17,7 @@ from PIL import Image, ImageTk
 import sys
 import os
 import numpy as np
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -26,7 +27,7 @@ sys.path.insert(0, project_root)
 
 import thesystem.system
 
-subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx.py')])
 
 OUTPUT_PATH = Path(__file__).parent
 ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")
@@ -94,8 +95,8 @@ def move_window(event):
 
 
 def ex_close(win):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
-    subprocess.Popen(['python', 'Manwha Version/Status Tab/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Status Tab/gui.py')])
     thesystem.system.animate_window_close(window, target_height, window_width, step=20, delay=1)
 
 with open("Files/Temp Files/Urgent Temp.csv", 'r') as urgent_file:
diff --git a/README.md b/README.md
index 48a2bb6..144e8ae 100644
--- a/README.md
+++ b/README.md
@@ -1,6 +1,84 @@
-# The-System
-A groundbreaking, cutting edge, anime self improvement and workout system.
+# The System (Solo Levelling)
+This is just a fun project I made, trying to emulate and fulfil the function that The 'System' in Solo Levelling had. (THIS IS JUST A TESTING VERSION!)
+
+Context:
 
 In the Anime/Manga/Light Novel, Solo Levelling, The MC has a screen only he can see that allows him to 'Level Up' his Physical Attributes such as, Strength, Agility, Vitality, Perception and Intellect. 
 
-This Program is made to simulate that system by helping the user get motivation to work-out and gamify their life.
\ No newline at end of file
+This Program is made to simulate that system by helping the user get motivation to work-out and gamify their life.
+
+The GUI for this program is made using [Figma](https://www.figma.com/) and [Tkinter-Designer](https://github.com/ParthJadhav/Tkinter-Designer/tree/master) 
+![Status Tab](Status_Tab.png)
+
+## Installation
+
+This is only for a Windows machine. Linux Port is WIP
+
+Install [Python](https://www.python.org/downloads/)
+
+Use the package manager [pip](https://pip.pypa.io/en/stable/) to install these modules. Usually PIP is insatlled with Python
+
+Please run the installer.bat file to install all the necesarry modules in the right versions. Or you can download the modules yourself using the CMD lines below
+
+Tkinter
+
+```bash
+pip install tk
+```
+PathLib
+
+```bash
+pip install pathlib
+```
+
+Psutil
+
+```bash
+pip install psutil
+```
+
+Pillow
+
+```bash
+pip install Pillow
+```
+
+Open CV2
+
+```bash
+pip install opencv-python
+```
+
+Pandas
+
+```bash
+pip install pandas
+```
+
+Urllib
+
+```bash
+pip install urllib3
+```
+
+
+Also Install all the fonts in the (fonts folder)[Fonts/Montserrat-VariableFont_wght.ttf] to get the best experience.
+
+## Usage
+
+Run the The System Shortcut file (or The System.lnk) file in the main folder to start the program. 
+If it doesn't work, please use the main.bat file
+
+
+## Contributing
+
+To Pull requests, please open an issue first
+to discuss what you would like to change.
+
+Please make sure that any new line of code works with all of the appropriate functions
+
+I would also love any suggestions to the program
+
+## License
+
+[CC](https://github.com/santisoler/cc-licenses)
diff --git a/gui.py b/gui.py
index 1b3d13f..2f08d12 100644
--- a/gui.py
+++ b/gui.py
@@ -43,7 +43,7 @@ def relative_to_assets(path: str) -> Path:
     return ASSETS_PATH / Path(path)
 
 if os.path.exists("thesystem/temp 7x2.txt"):
-    subprocess.Popen(['python', 'npy_creator.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('npy_creator.py')])
 
 def get_base_path():
     """Get the correct base path for file operations"""
@@ -91,7 +91,7 @@ if vow==False:
     thesystem.system.fix_7x()
     thesystem.system.replace_code_from_txt(r"thesystem\\update_txt.txt", "update.py")
     if os.path.exists("thesystem/temp 7x2.txt"):
-        subprocess.Popen(["python", "crash_fix.py"])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path("crash_fix.py")])
     
     thing=txt='None'
     stop_thread = False  # Global flag to control the thread
@@ -258,17 +258,17 @@ if vow==False:
             json.dump(data, stfson, indent=4)
 
         if abi=="STR":
-            subprocess.Popen(['python', f'{theme} Version/All Jobs/gui.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/All Jobs/gui.py')])
         elif abi=="AGI":
-            subprocess.Popen(['python', f'{theme} Version/All Jobs/gui1.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/All Jobs/gui1.py')])
         elif abi=="VIT":
-            subprocess.Popen(['python', f'{theme} Version/All Jobs/gui2.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/All Jobs/gui2.py')])
         elif abi=="INT":
-            subprocess.Popen(['python', f'{theme} Version/All Jobs/gui3.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/All Jobs/gui3.py')])
         elif abi=="PER":
-            subprocess.Popen(['python', f'{theme} Version/All Jobs/gui4.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/All Jobs/gui4.py')])
         elif abi=="MAN":
-            subprocess.Popen(['python', f'{theme} Version/All Jobs/gui5.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/All Jobs/gui5.py')])
 
     def check_for_job():
         while not stop_event1.is_set():
@@ -283,7 +283,7 @@ if vow==False:
                     with open("Files/Player Data/Job_info.json", 'w') as fina_fson:
                         json.dump(data, fina_fson, indent=4)
             
-                    subprocess.Popen(['python', f'D:/Projects/System/{theme} Version/Accept Job Change/gui.py'])
+                    subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'D:/Projects/System/{theme} Version/Accept Job Change/gui.py')])
                     canvas.itemconfig("job", state='normal')
                     timer_func()
                     stop_event1.set()
@@ -316,7 +316,7 @@ if vow==False:
     def open_home(event):
         global show_bar
 
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_button.py')])
         home_items = [
             "home", "home1", "home2", "home3", "home4", "home5", 
             "home6", "home7", "home8", "home9", "home10", "home11", 
@@ -344,7 +344,7 @@ if vow==False:
             show_bar = False
 
     def update_open(event):
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_button.py')])
         stop_event.set()
         stop_event0.set()
         stop_event1.set()
@@ -355,8 +355,8 @@ if vow==False:
 
         # Wait for the threads to finish
 
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
-        subprocess.Popen(['python', 'update.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_close.py')])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('update.py')])
         if os.path.exists("window_positions.json"):
             os.remove("window_positions.json")
         window.quit()
@@ -381,9 +381,9 @@ if vow==False:
             theme = get_theme()
             gui_path = os.path.join(f"{theme} Version", gui_subpath, "gui.py")
             
-            subprocess.Popen(['python', gui_path])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path(gui_path)])
             if play_sfx:
-                subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
+                subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_button.py')])
 
     # Handlers for each tab
     def open_cal(e):        open_tab("Calories", "Calorie Input")
@@ -400,7 +400,7 @@ if vow==False:
     def shop_open(e):       open_tab("Shop", "Shop")
     
     def close_full(event):
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_button.py')])
         stop_event.set()
         stop_event0.set()
         stop_event1.set()
@@ -415,7 +415,7 @@ if vow==False:
         if os.path.exists("window_positions.json"):
             os.remove("window_positions.json")
 
-        subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_close.py')])
         sys.exit()
 
     def intro(event):
@@ -433,8 +433,8 @@ if vow==False:
                 json.dump(tab_son_data,fin_tab_son,indent=4)
 
             inv_name=f"{theme} Version/Intro/gui.py"
-            subprocess.Popen(['python', inv_name])
-            subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path(inv_name)])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx_button.py')])
 
     def show_job():
         canvas.itemconfig("job", state="normal")
diff --git a/gui.spec b/gui.spec
new file mode 100644
index 0000000..263eeaa
--- /dev/null
+++ b/gui.spec
@@ -0,0 +1,75 @@
+# gui.spec
+
+import os
+
+# --- Helper function to find all Python scripts ---
+def get_all_scripts(directory='.'):
+    scripts = []
+    # Exclude common virtual environment folders
+    exclude_dirs = {os.path.join(directory, 'venv'), os.path.join(directory, '.venv')}
+    for root, _, files in os.walk(directory):
+        # Check if the current root is a subdirectory of any excluded directory
+        if any(root.startswith(ex_dir) for ex_dir in exclude_dirs):
+            continue
+        for file in files:
+            if file.endswith('.py'):
+                scripts.append(os.path.join(root, file))
+    return scripts
+
+# ---------------------------------------------------
+
+# Get all python scripts for the Analysis
+all_project_scripts = get_all_scripts()
+
+a = Analysis(
+    # CORRECT: Pass all scripts directly into the Analysis constructor
+    all_project_scripts,
+    pathex=[],
+    binaries=[],
+    datas=[
+        ('assets', 'assets'),
+        ('Files', 'Files'),
+        ('Fonts', 'Fonts'),
+        ('Anime Version', 'Anime Version'),
+        ('Manwha Version', 'Manwha Version')
+    ],
+    hiddenimports=[],
+    hookspath=[],
+    runtime_hooks=[],
+    excludes=[],
+    win_no_prefer_redirects=False,
+    win_private_assemblies=False,
+    cipher=None,
+    noarchive=False
+)
+
+pyz = PYZ(a.pure, a.zipped_data, cipher=None)
+
+exe = EXE(
+    pyz,
+    a.scripts,
+    a.binaries,
+    a.zipfiles,
+    a.datas,
+    [],
+    name='The System',
+    debug=False,
+    bootloader_ignore_signals=False,
+    strip=False,
+    upx=True,
+    upx_exclude=[],
+    runtime_tmpdir=None,
+    console=False, # This is the same as --windowed
+    icon=None # You can add an icon path here, e.g., 'assets/icon.ico'
+)
+
+coll = COLLECT(
+    exe,
+    a.binaries,
+    a.zipfiles,
+    a.datas,
+    strip=False,
+    upx=True,
+    upx_exclude=[],
+    name='The System'
+)
\ No newline at end of file
diff --git a/npy_creator.py b/npy_creator.py
index 690d141..d7f00f1 100644
--- a/npy_creator.py
+++ b/npy_creator.py
@@ -8,13 +8,14 @@ the corresponding npy files with the correct dimensions and job types, plus proc
 """
 
 import os
-import sys
 import numpy as np
 from PIL import Image
 from pathlib import Path
 import time
 import cv2
 
+import sys
+
 def video_to_npy(video_path, output_path, resize_factor=None, rotate=False):
     """
     Convert video to NPY format.
diff --git a/npy_creator_gui.py b/npy_creator_gui.py
index da6cc08..f23c34e 100644
--- a/npy_creator_gui.py
+++ b/npy_creator_gui.py
@@ -10,6 +10,7 @@ style of the update.py file and starts automatically.
 import os
 import sys
 import numpy as np
+from thesystem.misc import resource_path
 from PIL import Image, ImageTk
 import time
 import threading
diff --git a/patch_1.0.0_to_1.1.0.diff b/patch_1.0.0_to_1.1.0.diff
new file mode 100644
index 0000000..e69de29
diff --git a/thesystem/__pycache__/castle.cpython-39.pyc b/thesystem/__pycache__/castle.cpython-39.pyc
index 7b4d90582efe1c42b7ad9a205cee74b803c530cb..96a1ac3b7e24032f39c2a1cf59b5183dae1d022a 100644
GIT binary patch
delta 1801
zcma)6&2Jk;6yI6z+Uxat?Zl2_=UX(8Zqg=Em4MVnrKnMX(3YeiKGK8PcqaBXyIyy8
zoHmk6ky<X5Kq^zjp?oCbLJ=2KREZ-u4qV{I04I=8_!BrWZyidK6JGiEX5O25^S<xR
z{W)j5*{rF^-_F}#G>#m(YY(9h?oKV-R50?5RRb$n_0xg5Y9a+Euy$Kn&0rlTCADxL
zPGj>nTFv4Nwj{^KS!_$1!#SLnG>?05ucSS=fQyp$V)TmQly>2{iw+W5N}{k$Yoyw8
zS)+!4zxVt4y9P4Sa`X37wUhj^dZv<*o5%)nGLH;oqb}0S!*A3nbW)cBk*E{qB!q@t
z=F*hpPy+z;bOAgSS=aZgwJ>P;gb`ff6>SjZAI@v<=<^9UsY!T%L?UAJfhyGLS%JL6
zI?M&^)fgx_eVYH3o<n_n)Eu1>+G5xw6x2A0-3n;yk+Ay`z&vcT0G0$Eq|Z3C2-^}s
z8Q`F$bWrlDz#rm2neUF~<x=P^>NT0rsoSg*>1sP@QHTxg=bM=oB>4B4C6wa@YqBEJ
z>wXy0YO@^(vq`SAYP_cwf6W>z9(oI`o8)(_&(S=e&JLqT{CxJKab{l0FsqZguVC{N
z^%knDI|wN(+d;P^#fr>lh9i3ljqv04e5Mdv_-ca$gtzT6(-wNv@;yc;_-FRuGqYgl
zQ2+-Hno)bLMZ+42BB3vbEz*=h--?7uu9I4uxobY5syxVlv7biI^WNMOLkEo(8BBt(
zSzY()4fY{l&Xu(RL@#kaH;lgGcXBu8Sn^7W8Q6GidHRa<sH1e0ZEFWGyQ4rA<IH>d
zo<A0!&yS9RCv*g?)X(~1L`3qe8!>6nC<w;*_5AoEq?Yzca8#j1jI@M~iSKSXHk|;`
zV^8TZ*uDs`1OVkg&jYCZ$9#0`pjY&Qlx)j?x7?A1j;fX{`Ds){^a5}745Jed-|xAG
z2KKU}%j^{QWk<t(yi#~_=FzNz;_pp~xP%SdkIT3szX3e>ajK4Pq&lfi5)UmX4DJMl
zsfqmlJIvTlci+In|3)y*`3V2EaB3yab~0ivYey8iSLi<3Bz_zd+AkUOIB*kg-4lsT
zkBLN!P>~4SW*pkxBpew7I18}Imx@22=XihLhL@$U1M3Y5!U|-CxOGy65}{MT|KIVI
zhn+NC05#fr6gFuNuD=Yh46wp~?K?7ZFaa=_uDKLfYjMiI<in*&G{9ddji9Ttw#xiw
z=^iTZV*lc~4bTC%odkt;7h2N|h)7|=T+ff>7)i-S-Kd7^`v#D?;CoSbc>D(Uhxn)c
z7sn5|1Ottp0F}vFBlK#-(P*3J%g(9TSO(&FoE4>57HGBG3Ts<cc<^T_j$q6varu;x
zhAfqCaaIn|Tl|mm%rVG}oRtZG)2GmvLa&8>NDq&ojuidQpRH7G!pc$Oc}9C-UFa4#
z*cjKgNU;q$nh2%mBunI3gUD`XB$)1!IHMxX8kD%$Yu4j75cYq^0xzn?4c{GTFz#qP
zG%v~3<+v^ARbXxbfIa)HjiV9=#8?PI-1f<7D9LC{f+4$S|7WR&ZS<HMM#eCW8N>Vs
DttFQ&

delta 1715
zcmZuxO>7%Q6yDkO&w6dI?bvag=C>s+*@mW3o2Y`ip(1Icrd1&=RKf&Vi)U)PS?`+J
zO+qA>BGF1*5GsRIsT9-*2@#2(qTV=gfGbEy9FT?+5(q_HkhpQ;y>%%~#IE*xv+vEk
znfKl|@Av8VrcFDYHWYZC{N`@s_P(3uAbI`fMEO~jYS)#DP9ro5GC>Per-|#NVo-x7
zL6f8@ng*GoCe46M(=5$_G-(gbgUnEJQL%cr(e?Qn5ucYzU;gzHIikb=-_OlGwfut5
zxWCNWUahe_@2$IzXH$Rq`35_5al;Q->rl&Xx})PqEOALa*`I)AzKPCaS)vn@bdekP
zzfdR0r3e_LR%d~w$q2Oro5w)I;|RE87to1J+m2JMd9Aj?0!I5l<@W$6Q5F2g)B;Hn
zLyeIb;hFnWkvF0<Dj2y2utlWi2YgGF>g1Fp&E1}jGHuoZbUj-Zza^$gLF_R`#w(F|
z&t)9lSlV_!ddmWApGBC#-xNYp*v9;L9*4aMc(PqP@I9b=8TA9=d*jAP28J@)=1n({
zQEt0+2Enhk+8hhYi{jPf5~+x9lZ(U@X6j&nC2`sDJYIEITNT4)uLafcAGTgfjTUz1
zi5~?Y<Kjl@BXU$&=^=7YETnG@Q==1qU!lnl)VjJ!h!Pkb@+L^CK($jsH7CfBm^5ed
zm{S>ra<-U^wKsx>=L**xol456-*%b--;Wctn!hGv>%18-F7>YT*7+o!{{X_{;%l={
z{9(?JIk7jhZ*b=!Ws<U%=T<K_>y1E&YNiw^5PnYFDVAb$u-yMxd{sOqe#o4jMEX8B
za_ma{ir!H=%H6~!qOqwUscGu%=z~DgVlg{1h9U4F02!TgJRjniv;Dwfd>9QQ2q(o`
z*|8ZcCoce4s*C`4+cHX-V{cf=Fv<s!;G}~Hrw~qyKePT5JHz1%VEGWfF4KXD<7x_6
zISG8{3*w#J5IJ!Fv)no<&_X8)W$1lah6pW++5G;)_ofsQzApmOK8U(R`{^Ed2k79P
zc%590cjBEG9V#mUu6Z{<vDbKXO`zY!%Rb!ARan*$@oWA#=@Fxa(g}=`7ZD}^q-NKf
zQd?^VQfos6wU+IM8QTu8Uznm<ocuJxNzpERN6O+v?@GnsOQ^blPEsxA`*xjGy*6{X
zg?c2%|ECQMR)QbHb&<=y=W=Wc{0zb(!da0kJ~q5FuQJWqy3J{|7S`_*aiMq+F6Y(a
zFj)bvd<wCh>6=e8T#qX)jhDpjzTtt;P1rSzveWdtcl&3YHXwfNJ3qGTnAnB*6o8D?
z8eX%;tO)nSsgiX(bmXEr^i}{f5USc`?<*TsxV$Srf!W7apoE1lk_btu+!tFV4{mXP
z|KV$xa%gaxv*v_XL`G|#<MG{HVhyJK0-uk(RG?GF{{7U5%F$}6VGH6p9A~?U#&d_%
zl<{B%Itt_b8Bob=&|rSpk*`g5Wmr0y2pXK(wCUEn?FO4s*fjV#93hqY3WAS-yFPNx
l{}QX0TOM6?*ern={vd!3jDPs5x~b=k6+NjNx^`GM{sAL-dYAwJ

diff --git a/thesystem/__pycache__/dailyquest.cpython-39.pyc b/thesystem/__pycache__/dailyquest.cpython-39.pyc
index 9b0eea82abec5f8d6d2869c22ddf31e56fffd802..ed550e5fb859a7a8e029e0a130156e0f7416efe1 100644
GIT binary patch
delta 2172
zcmcgtO>7%Q6yE3cuE)Dx$4Q(t{%hqnP2+^nLYo$nluDGJQk68cRiQaFbv>iRv7MON
zb<)750TmSqiT(}Zf(pqEN})nIAUGf@4oDST5Ql0H2!w>_0f_?#1Q+J56XHe{>WQ`V
z&G%;Cy!rg??wgx~Zwy8AmSrgN+W*S?6T?H7qiJw1_jWHR6w1NTAXTVZ)++j_4hjuY
z?KNdIM0FaHBcX(b<rt<0HRWi~2({#B(kN|`V}!<Nvm7l7N0nU59o%F%2Ogn$hdIRx
zlicFWp04o%8>{A>i2|n7uTMVu1;AT=E6@StVLA0z&;9}NgW3;7#DhCw*Ybhj0RT;0
z);b_2u4!|S6rK9c1m<!dc1q@vapsKi{8T9?s(L>Ri`yh4zS7^5D+{3>NQn!f{*CL_
zSh%Jz!3w1@&SoDMKZO!-T>Kp>CWBa9!@BxWhqHXi(~jrMHO7<TEa~f8SI59Qwx4%M
zuCa*(1tMTT5Af0D+eE-2EXDyLj?gaQ4(9O~vM@pv!xm&s$OaIG5cVSMlW?aSS%>)4
z*tY!{qz5JBbUunag^)(bNbrK?qV0IW5}UJg8b2W{^U2h`bUQ_-%<LngVh+Nj_`uA-
zyW(r}^|V7K!;ax<?<h2UHE<5b14|&^3`IU+L(oXU^zG4(O|S|RUZiWptSdNzo9nZ@
z=rHb)`Zzt?Ak469r>lIrz--&oMy9K5%2Vw*+cVf1R;W4o(`Ck0Swsw2`*yEWY|(tN
zJU3S5Y^KO&r(~9mt|<`n%|^?+fG>y}Rt9F4zqJkm`_T>3NJ?>yl6EP`54s^gvQ{G9
zk0L9P=11mAMEoea5*co+r1}-ie_3ReiK&*)miuGRLejA&qfV2%N!pfOv&~WHX7P6O
z)=huxP{9A4kchLi?Ofnu_xxtM#m&-A;Wckvc%(7Mg~iyC%yonQKQK9WLoTXErn{&d
zndYKuWW+_q$ii;Z3ae|!xw>{_b?wMhY9!<*uPF(|ZQY}Yvn?NjBYIl1C);r^YQ+^<
zN9XOhUqdAKY>4E(YmxkC8QMk@H2J1_abP~>kj1c@T7vnsn_e{N)^U(8lNgJ&i7#4P
z!4TiI_CeQ`_@ltZKztBB7Blg_&^DSLSC>GXinqa^;>-Bn-rbGPIObyHKi%Gv4cX`K
zT5&JGw=9J0Ta8((j$cxzuKXXai!&`Z)G#;1=k3{(*BcxU^Xm<cW3=WtMr)4C=>8oa
z-p~q*tB&tc4V#Et8wTNtyFCAWLmONWBOQBtziIU5K0G(=^j$0N>G?*}KGm4D>bc)u
zx`)M3qA$ZO`C*T0M;%tR{kB-|oPH0DiB}W5Ha#yB_zRe2JuREGY&c^xewQxejdt;U
z;-MWCq}V7t?Wug(W**r;U8$CtOfKQA!w6M`7ZK$9m)xFt4(W&lFL;dCSgyITxr+12
zu1@T7+(vK^Y6vq3vj}GpRB<zzhB@(Ta$kt|;7qUROkHbx3F*rSF2X#*S@CnKJG-vg
z#p*{>z2z08>RItXx+;&qtLeiMe@h=;NU9O&2}FRvjsU+RE9Ii~PU{N_U};||s`8@F
z1e1-{VU-6fMZ4fPS-uN%h7pb<_$SFEvIPVzSwCdgX(L0GX<F+nv&Zmx*c}pxRDnt)
P21u49h(UCcCgFbo2&f6$

delta 2013
zcmcgtUrbw79KNT$_xASQ-nL4C7K*h)pk--bOmwV6G)y-aq(m4)LS&V5vey3foD0}_
z7vi79s7toxn5Z!(u*7Jx_@F$Qm__%XzUzz4UVJ1mMosj=7~}cf!rBq^(Kh|g_uczD
zzw`Bj`|F!0zDoPErm0KfHFj$=_jUT3KZ?#@JDkY4vHY5}C}RbyVpXsQYhqQg7wcm6
zU<3Qas$moR#p=ZY92BdL(X5obX9pTiCsAF)S&LZt68ZF-UlCf|{@fKtBg5k6pL3JP
zm(DUm*%GN%R&q-xE9>QAC5ze8T#lq>Ys@00R4JP;-=7#s@*muzNaX?fC>q(Glusih
z^UF#Y`T2)R4TX73JsN?o)PW;{)wK)6TBg}@VSpFZQ8dN3)Gx%YXFY=`!r$<W-nXyb
zg!+{nSt%@2vi>N)?TMf{{)Z>u<%Y&G^i*dpO0tEzGM_E35*p?;EtT5WM~6PlsXHU~
zFin7jd`L%wh%N{hJ=?!%YiJ4@QUq`>KuEw2)KWh%F90wa1Qq~x4B$9G8em+&P6Aj5
z|4bhkItBE!fTT(nfJXqj0J;U#<zk*$b-6%lEUD0QTr(c;KFGV3w~B<#@SKs3<;2Dn
zFuC_q1p$|n;=|tMw~W_2u-8`Jm$3eU>w;?wAqh+3KfvI`x6<Z>rij01iPY6<&B|5E
z{5xO2rZv3HaAbBwn+|oh`dpP(RtRHtWu{UkW&Wf&@z6e#CeG%IwdE=$Yk9I>1S1fX
zgn~}SkaRzyHos~1AiRCsJcG#hwv2t<lC2k%t1>-ldmLr%D%DZGU8Ok6*j1XN{JToG
zg9W$K!MMYGdu;oyfa(h2xE&K|9NJ66l5j5{Z|{w}+0Vlga^BAfgzLEdRo9ior9=1u
zJC6JK%k8}zG80cnv&u%B=9bX5?07fmdD~-yZ(ynoo`ESg_ywlf;1!tH4(zgqYq-{M
z4XoiBm>cU63CoHUk?c19Uf_mXp=CbN79R`3S=bCoqK`_0a9)cNXSOJDZd380&KT<F
zna;y*mC5{4X9^AQ8=VgeRpgma8hy;;;S@^nAA=Eb?KfTsrw2T2xb>S`#-{IIvh0gp
zysPq{B>OgQw$|+Bc-39L{QqRh-wAx;*680N$ynM;H(Rm<)yxu9GfPm-EQPw0WeUCB
zlBAdYC6XL->+D!dmO6VyWI5jVW$SnUk0g8J2Gj4VJt)iGUV}}yR_&$fJn6}43Imca
zL{i~JW!559=FF_dSaSxPpI?tW7&|Mf=)8bM^OTsP7NN^)&KP|jZiM*nkt3r8pzui7
zl_#=AM(WyRrBp2vQJjZcPXUwxDgaf07x;YFP)`Qvw1B!iM^{PG-#Y&I^{)Q*8K|HD
z48Q_d<v(>rjWwWAfFADcp5RY+f7HGX@<o6ez(s(UxIdaOTE-E7EZUA%`MGEnh4{D8
zjKFYDW+UYGp+T1qX=vC*uZW#VqcMk_GhNWiF*5>e3SbVv8QL&$sSN-d8^32QCyHxz
h?L?`9SBvBk2$#VRhbE2^$GNn)7SVK7Q?;n({RiRn(K`SD

diff --git a/thesystem/__pycache__/dungeon.cpython-39.pyc b/thesystem/__pycache__/dungeon.cpython-39.pyc
index 5d2794474930e1a067a6b56e2202b37794fcb893..6bc395606a976ea7695588cd06101b21d54d8576 100644
GIT binary patch
delta 4395
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

delta 4354
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

diff --git a/thesystem/__pycache__/equipmentbk.cpython-39.pyc b/thesystem/__pycache__/equipmentbk.cpython-39.pyc
index c041a1e42845007ff2205ba98465b1f7fca9888b..5fe853d363db4947e488af87aa72deef7791bc4a 100644
GIT binary patch
delta 1427
zcmZWpO>7%Q6yCSHvAzCT|0i+&8l?nqoj8UzC5oe}C`qO86GaLaOe3@PY?Cei3A5`$
z!$v`BxPjDYj=eZNp!R|)B2HYm!G#0Y6$m(%10WR;4Hw>93#STR&G%;By!qbqr#JJs
z@a>dt#A0Cyf8`JFZ`~U^&_`hZpzuskVo>j^1P)e5%Rv@qk$tHWVo?@Dt1+F$(S})q
zCDBG$ilxy;S%ziN##oLGu)%$(=m(#EUDJ?!5r@qXHl<x~r4F)N(xJR7JK)NWd|T#k
zJBllJ)I;euFqtVI$vJ6B+9>TRPG3iI6<5J%)rC&LRqsknb%HlS9nF<pB_|z%_y#_Q
zu=qfp&3l@&W!krF$830kuB~LuciYx>!)!X$n?}8DR=4YITRfDD=^-rXxKNwF`o@+y
zz3!h9Pvl}QOZDmqQlAP@2*V)a1n?1YS@{+E#f&<%IEcGEM?frH7{-~GFyD8$QFE%y
zyw+;jjy-|iE}MG7rUM^4`dHnQ3v~Q}?8(Iv_c>3|g%_Arb84-|_N7^IG04{a{bzeQ
z{Us&l&m&x<Ngm;N{EAgK?U}W@am(c6ONL|2EdQrN@rK=MdcapXQ2aUZbFjS7%bS<^
zbLjTqojiD2PrRr8VtAo$+1;8}{Dh($92M=*mAMlV#V6s@xL@h>g~$URpy-o|XK?vS
zm*8>eER2W&Z5jr}vbHoyL0E`?phzLUwy{mqsrD)=iqEtH%nMH&g<p>T);!QIxRE=+
ze|KZz$4FKQxw`l#GF%t~iM}_brd*PCN^bIw%;(&c+t0!|?53RLCKn_(jowx9a&#D&
z*oZDdM;u1W@V)pU`q$nWD!~`4K(i@=2tgEKXY~JCuRDg*wtb;F)$hT3j{;~>(ty=u
z*o==<T1I&Z4S#{)MS>VXf*?t7o*+e6lwTki6Ki@NX2p&^9C(QwbK<VP0i)uHetn>)
zepju)b*pLFTd#|o@v9Rl2tYsR5Rhe@C2(YDrG(@tlyLAx@kiWVy^NfB)l-{B!}JTU
zsCK>OaPpt-bRGFw)xx`0rI>pdVuuhUqz@rEUlv~^{tTR>qm$xcaw_dlNw;Gt@JaHQ
z#c#<oa9+eyZ=F3=erlVyYNl;h4aecuwYFp0_r)ivX;?Y>GPMm*5>uHuSQ2LD?)a&r
zaq1I;H(I=EHH=O3D>0s(-rK;0*i(MT5#-}t-CxDIr>w2K#$_r=p=F}?jugAk2+z=7
zieQ9bj9{LCUN^o>;9myH@|043Wq$Jxg%%nu)~=hEsF7^yiV*6AS}EeYY+C%3P5%o=
Ca7L{F

delta 1316
zcmZ9MO>7%g5P;w8uI=@D?bwd(#6O{+v`JjYu1hfrtrbyH8Y)Fqq*g7ssa!X28(jR8
zzTF75+A0#169*C=w{l1>1uh(#0|$hVxNw3aLMx73A|xaz^bm1iW(`SHTmI(Fo1Zs3
zZ`MCdKPkmp(Wt@jbNQ3+R-#8XV+C+GOGmG&T;l;A<RPx}!|U*;W+T829(lkTL2mLW
z$`Ft7A(T3g^90H;Px4`u22b%c$_UT$5kC3=8s_Gg-y0!3Z4Q6-l3a&E?M+8@l`U<X
zy$@XB>IX`eonzOh?yF8<i@B<+ZY%dS7q)_~_K<PSRa`a8<j?RJLh?hUCU=!eeiYN~
zo#LmL7DfNIwd~kSm+sn*)oor{kjK?ZHbuw95G<g92?mTJb0Bi^j`};K<P9yC&Y)F{
z5GdOKS^1Hc&c1;9AX+<!j)5rbe50)^C362l@svtc_&E-Rqs24oyuIu!_q(gJFUge<
zpZD!Y_s{UvEU6QS8Z9Ofd#Us7j%A;C{mxo@wQKd9%5A&f^FUk_Kt5CQIsHt1|E!`S
zj^VZk?-aocTmJ|B_ZVa`>YcVdsN)SvFey8sG5J_OKXZ^o^^=Ga+8cqJ{l4uKL8Qt1
zpvp3;7X}Hc;c>{x%i%I)<a^<B$H)l_@dKvGg&xa`u2@cUzoN4IEnI>bIbw{#pF1_f
zgJRu{Y=HR7jdDHDBFxQjBa1hkWp1R-TysMaaW_UbSvB+N31IYni}jQ$yH|A+Xn$4S
zFw<jK+|;4i;X1p@dMS-L`i641BR@9h;B)ztc?N!!$>`JdF)Gk+Wsz3L2@!&cxR)4o
z-*#Hgn(en<&=Yy^?rsnzHaXbtalDpYjZ{-qP>2(RDj`aU6B2}zge2ibLV+<UW0P=7
zejUpP{X2hI{t~+md3k#1*2w;a3>p}`)$X<Jw-@ABLrZ}S1hMC%@dBKcwYYt87V{M~
zPwTb1mS18+vpao9(Ei~`M%9a9BHnD%i$OlyxM%AK264~<CwfjkjsG2-!W}U#|42*^
z`%CJ|9+bp5?Y|<c$s=%5E+(&yKT~INRrHrF+itcTN3?IQIhOsI{4rUE`JI1~s{j?*
zP0he-@=@yH^Us71(Tuc2w=bIQZfnK*R<_dR^=o(_&XYf`gkp5iVH!VAUA(X$6e>w2
x_|47H3Y*Ks4B;$+{%XWLfzlmniC=<0p?baB=W88nmd3%Rd)BcZaXFEh{1*_<9J&Ai

diff --git a/thesystem/__pycache__/inventory.cpython-39.pyc b/thesystem/__pycache__/inventory.cpython-39.pyc
index dfb797dc015a187d234d833fe56c428f07638dfa..c156b667e97cad19e83934e3055b28c61d6a5f4b 100644
GIT binary patch
delta 1434
zcmZXUO>7%g5P)~q-u2qvb!^A$q)zPoP^sPg7}^HW1_C0LkWx{gq!b9C)b(50o7!vl
z?V7f!)0C#%2#~%Ts3^$+MW`2)QxV(%ap1%WEhldDh(JR00yB17Ana<tc{}gTn>VvF
z``hHVMWbXGF$u3nuI*HR*f8?&<;HmPl*Gcd-i2N!F{PHNn+qmLOl6T9(n6MLEQ+#^
z#aJ9=Khv3kavw{u9+WwjWGR#bEX{gR4zlpPWMwvfd@*G~U~t=Ow0PNGY?l1$?g6+5
z`;+KB02avXTmYOW=vBSwxU6xJ_u<Put2`|lp+hhvwn95FDo%u5cwF2GuVnMIHtP6x
zeUX*?61VW3kBR4%gP@C+G8QL$-cKlq&y*Y(;v3}{%!$90Jlqy}b!Ey|mm<E#v^A*6
zTL6+DU5YKm+frNF)VGMnmc*hI?7D(UkT4ise5Ve<p!h{SAo?QHkPt6NCe4s{*$ZO!
zCA-}6OXq4fkE2_0HPW2u9HN5)og|AW;^R@I66kPH)<J_JWPoQyPOGjOs9z2hi$zNg
zLN(hB6kc*GwiV(!&II5EaK4k8E@;;v?YM8-uHWF77u{0bUc^%zMg2o3VRV#0H({AC
zp}rhJJh;f8hR<<)yf36d^uFDe7@QCB%{JVZa#xCcw0W44<j33k$C#R1@`Kd9D!FNp
z==SwB<m-|vKh{lIOx%f%sV8uMZiu_lBXRU01<L8FUAM(VY!E-pT<nP_`2wwYgFx8}
zlqPpv-!eLJ^AxGHa>=(V7-j%Ir(JlJkQcXOhcbIIZQ{(V_%&8g3$hB_+%@Ar15AoP
z^k=~r$BY72$!o^QUb7iAn-}ZGqc9`B!j3q*`;*ZxpPcsNo4Ri-CH$Ut8Y9pC6L}jp
zlUo?EJGy60-~ZQiN~m8<B}cG?&Lqd7M_f<NS(KZ*Duwa_B2YcQ<hQ&9rQC2_kDsK8
zI>8lxCWi(aIJ8pyG-+NToFTkPcuP#Bju!T2GJK)s_*QQ>k$G_?bqQ{Y-&02>mdWM{
zp-uR21_Rx*Yc<EMEK-lv#C&>I%gM1&PUhRYx6+?NafOUd5v~$e5zFc0c;?}k8m)45
zc-E;Dn{I_)quF=Fh0K6@orY`TW@c2qfkP`TzRv8Qd5^T~geajC**J|R5J9N!xcnm;
zsrUzRmTgWyElx#iCAcmI%z@<lr1^mGAz@TJXP)i;0J^;=J~wmliTK`pM%^L1yhvqh
ztDT%R$>3cA6=0C?t2TBshFq*WUb$0?e2%86cRT&VskS&(3g0Hsj{i#D!)_0>r|J#X
hs@YEiuJA??It)V+JF#<{_XoPHjc75vQ`$c5@ZZnaK9B$a

delta 1328
zcmZ9M&2Jl35Wx4X?akWjP1cU>B*ac)gdk2F(=-u~Dtxr%qoIYgN&;<&WZb;P-o)ND
zZ#Se)9iX%a4zwbgOI3p8T%sO8LQ4Mt-~d8M95}AHaIA!c5Vsr<Gd7eGul$>NZ)V=k
z%zJOYEBra3mvlWM;cw>KR^`<lJ;UzqjMtwHapi`z+{?STiZa2&Jc2UGH6BHo;yUj}
z*~fdhfwG^+cpT*b4=zZ#-ksm(56-be_IeMl>oe}l{Ibu4&}pb_S~hn!MG6Op3#U)4
zEV-s|SIoMzT3LC~*|e)piMuO{6?0;t;d*9mqE@o(k<sHhSPM+D4D1H(vMjt5wAnP=
z3vQ><v})Kw&mu2*B{7O)k%L!4qfCQ(XzX!%ljtL4$Thht%#vpoE&Dyw_8ieDQmh7F
zhi2FrI1FXjKJ+Ww1+MaNS>9tz@|3l%HMJ=<rB-;47}=9}gnDr^#3U|Z%{u&`46{MF
zuRNjpO1<G#92<<T6PUu;t_ir+<s{l^v_WZzBq9$nHNm=JQtO2o_2RK8&TRz>g+fmD
z169-ZL!xAt&0IielsR*Kw%%@B2O0QA?HhOsO>Q?rVo?^ve>YQEP!<*VL(L4`!}+b<
zro`ELK-_7vf27=zkPp}MJlu?ah6Q~tcglTJvg1sm#|vLaUXpD2Sf@-4ehQB%bGW96
z!e8MjV-Qt8gqu|}#XRaT8%eVWT#7uM_d|7I*<Ma>Coc^0R9CU{W$d}nJVCMI9YPv@
zj7%PFPy#J4fT0a3{j$PD;$T|)m9ade^pi}$MSTc+yQyc7hRtHw1^7aLlFh;|c$^mx
z4)uQd<g}-?qCC}%W2JrnR@!7OeGe<N(+^quk6POsJOD)_iyM5+7{?9!(wNhz3-=XD
z|21H-UgI38>x3#{9)@GX=^CoJZm~!+ON2KF%Y?UJIrdDCAAEPi@^ZbMCZ*x4*cJ9E
z<l<BLE9BH5Y!Uu{eEg_uR;!j>ZXez?_&9z_O~{czLKdxqpX2*%{wf7sAT$Zvh^_c(
z2d~n3XJfT8a>^<f>ULSYPu35}nw+y;uVk;9BWKNq`@rEta<~THCmuCELNyl`*J<Vk
z0)9_CHWj8(yTCEh#u0v?X4&F4X^JpiYs(b$jS(sWyP?7P<e>2h&D<p1B4pue^6k!D
zeQ-(qWZCrE6&5dVc%EYyty-yU?gC3auk6!ekHE{R>QcL(Hm%Z5?F?yjzeI&V2T9Pe
o5G?}5J=D$rUZ&309KKOCpJV9Z4nejrq04Gkjo=eg2h`(#12CaE1ONa4

diff --git a/thesystem/__pycache__/itemequip.cpython-39.pyc b/thesystem/__pycache__/itemequip.cpython-39.pyc
index d7fe11a31a190fa556d5addb5976b99aaa36c0ff..73904b1fa759d1d9be4e6e2ac32bcfccb8e2a057 100644
GIT binary patch
delta 3019
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
B^GpB$

delta 1815
zcmZWp&2JM&6yMoh$LqD@IEmvV&X*m^heHBM2q6Thnt)RRNo;IW$~LOycqZWBc-@(G
zN|0$P!Hq+Ky|gN=l1rubnro#>h(Dl*p7v6ym$p(>_0&pS=zD8}D4o^(=FNL=X5PN9
zFBZN(6D+j0>Jp64pFO?tc=l1SpTr&={dk9UY;^91UF>3!J+eoP?&c09J*=C0_GIAp
zvUb=<sl<BsWFk?CD&;<-pAi<hM>YnGK{iNR`XpnBdW{&>j5zff!&Em8P`~jOJIDwP
zJdtTD4c=FcL$r;C?n}mDdc2)>0C9wN(lD$E+D{|2`#v#7Xb<fL&QThreXx#FB`YNc
zY)Vr0GjeV!yih7LaeT3|#VVG`w~uWIv+}&jO@34>RX0J<;I=n(g?(LqJRAfcd@J#G
zSe{Q@m|abCbAuHvv6|f$7Te5cmu!zR-Z}tsAp=M<@7$kPJY)ioxaW8WP>x<U3p8KD
zcjK@Z0RTysNq`)K86v#jzODYY(*;}}0dQ1W+pIdi<n1D>S|zi>dx4u!d9)!cSOwmP
zBw>wL-1iz!iNY3ZJT(Fu!VRSR)FcTKeh_#?0`PL6-K{XsOVa+&o*^>)hUx8`39}4W
zuGQAp^OeFTo3vxzE^^wQ_Wnv{>_Kh7dm7FsG{c_P6677bto42H#w8t9ZWfsk`4YMf
zZxUzWj0gcpvIaiT!Nd^Jh)VbZ@QOZ^GzW&E1typ%iKq52TBiH!x?1<tTk77rMm<kF
zyGmW!BX<LK*0(T0y;QpaX-K5Hva9b&n1GNEz7>xD{rd|T3Bu=reon>`9zJXT=<5m0
z!rp1AZd*6aiv5Q#uJ|D+Aw51eg95c&5|*RhV%x&C&-J6Di`rWA&m2$Mtg?!2>9KK$
zUcs7hani*TE>5|4(g?DbDVGPm0-v*=>Er&_JZ8VpyE2#HS<w$5fmbwHCt(r=Peov-
z%OMg04utbVkQWuyY7Ptq`p)&$cR<x8N^U6+eLS~+(?6jqKK{-AleT}<olBN?SEGsg
z)Rz(+`ATkjOy2dO$0`|1qB2$P$)82<p0dcUTt5X4p1B6TRN=d)fKJDR^w1|h9S42<
zuEVU)(4*(1#?5r}zjwM(7+Wzssmz6BCdU0>CJ!TEIk>^$XOJ32IAkB`nZD*mMM@Ay
zVHL_TXZQ((DTI><(+H;!CJ``|`8fovN<N4%gm4)k;WgBY$)#n({-I}d!0^ncQn{?r
zaz3@RG?y{d%;L(sclsI)z;5duINa8tbA>hGb_c`vs)sn9^JP;oz6{seMsNR4D0h>^
zQhY6DuERnZzY|#~abc}C_`q1bQ7av*ZYOm9s?K>gnwCbmf`C=du|x0-LKYzhkT}h+
z!D0m6`dP1)%Z=1|ADE81Zq}>-KY+Bt&9V`;|B8n9|BOCRE*oB}u$G6m;{=+7dl1e5
z&+udZ<=0D<Qf2FZeZ<XDw_q{J#3%cup&E&XiLM052x*Za`!+xTrG!CBjM?e<wBK!B
zN>Oa_jQuD+>~|EgEgabtJZS$E-`sKhsjIp4)m%P3m%GTZ{GHC^m8*;C<>X2(pGz*M
z^9zehNhi3t@*Z$fnd|PJuYe{`p?V;lNoJF|Y(q~G7U!KP#8Ppql4A)piWCiZjePlY
lkRq>jW$o;yNo!^HHueR9i4-6)thVNd{YbO_9v&v)e*vmftyTa4

diff --git a/thesystem/__pycache__/misc.cpython-39.pyc b/thesystem/__pycache__/misc.cpython-39.pyc
index 9d0b60923916873a9dfe987ddcb578c25bcbece1..ccd80e1b75513f589384188235422dda453a3971 100644
GIT binary patch
delta 1177
zcmZ8gPfrs;6yKT7ZnxWR%b!v~6o?Q)f#9E*D8@((fkdN318Qtynq_C8E$wcdnI%9V
z#K^&u3E7Lsl6cUQ@uCO6f}ddH7a$(J84teMB9gYrdvAX8-tWD6@9o#z=kBay+m;5u
z@mC)ze~iQI1+;ZIb;(UojiNd!kyz^`gJPOE&`L>4s1Dks22Fxa(L7C2>j0H3nx+{*
z(zK6eX%3JK?V{a)*tCcCg3eO3tQ8B#D&3Nc!XKo6|0dWwmegu!4?WYoA)-mVJ%Kd!
zmx&r_=@cEo-E+;uSK5fNi*~gm3{-e2LNmo=ln~pZWR@Q;+<SC)c{xfgY`Lr{tG*Xu
zUqqzo$V!xSRz+-(nqT#bII=mbJHxWN$;vUFT6IL*{HXCXl=XXT{#MvP<0HZkxZA!;
z0WRWxA&f1QK|Pq;;YcDM{v;0$e=S^&BikYazAB3hxK|d^k%8z@;RXl|LM_A#;V1NB
zAq!`o0|8Z;Yt=gQoCb@CvO4Lky6@0(P!qm)4gv%Lp}6=!_!#dz>4FpQ1`!b&G@3=i
zl^5?*NV4it=1IZ(6{H?`rc6t@w|NKQ=CsBx#E0Q|Yl{PbLV1>~um&qrM>>%n+nr2l
zx5C_wa(p-PpUOlg=A+^F#GAn}KqGy=?hAIT>R(wbVy^fhl}~1dI!d#HCZuC!;c~{j
z@$efNM3W~i_vTJ}$9ok+M{Mq2_nDMcZ(UpipVPNN|EI%u`bBgQe$nsm%U#&`4a}uX
zw20JehD_4rYqXA!5UiqEOSLR&Dx0SEG?{K?sHILX;R}IPOfN0+DOG_gC^DB%5=Pd;
zs>}Um#rI&MD?DI3=B8hD*-Uf0q(4>G$}xtJqHXij>G7WMtx+iOgyOQ;7IOpXtim?f
z0EF+2*?Jy~c&wc-&c^Iz$A!g)uH67Xp?Eb!a0X4_ew2rGA(+nsRz&=KTdA28bNni(
zcz?JGjPr9noJ$rO*VS32=LIF&<5JeB5|c_yE1_u5)D+Jn{t(RD4W9;eb_aonP-$T$
T+J9_fGiB-~v2@e0GN%3){VE0V

delta 935
zcmZ8f&ui2`6wYKb+1YG%x7Ajxty=e>joJ!=hl;3JEhth1TMuPrO*7MO+TA41B$XBw
z4+RyxlsOBlH&5cpt9bQ4$bZnIS5Ll|%33yo_v4$#_ukC+zKwow)csn`G2om3+3)<K
z`}HaEZ2wa8zQs*m+A~%uw>SlF^JBcs*&bOf^9pwWVf;9Ec@2;Xuk!{V4j<v8;H#WG
zHoUO|q+QZq$>(cd42eztEG=AbttcT?OC)j7Y2A%qMBUius<qq^vyXRFDtfa$Ka8el
zu6lZ%oS#ZF8MRgFr<p1PgR+s7xWpmS)o;wF_e{uT35;jvY(4CX$nS~V!l>wZXsS?<
zJJ_n7ZK^nOAy*a{<dO~DEbXpfDk+%U;#n{8ELlUOf=D@xxQJ3E>j>dpj`CvpA@2yB
z3}zf5a$Nr|tuHnJh4GxUBYL9E{nXEC5f3v}gN_Kc+Qr%Ue=0_pDJS$t>)qrjKy$j#
zjg>gSftMFOQzAdKx=rWK42@RH5@;vdDv&}%lllXlB-1d{nEpW?YGyZY4c<@U`wkD(
zkm67Qk)~m^p)Nqp;C`S%Q-}6x@>;*OAKZyv8k}sIGD=H*3zucX{6vV6(oMS$OM@|Y
zUKuItS9le(=N30$QQW0Pc@BG<dZK)GA-9vAv=c|WY&#AEF_-MD(kB=#AK<K>BL_lB
z+=kpy*;*pwKq!^dM{yz|{k}ZE#*h-l8@^M$;BEUs8g9eeT!s>bx*5bWT{2^yBz0H{
z%am6D^N7SVaQO0`D`&tJTOw!m96Pag5p!Ipe=1-!fo2*_6Akhl8KRJ=SV(rG7xSzu
XZW5?aV_-mO&>DWqEQd1NaT)y!ofpbq

diff --git a/thesystem/__pycache__/quests.cpython-39.pyc b/thesystem/__pycache__/quests.cpython-39.pyc
index 315b06213d65e94de9ce939ef63d30d295df6dcd..fbe9e53d70e023a3ab9ad5649caf8713cf7894d4 100644
GIT binary patch
delta 3278
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

delta 3180
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
EKU&xNZ2$lO

diff --git a/thesystem/__pycache__/shop.cpython-39.pyc b/thesystem/__pycache__/shop.cpython-39.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..feb9162ad744b8b7474f0b2d3e0b803d13e8d6b3
GIT binary patch
literal 4635
zcmaJ^+fN+V89!%ccJ{&oYm6~qj4>t-i!oq)O-r3%uoD`GI0oCv#_49*GhPPvg3rw2
zusS1EaxU&eQc_iYi6cQ&Rc-%*sDDJ2=kwa9Rr^q>kt(%S)89F>khO5iYQFi-cRAnn
zd}nal+fxL8-p9XR{ivUizo<p)pMk|IczgvIVYEbY(VOO|UK=?>zs;Pb-?3Z_Z=+<F
z<GDB`%w*PwB$r@xiDY99>_Qf^RJL>1uhw|M&2KotYQa+U=HF$!l~X1je>6@=5oW)l
zp%suFDy&@^#_CrBgBi?xZ2Yo6v;%X;5;o}ZdvMLd@3BcqC3BAWSEmTozjpxdkxGw6
zg4ovk5zQlE{2fv;rbu9m_+uI-g1Ct9BzDPT`U@fw%vvYgHXnzr*a2I~1GfIyYD>hJ
zy-E0=MRF&};zhD+gejH?+bS7NNj52|u<aA_fU-80{xBg@^ROJIMVkLt$C}=ym4wDp
zh^`%ev>))J;~77?&XH~EUugB@31uCdpz^z-1HN=>%bk@8&@-A|(ey)2dJpJbn*O1t
zACBmv6FdA``_c)o4AvcH*b&ylj<R0X$NJf^r*?Qq9NI}je*n>TvE!oa3-YBA9){n8
z2mJ1Sj^BT4^_!hwL+m6QW~ZK7;gKQ<dqnq6YM0ED_ujs5gh#_((aQ$<NZ2R(5ZA~q
zeL~lbZG&g@`h{J}PPeRIWTWt^UmV#<ihh;_eoXZ2w27nQ*aKsiQnGD4%!nT7|0+m}
zp3ewu41~u6veqsJ#Br8oW1pJZ-e6_y6N;Lh(KT!Ogu0y&C!qbc&e4fxjt1Gdh<!oW
z*)Pp-C@{p(fjpc%kO#y6wlxpv$&*n}hQnfb+vNS)!f?~VDR7hGl&X^UZbTerS&xP<
zh(XBCv#bC%Lr|3oWW(g|D+-&OA#4hqwi!}64c<A;3)pm%)&<&mP5YQ#h-hL2S-yy@
zUefg6>h<MaDn{6q86q-xUsiVT9+@HVu>(1KY1hE|N3f<UnPor5GxIct+A8cPPfd39
zsli^>t5?_s&3lE-0=w4a&9Qkl4f$!!yUuQ~seRt7pbxXxKv8=xu%EKm_jxzj8*Gui
z3BKapVsEkA`@E&6u@F&<)97=HO932x^degpBbxFRd|n1+RE!Ex`$$s`)EMa_5lxKt
zk;@oT$lw)rr>QBSc?X(Vk%bhnea$;fP0&PkPZOCPVRw<eQ+VIQd!$H3T(l#9YQDXV
z`8K5H+gc~6HllmyQ%tr49TW3UKhrS=%N^*mvFB*rZ`EQ0;h7+_c4()Iy~_sJ{atfA
z#{b0L6=R42m>6U4_7T-%>^(#{9vl|qLHA<=yx*~t;W+!581E+G+2DwvkEu8d{7ldz
z43=+dz2B#%+XQHef2Nm&lVU<l_L5c^9l7&N<OU+2`hm!8f2cKvN?J#7l&z=}jT{zq
z9)`myeMd}Tik=ha7=!=Q2l8S2rPjTm?KZP`UTdF+_J!wYebuTZF0coPw}>+m=L32V
zRmIWpB3o5F#HXrxL0tSlF+Fqs#Wd!JhdFvF=-ufH`qz#H1LD$STGUfZm^;UJaknvo
z>ve50YfE!!`L;A?UtN&q-GyaoE-V7vx(?bKvy1hS8(zuvCvTOUEte0?JApGfTL`>O
zH~&`6^#gxm&97D@<&AdSzV%~~v=-C+{GwBKBcZIx)eX(n)y-oHsHKd-ytBz|jl;IH
zS)jo8{?zw`(m0IA?*%9lLEg)RRM016lX6SY&y9!H68Qt+%7v^Ujfp8~RbUsN4QVHG
zRxN!k@UM}%AKhPGb<Zws`GH$LTXww4{b1Gg_42;ITHTn~*pjK4lII77YI)=8Ah!Jn
z9#S8CsAJAMj7`jxss*RyUj?!!Snod&{=DlKbc)~?y)Nmzw5~h;mRik8dQGMmDuK((
zF7uqgRn%EYm!$QY!<i)B_BST+zWFyL-p{W9JV6q?Z;>5u93X4+V{nS&D~xcJ8GclO
zBMNjYpwd`R&Q-n2&^4zxR3B{dZlSX2R)Q+u%HM?d+QY^S<QshosIRGpDpA&w_FT1G
zu2yo^ZHK!#>-vUQ$R%&OMYqBnz9lX0RMuroCuUjN+~HoZ#fQ}f%05DhKXSd|YT!${
z{!C?6^_2}>*(*SFWv6hB($K&W$Kc$-ha9eHvTmTxdla-WGc~1I`K+Zw<)^R*9|2fK
z;mx8OpyN6eZ4^M#%`A;XRGaWa3UmRyj>lKsXH%Pwd{^&?vUIP?*Q>Q)vfh?oaeSBQ
z6zPOZ`{v!7v-9%}-N-8Y4c*tO1P#@$(h9aVTp7FRI=mt+h8B>C>dIPPVcyHvI*BwE
z<{O<5#Ru**Ui^Xr695g>Z2U9;oL6|`>^{Merc(~EyH|D_y26)~zz31A`U=(>TAN=~
zES(X>X#8CProasaW&yla6sVyhZ~R7qI|?Ke$SI)m;te34MiN*y7B!Y`G2Lvs?Q{dG
z+VPhFWc;@K2%YQ8n7{6oN|HW8C2X(4&};R9D6y@RWJyUy6Qpg?Emi}Z0<T)RA<fce
zsrdEaM}K|m>(5@6wjVe_4Z9Z5%YOa%b2icfdZ+p!J$QzeO4VQpk|mebhYxCC0+ikS
z+^Snxj~s|;%H9NP^>W!+i6&UiTEcXYvAI&!cct~_hFht358ZXS52q&;Z?ahPFg>z^
z>LgTHwJhzzYSk-1x(aC-tLbrRm8uSt$?G2!+zk~l;sw)EgG5^E?v~H9DxEP81Im}S
zvjJTu&APWC<I#S;OezC-irAag${RAdKg5tQJ<McMmmyz+w<*s@?gFO*UrayX=%p23
znqDQ4X^ckSDY|*>V#=?rZ18FUG#R_4NhY?FDfa`nPz#)ulFOqme^~Q^>}7qXq_v4z
zD35U0Vfm<9`3JZ-@(dS-v>%}bs*hySS;=ppgqQ`|`)WDwtVsGG*WR4c(Rke-+J$Nj
z?zL%ZUQckD(yx4!DegWxpX+os9j~O^+7tO+UZx^kAHk%8k!JjX>Pf%ARqG<9@Cp87
zmbs74$uuCEINB}O5lyswbBN_K5#q9ZB<6E<j!^;?sHF<VUjQLzM{+V2-8?U9A*f8t
zE*N)8d+L!xNu4YuDl?JG>RM{L(Ah#!%^{COJG79sW}LYJQsK)4?BtnO2y$%>TdVm&
z8RyT>nONi!Rqhq@m?OEQ#?&y8si;qM3<+Fro@z?|hVnVJ;o_g}N`PYK+6y(#f#>x(
z%yl_sRiJ!O&7)@mjw0$NEW0WinL<C}i0MsZ8qdYiK6&-MkZvNHn`=Wn`6eZoKrM9O
z&Fh?J;6^mK)y!^|)K_<~8dkoot{Ix3DZ`*?I*uoWRoX}yX*#MfY6G)q7wt9EbPU{%
z=98w~W|xu&f6Owd{{6>JSTqB@A#l>P%d`P|%oMf1v#oCIp!R?!&6o*X7_h6K6yCth
z40cc8moZ`GJInY1_)oh%(n~<TU+>XDdktv9QkqUFj|__rz!UfmdfMvNR?~FaOoN-E
zqgti|)CA;HwA<jHBNN#qU&4#uRbUN3X7=a8L^KxoisF?Nuj6}O*~58I2U~BWlivb#
Y>Ju~NDyx;;t19Jw8bE~_{nEz&0Am5#)Bpeg

literal 0
HcmV?d00001

diff --git a/thesystem/__pycache__/skills.cpython-39.pyc b/thesystem/__pycache__/skills.cpython-39.pyc
index 7fe47c998b34dba3b38c90f5b91f3b00173b29fc..ab5e062626cc82344039c5b7a0225f694ffb7e2e 100644
GIT binary patch
delta 521
zcmYjN&ubGw6rQ)U*_~{%`DL3JF^RQM*{*FULKO+>LA-gg^pJyL&5TLvZc}Gxr7bNj
z_yfU<VU9(NdhsfPNB<7VMLc@(4`?r)NiNR7_ulY*?|pCHsPwbs2CnNMb$%ax?T<%p
z4d}?f=OGGVx}Bzo;?RjQ?F=Al($p)|&QgooD!LRNA&-oX7mFTDT+ZTQ!n>@q6Nvt|
zFMj}td~Lh~R~B&<iqgj(sVSS&rS5I{1~<WxKk!Xx$bYy78{e~L9bjGhsk6K5!Wm~o
zcFPsH1AKyL<%97Odd4SEBV0H{2R1D{L+=fKpTZ#$`Eh|>)ZBBEA~jG|cC2fcZRIpc
zZS+~hxTSKQ)}a5%GxD?b_WFM1$|mFSV7T3U5Qsr9Va;ALSl!wCi<QVL@|@P@H5BAy
zyKI$p+K~J9)p;E6#S@3^vTh=RCn4i0#mN)91y%XWUiKHXbV)&bjx(C5ojjdcbY28u
z!nj_;4C-=)G{Bb+NvnJbOv3>a^IMAca{Pu?<>g1x3@SQZQ!vSiK2z?3MXS*u?oOR~
jL({tIzs^&Sx-KEDXh@Tg-2wHAO9}|g?%XtH4YF_!B*S;o

delta 486
zcmYk2&r2IY6oBXLZg$7jO@l^jTN7<df2={Y9xS#&3VN1+6(KCdAv3xmn{1q!*a~_m
z^ib%<Fuj#RN^dO`r1u_r@^9FiC-GlsFP*8E&cHWs-ZyXNF+ax#;{gc*AL+6BYZ&hg
zf)dmQl^2sXb>5=-2+dJfuRet>6ncXX_s`BR06g{8dVgn37iF+lFNk(4Ng9%qX1hU&
zB)p(%cDOvF{qNfPvuIl|E+W=Tn{l*}zUn3^p(1)2vxTiAAz5dkLt5Rr$IGF5V=n?$
zXZBMlt1G(%n?F3K46vjg=KicMNq;y>Zywtp5uN^I?OUG#5S=(d#~v-T(W%APD4ZZU
zHVo)3;|?5(blbPpuKQ@lHQna)qaDU`I_B75#K2cy+;=#0dq*-(yQ<>NhIt+slQ+1b
zky)w8oF0*J=Cao<AqAf_uB?Q2Pkr;A!?e2e<|}h1`9Pyy<c#*4tg%OAYroGLha~AU
zZvNyNB~`_<5UL1Qr;6ZMJ~%dC(K;OEPt2*j`i>XZr%YHjFz&zle>atMF2mJMO8W_0
R1HBWbWenG|2-w1R{{kAzb)x_P

diff --git a/thesystem/__pycache__/system.cpython-39.pyc b/thesystem/__pycache__/system.cpython-39.pyc
index 64a2b93a2b252d3129a84436a80aea5f9a871f4e..250a359060861d686121e245912ef6f46a97eeb3 100644
GIT binary patch
delta 10503
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%0DKOQ()hoO#}j}(p!*V9_v5V>E$M$yt}zn`
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

delta 10071
zcmbta3w)KumA`Y}k324U5E2py5`-Jx{CFw>LLi_*cq9Sx5xrdUeMv64x%V>Pck_T7
zt}NQJD)lj7L9~Y2wWYdRH{EW#eJypX)~cwjuKg@hyX)Gt)!ManTib5;{O1eFO|<>(
z@3%nyIWym!nKS2{Idf))zk9=e@pXG%BsbS@qd!LDXFH?KPvkxBV1Dr}$M0Hr+NI`n
z+3#YUr*qWYQk$AbKlxn_)ENH3fErBu&)U>U57;~G=NPjYPSv3ns4mrg!f|KyK(65$
z%t_~-V*`2VyusYGTP;+JIvnSiI69{=!}Rt=HYWeJ5XNswv$O|&>!(M@{oo_xe(?Vp
zm)UmPRGX9j9&?Bjb3AjI{>y9`Nd98gdCY$2l7W1~JLpU2lk7nwFC84r7jL^}t+-}f
zYx`jEoNb`cun#i&U6d{yoTPe*qc~ke)MTP2A39EbmWVp{{7Ih~$Lmz5h@<XeUnyzS
zLqBEWL3hdA|Hy8$+ZHdf^rKE4C|5lL1ueF?eG$!|(H1HfZ@QoKn(k!3(V2*g&w1uB
zQ#|ka6e|#|-ksvIcQIQeCi%itd(d~9DZ=khth$P<eBQ=a)2|P=w_VfPtZQ6v)sl&}
z&ejcy-gqn#QT5iQPHlc;ziw#V^SdL_c;%cWA#vQ_6ewar=4VUT)vQRo?VsmdL*0ng
zTg!$P2ZF4uib{MAAO!FLW&&o5y*Vq{8gVjb37aXN&RG<|_)-X7BkZ|L*(R|fck3L}
zq4(>iQ|pTwA-n0(jbvEs(M+e&$yKYh<f{>n=9aN-;_2K9c4+9WTrbP4PJ30i^wZU<
zcfgmn4LZ(|N2S@I6Tis|-KtOZkNBu((2LsmHEHJvR}b+!B!AEUjaOPA&~T`-J{r?>
zadUpe#Vcr1;?4Zx6+SLiF$<Ht8gL!pdO$T`F5m{h7J`tUZw1{TYJ;2EQgK`Grg8dt
zKiHg?XZPESnAhR8=h^uVv1`&1wq3k3DOo;^IES4C=b7n_##JqDgdEoJb3~+|dR$NU
z7OZA1Lq8}u%mR|njbV3*mZGbJ6KuCf+*wpMj`zz&8(8bm?~8Uj12e!@2v{cemX@(P
z(Np@E+cK%BE}LPIHDX8EcS<mG)6t<BrZ=kVsr|YJ`C_7aYNgeE4f;un=BcZtOk6>E
zm$-lGipuRoo_8wl#;#~ArYr6pDNQ$Y#nYVZ;1N|*#QRgL>YJ&N;!VcF$wZXq?%^6b
zxCu}P2m|&3B7pq_p-CeOLWOkII&ow9qRbwYrP1brnh!`3n2uy3X}VKMHDYL?$tG(z
zokT`x>BS=b8aJKYnh}u$D^A_un&Ki+wAjaut>h$PYB<&t3!?|FQum6tEzz9}bCFYF
z6hMn1JMYKX2|$gwr{Y0&hgdT0P$?FZ>Fi9TxasbW##4sIH=#|f`0lhBLAlhj7uE;U
zW-~D~ZTcbqD#fuO(qG>ca+s{nWE)JjG34g$;OzuN0Udw?fGz+7w27BOjq@ioMA39L
zHtme`kS!;$b%-6+p~8E?e2PGEZj9*tG^3N^M0H*D{ir_+xDRj=fMy&FhkSKp!^-uM
zj!M2)d{`Zti{`^#0>!;$*OuB18-}q>g_!Jue#uTaRdGc$%&pF#E7K9_HinlFHJlHC
zr}J7+(9N*4D#jfy0`w8cZib=0VF%zn)HMSj=`d_GTn|7m(N0nfmx4j&VYC~D(+=NY
z%h2a?JCQyro1UFoFIiaUy;R~-j9s9P0LlSya6Ui~%A4qsGI%bcPo}3=)4J41KR<@n
zx5z3UiL2ydd;zK!qRJgfCN<GBFOTgJx6W%}4~Wb2Gzumg=l8LP#JA>ull6)8f|ek3
zFcNq{eSPSy1t%E$y3iM?C3mAES6d>M;Nzn0yNl+yzk}9%sC@AjC*vZztjbN3r6nfB
zvTN8z@xrpH)4|UF74TiaQ-G%d&j7wByvx;z!@n%j%j*I!<9i$6LGkSJ_cGF;-$(g5
zf{=?p4_c1*5~z&?rt@Hmb_pl{0cu_WyaxCY!FjJW?!TepRe+QQqM13?Dh{{vNVjGQ
zD&>}Xk+JBKShaHdvWsAQ5rEN1hQByF$@ycntP$T@IhVa5e!eornuqqSy3Wq-5nsGk
z4M_RnJp3+Ex_U3WPNY_UrSK9u4wz0|i?#D#;_EwNP0fNCzX$mtf$88BH(i#fS%w=r
zQIpSVH&cuA0gLf}z#>QSz&pJFAHWZgnsb730qVf$=99#wHLHuI=Cb-mM}eUQYj?1k
zdqAH6$OZ9dPzdMzU4R>1{Sg#peKu|f<N&OJ#5dNh-S%7hZ2FTaBOFikMxq9P9~I8}
zR4hi}XA)XZ29y9Q01yZJ7)7>Zwhv;QyrJuB4Yojf2eq{|@pXjfr|<wc<=7Zd@zZWI
zI-vOF`gs|t+%X+FsJ-cKOC+#3|BF~mf0R<4wnV%=+F`n)-5o|3{{z)a+gsa+Gzu&x
zEkhnArHA0AgBbWC$S@U9PM~=E!fmt_)863i50_Zv#Q9tjkJUX}EVV4vnh$Q7B)lh1
zY^Vy#5wc7pE^Md|{sba41E{r)zbQ&KRxg+WPN{`FP*TiQpvJf*CH?!dNNg-|T_*0f
zyC;>3&u!ci_zAj_oxVBrhmB9O#9LHRZ;kL%eEWAm5b!qOX9P`rm@u^1a=-$NRtWeV
z8jQNIv^f6_>R=oG0pPy@a^6zOf3%6kn+tFHHELlE{wKhgxoT0oi@<ctrJ(b7P$RwY
zSD?n+lajh@e}tj0_~R{`XNV^^PiDEo++3cKx|Uj(ek|1%L~H0Slw(;JZes?MTtiZ<
zsaDL;`Pf`3H@ER(z}SQ#n-XY`a@`mSGSbDzECD0f`IMpF>;9HyrV(>!s-+CM)YhQ4
zwFIUkrp3uI^=Mo-BJnoO%4slbS|HtAi>QBP`JtCezzo1ufSG_QfV9LcP}{K}`PCq6
zK|#yX!AF*-;+Gn?a+UF`l+Om&_-XNV;^GZ|o{q@GOYynvW7-6U-q~`1O`n5L)quqx
z)98}uY1pUz1RZ5LI~5x!!@C9y*Gevc^!|0A<Pv}dv*a3c{2FRf;IP?rFSYP8|59(c
zw}687wc9?q6e81+!<&p+i5YE!k+x2a@)o%Y>*Zjh9m9ltiuhpLnO4c@<(tqzwxaFd
z#^+IyvciO_nH~x&JsLMSjZ8TueW1+*ol>BobiI$#70&r)@Gk*mX;l1Td-n`WGQJ+)
z<Nzxtw(8%pbj!!7WD6Q@9p8FP8yo4vr=Sft$>n8Ur`N|(*Jc-MwoYM#qG0EplT}~Z
zL#KQHmD9a->Jb-q&SulZ@XlFwULgXF(+j*=2cCIyo+6*lys^fr>9V*2bt?g@0NHbV
zym28N<t{hIH=Fc{^2xEC7n^;^V>)>vVaTo8ba!gej!whc)aCY$G{I#3<GMW6bTw-f
z-)QPDf0n);w;MK`&ZpQ0Y;?A>pR=i~i*ZBjXkM35U1<kR(0yfs$DP*E5EC_gY1;w6
z>N#d_wGTK4TvT?cURiPvc<AWpJL^>abfsba_Tcvet^x0H+kwDwMhD8k3ECB@#~d~1
zxZ@nrQhm7%R$wh5*+khcKXf=_*P?l!r?TQ$v_$=oT@zw-=+*iRzK$wGxmic)4OGFa
zNV`)quM=sy)o2g-8E=A}7XoCy;#2athNF8l-VrvUl<JH(f#Sj`LN|R@D^=r)$2w8y
zvMa?enZgj_yi3M-Gruj7iW@3j5`<%s{hFA+yDT&zcWNa8{uxeHMzY!LIgT8bLl*|P
zE=ca)xN;_h$Lb3?m7tp95hI$2hjopX2<^lQq({uPaxLj3EvTyz@9dt>ZWMzpMPlKe
zH!|DNW*Hzzpac#i_J`%>&AY8MTZRne+O*WF&~6SO1duA)gHKL5mg1x6N|9Pm#QAZm
zHl32p@=#Qw5jVm#&<`CpaYsubi;y&XmN!E@oFk<Fg`B3NClcc~OP09S8>Ui9<4dnJ
zu)MTJEKsVLD*mOtLL`-yGoHie(N5?b?}(?m$2s)(l<BNfws-HnuJ|UjZ^y`4QVMnN
zRqOz@DH3P*{=>}kX!9V!a51RI2%`59OUL133%5M%e|0T?R3ux=*|XwAYx%^iJSo1`
zI+Z1dUTM9-UOWT*)?ptM^<m>Tie=&H8FX*jyOV$Yux$p~$;=%oE!-XHn`oYqxG`p)
zI&?2nh$JQmLzx~r?R14xN!ph8p%P}I!#25?=@~gpoA$n>;*CXU&!wZaDc%Wh8h3fI
zc3<=K!^GQ$=zQgmj|eaQU`+iP@z(xz;{AP-R~;~%gD%yXc2Zn$U5N{E#h@smdQ`9K
zql?Ws10KUY=t+C%g3p`w4tmqJvo^7Ppk&p<+1GbjJxvIq4IIng((4pZ72;fE9R<~&
zMrLmtxjq`zikZ_9?a{(e11;yQE2LTAwBjvMAs_FBehvY$mb*B(f6AIqjyBD58r1br
z>jh5Iz+@`ftmSH_{eb>Xw&S*M9^*aY>HQV#Go+#ue$^{A<9om^jz=oQLv1sH)6kD}
zVCifX;$mA><|C#ZFYMSXLLMbIPKU8@qCKqRrbqEftJ2M1EPEOl<S)&_%pLI&tA`q=
zP28>)vm@f1TEW`Ix7EfesypqnuK(y#(1q(i8I3(+saEBaS9g^2$iTW3fi>h-9I-^3
z6^gQyNuLx?dz3;Teaup&xS&-#^BB*FUuk!2L<}~)?UXf!6DhjOl--!FNG#bI$>zeG
zj*<bk!2r10u#wtx=%>KWkJ4g(B@?5sinl>V%1CT@FF3H86-Q%Z<M0j?hX_nNmDZya
zhxP9#YIp&PUjm#(aXP3k0PX{Hq20rvP7(|UK*^|a3KRk>;>S$uW=6_P_boS~I&0P_
zrp1cR#Vjqu(<eG_sXB&^A>we6i(nJlK*ZrawD^WsqWHL25S_9d5)4Zxmom#Cr34rt
z#1x+ziN^Y|ptFY*>F63J<Y=!&n;P#$fA?TWDYxti6XJKHPR{gGpr8VN2Po)<-v-JW
zhd+RdtVxN?ff{yFeDgpByG6WyK!?k_DHy=z?>t;Adb<i~q2AtAzFfM^p_0m7bcaqm
z*}|=wu17kwg&nErf@D9fN4fb-aQtmZjh3GGn4WH{IbT8onD+Kw-T<k_JKH$HR>$VE
z)8x}dLq}qJSrCT@{wSp9fMzk=J=Og#$PL0Duee^O{Wt)aPP#7Y=JGf+dJHi0>$Yv#
zwllnb)6Uu@J2$Pb<twNu`Mp2dO_K;GBSt4(PDBrBe2F+1AAcKsZ+s0K9C{_*WY09y
zfRwKUD7=Sz6TFLbL7wse`pV@m&_~mr(0LBTf`{{bz#v42gPM-+NRp2x&HQWlN*TmR
zs_at&W76odSN>VzRYs3xJ~b>`=!$saU}Y(CXvKpx9;fnbtN#4pGWPILCBL4{jG=!S
zOR^fEE=lkbtwnxNoX`_=arP&@bT*FUrkfrm=<?Z;RGL+$?AKu)QqNx#HAaOSdn{is
z_8FCKS^JpygfX-1anwRGE6>jwR6J?av#$>MQ!g@lrg^<5<N;d~e?$a&FJwLsmRby-
zlhk-SB{`IUX`DZVdf6#t<6lBij{H?nPXI#rP)C&MiK}$Ni1eFoBN3xH$Sglp$o~<|
zFq-M0yvB4H{YfosdXhZRPEQ)hw;eWmYG~*?F>WjU&%Q8wO4Rp15?F>I<f^?O{@8y_
z#`GDT8a?39RSKPbqIw%eWz9%&%J3+~O6gf*ONph?r7ESWMvX3~Lcur$0pUlABN8+C
zH&DDFi+Xrmegp-1b@AAtne6*mwi(<lAn8|`dgWQtPS27~>sfMu8ID0`n$g~EPun`!
zfFo@mq;mkCFKKUZ%LgMn_Ii2-ylTK{&~s7RNv&O!|NBa91MaaWM0!LDF1G2(al8I>
zIkb!!AKCURNHlT(;pH-dREYNuPhRUA+Y3KFU_j5K$pAkEJ!HGkP3h92JeEgWwVQsh
ze<0)L&xza973_X-KE0pK6FCDjDdk)=@Pc2Rl=e|HE1+mraAfA}!Y(^+HS&(phIp{m
z$R7-<MNq^+YkMqi;FTDDExiMj2>nO}s}*-2shl@{%WqO#`?Zc#eB|*43^KhL$!uOb
zGCPAXMei;id|L!q444U!E-*H~g{YelGm!^oX-WEeE$Z$f2>BJCk)RuLx~Aw?a@tay
z)76`G>XD25xXrfMhV8_NguAqUop*zE9^kJ8+h;Os{gdgvGe|1s&x=VnS5WL-c=IQ*
z9pKD(B?Ef<=F0Z*>aezj($Q@}zF$?+OY6wSzz4{LA-Cz5=}s8Q&qP6_+)~19OLrcv
zW*3LV(S`P@Ga&thwA`R>>p!d#iK!*xH^*jV4pSS`C$r*|uBle?t$-0{qb5pAULp>Y
zo}Vb;qGKH;*b{6a%_WT_%_U7U8y!T6k#7JcO>>co^oH>QYF|d5&hAKjWkea7VIrx;
zWxO>5Rw%G8lpwDXw3J}*NL!axJySe)OI4YYqej~)BOEy#W~;$}>z?U9BHlI{fAkL$
z7%%<Q(T_fP=;*EG%wgxh8yft?1(qQ~{-=Q{(sHF&vU;_Ut^_=4u*-IrgS%BWU^8+C
zbJa4r0Gu*EoZ3)7F;#yNvy>Je)g_-nqjKomI+s!l3cMo+AD+s911S;z9KnadhG_Tx
zm{z$ljx#V_?L}|i!6@i!Xn|9e+|Nzt&XnFcF~z924pUb=NiM68JRXhh4>Hj1$)HbY
zj1Pjk2~Z7~3#bLig%nV7t{m2+$tJ80>6AZ2H?I=VB_|!6X<x$awl!@`Kq=yynrhR+
zS9+o|a2_3k#~JXpxW9-w?SAHT@Jk5U;=$X#!VZgFw^z1|YN6x4Gx&3UZRjIs2{{++
zZq{6+H^T6AIk+FSQc@|TH=?RhTr+S@T)e$%+*bBKx7V`EL+kF?<6R)lSq4RH2b2SL
z0;o3|Zv;Tqa^Y}YJauwsZad0wL0U(r#jI1)m%+kU9-s&D^&Ele+#k{D8jz1X24Z>e
z9{>zAiHiPHyC|@{c&dty_`f}M#M?pD)a4m*_};R>(`X2%;ay_z-h=FnDERbg!bd(`
z&b}<3`Sd<w4V~_xn!(fMbpHS5>D^RQe5QkN;EYcA>oZeWxA5P$spJfGb11*Alfq3*
zOT;Vd=vuprKOs8ryX^ik#yKRmo-L#ItIo4k>~(SC?Dh12MqWERJA>R=aW^D*cO<4b
zS~OiI+;o8=Gv`5kb?Nlf+0CIYE5SxyuGoo3`ZIEK)44vO>(&`V=H)U?mnV?V(`SAw
zcpnG#MS@W4A@5F2t*nh3Lr3nP?A{<3mkfC4@Hu~CHZc~tWJHqr&)=Xo=_W`uc}l$Y
z*@Y$hFb-`A^iX7l9+~dEDyBWu!g@vDL-VqIWa#mSu641W4gKN^^X;@{mp;;$kpumi
z_)S+Yr*|Wnu9%bX|3DfNMm?oy>PF7#3H6^akd;&OVbDJ(P`pMTT{lr<#fuxFHo7CG
ze6?Rz@dwc?Yo%b6Vy@ADGoS^9rr~xGe00|4_oy8u+25w`WCof2KS^|b133;{QffWK
zsMydHV)giEm#*9t+GV8@a)YfF1CL(6?gKE?0&V~t1H226VdQ<H%)HUeZUGWI{tS(8
zy6BoJ*-sAS`TGNzHDK5T*anaX(-u&zfI9#J@O8j<0CfbkIB4&o+%uJ=l=Ed&zX7-m
zz<s?;R{1tijer{g5r7Kl1RNm9@FYmw@yHtuegu?^yGKE#0RnIma2g=bAP<9*Y4cN{
nz7Kc~@H_zfniV)Nfw~O%89;_mSYgCkeh4fLS0nl#d-Q(+?2>=h

diff --git a/thesystem/__pycache__/titleequip.cpython-39.pyc b/thesystem/__pycache__/titleequip.cpython-39.pyc
index 321a7fe661f66274edf4301def18ca4708281c5a..1d68fc02f5e86674865f9e2e0e4c86f2d2cc4f07 100644
GIT binary patch
delta 480
zcmcc5_mht|k(ZZ?0SMmJuE>a;$h(a(Y2pzF#<<C>jGl}aCi^qK7iCEiYG&$JsAVr<
z%wn!#tzl0QP7#@WpILNr29vN%30oF>2}g=(Gh;f_LPkc08pZ{j3mF(0CNSppO`gak
z${4qKIg>IYPE*9|EewFlK`;`COIQ}L;xaOYA(%l^%&$t;Ei)&zSU(^qu`;zt!6mUI
zQ9mTJ1Sq7JRh*x9i?Qey12#3mC5a`aP&I7DV9rZM28PLTEbc<L7|UO>07F5O@fKTV
zUP@|S$>d8cN{n2Szq07cGZ$AD-{MNGNKGy+NleN~y~SIUTAW{6l$;u0kXVv2S&_9t
zSQV)GmzJ|tOh`tmZg6FBNowxoJ*<I@B9r;p<XJ?Riqt0?vNd{vlxZ^EV#!O)O})jM
zoS&0lR0I-(5NaTnCXlcI;$j{k!NADD$OghpEKFb-P3|ITpm34I<UefMQtBWkNCT1~
MVB^##JF?3G0D0qoIRF3v

delta 443
zcmey#cb|_pk(ZZ?0SNdX9ZdI`$h(a(Y~m3I#-PcpjGm0ACi^qK7ZpkoZf5FNsAVr<
z%wn!#tzl0QNfDhK%%q`{B9<ba&a{w`k)eih0oy_bMurKDc^x&ZDXfwVDQrN@4#XVU
zOcR)kf;O*ZQf92jYE~~ZBSSbt3IhueHUrstLWT?zn2U`JfChqKBoLRdEMUd7E`=eO
zK~uu7O2REOC$(5VB(nrT>17q?=iOo~y2Vf>2$qfsE}5Lh5~B;{>KB(JmXsDlm6g9_
z0S1C5<1Mz#yp+_ul3Q#Al_eSZd6TcOC^526{?4L1*@d-US{bP5mr;sUOh8e7R%&ud
zaZGS!aY<@!e6Y{tYpj8ce3LcU<XQNbic}|ivo)%Klxs5GV#!O)O})jMoS&0lR0I-(
q5Go*+`s5F6lDz65h1^9lAQ8#QV(i*ds$fYFfzSYEsZ5S$mjeJZGjfUm

diff --git a/thesystem/calorie.py b/thesystem/calorie.py
index 081781c..60e611a 100644
--- a/thesystem/calorie.py
+++ b/thesystem/calorie.py
@@ -4,6 +4,8 @@ from datetime import datetime, date
 import subprocess
 import thesystem.system
 import threading
+import sys
+from thesystem.misc import resource_path
 
 def add_cal(entry_1, window, initial_height, window_width):
     with open("Files/Data/Calorie_Count.json", 'r') as calorie_add_file:
@@ -32,5 +34,5 @@ def add_cal(entry_1, window, initial_height, window_width):
 
 def ex_close(window, initial_height, window_width):
     threading.Thread(target=thesystem.system.fade_out, args=(window, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, initial_height, window_width, step=12, delay=1)
diff --git a/thesystem/castle.py b/thesystem/castle.py
index e74de87..5bd710a 100644
--- a/thesystem/castle.py
+++ b/thesystem/castle.py
@@ -5,6 +5,8 @@ import tkinter
 import csv
 import thesystem.system
 import threading
+import sys
+from thesystem.misc import resource_path
 
 def get_priority_key_and_value(contents):
     """
@@ -105,7 +107,7 @@ def load_image_visibility(file_path, run_once_val, total_images=50, hidden_perce
         if 'hidden_images' in data:
             val=True
             #print(f"Loaded hidden images from file: {data['hidden_images']}")  # Debug
-            #print(list(data['hidden_images']))
+            #print(list(data['hidden_images')]))
             return [list(data['hidden_images']), floor]
     
     except:
@@ -152,7 +154,7 @@ def demon_fight(canvas_name,window):
     with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
         theme_data=ujson.load(themefile)
         theme=theme_data["Theme"]
-    subprocess.Popen(['python', f'{theme} Version/Demon Castle/gui1.py'])
+    subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Demon Castle/gui1.py')])
     ex_close(window)
 
 def ex_close(win):
@@ -162,7 +164,7 @@ def ex_close(win):
     with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
         tab_son_data["Castle"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(win, win.winfo_width(), win.winfo_height(), step=50, delay=1)
 
 def reward_castle():
@@ -187,7 +189,7 @@ def reward_castle():
     with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
         theme_data=ujson.load(themefile)
         theme=theme_data["Theme"]
-    subprocess.Popen(['python', f"{theme} Version/Leveled up/gui.py"])
+    subprocess.Popen([sys.executable, resource_path(f"{theme} Version/Leveled up/gui.py")])
 
     with open("Files/Player Data/Inventory.json", 'r') as fson:
         data_fininv=ujson.load(fson)
@@ -210,7 +212,7 @@ def reward_castle():
     with open("Files/Player Data/Inventory.json", 'w') as finaladdon:
         ujson.dump(data_fininv, finaladdon, indent=6)
 
-    subprocess.Popen(['python', "Anime Version/Demon Castle/gui.py"])
+    subprocess.Popen([sys.executable, resource_path("Anime Version/Demon Castle/gui.py")])
 
 def choose_demon_by_rank(rank_of):
     with open("Files/Player Data/Demon_Data.json", "r") as demon_file:
diff --git a/thesystem/dailyquest.py b/thesystem/dailyquest.py
index 3f8ac5c..4115203 100644
--- a/thesystem/dailyquest.py
+++ b/thesystem/dailyquest.py
@@ -2,6 +2,8 @@ import ujson
 import subprocess
 from datetime import datetime
 import csv
+import sys
+from thesystem.misc import resource_path
 
 def dailys_init():
     with open("Files/Player Data/Daily_Quest.json", 'r') as daily_quest_file:
@@ -112,7 +114,7 @@ def daily_preview(window):
     with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
         theme_data=ujson.load(themefile)
         theme=theme_data["Theme"]
-    subprocess.Popen(['python', f'{theme} Version/Daily Quest Rewards/gui.py'])
+    subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Daily Quest Rewards/gui.py')])
 
 def check_daily_comp(today_date_str, window):
     with open("Files/Player Data/Daily_Quest.json", 'r') as daily_quest_file:
@@ -188,7 +190,7 @@ def check_daily_comp(today_date_str, window):
                 with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
                     theme_data = ujson.load(themefile)
                     theme = theme_data["Theme"]
-                subprocess.Popen(['python', f'{theme} Version/Daily Quest Rewards/gui.py'])
+                subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Daily Quest Rewards/gui.py')])
 
                 # Close the daily quest tab
                 with open("Files/Player Data/Tabs.json", 'r') as tab_son:
@@ -248,7 +250,7 @@ def check_daily_comp(today_date_str, window):
                 with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
                     theme_data = ujson.load(themefile)
                     theme = theme_data["Theme"]
-                subprocess.Popen(['python', f'{theme} Version/Daily Quest Rewards/gui.py'])
+                subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Daily Quest Rewards/gui.py')])
 
                 # Close the daily quest tab
                 with open("Files/Player Data/Tabs.json", 'r') as tab_son:
@@ -309,7 +311,7 @@ def check_daily_comp(today_date_str, window):
                 with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
                     theme_data = ujson.load(themefile)
                     theme = theme_data["Theme"]
-                subprocess.Popen(['python', f'{theme} Version/Daily Quest Rewards/gui.py'])
+                subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Daily Quest Rewards/gui.py')])
 
                 # Close the daily quest tab
                 with open("Files/Player Data/Tabs.json", 'r') as tab_son:
diff --git a/thesystem/dungeon.py b/thesystem/dungeon.py
index dc079e8..9ee0234 100644
--- a/thesystem/dungeon.py
+++ b/thesystem/dungeon.py
@@ -7,6 +7,8 @@ from datetime import datetime, timedelta
 import random
 import threading
 import thesystem.system
+import sys
+from thesystem.misc import resource_path
 
 with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
     theme_data = ujson.load(themefile)
@@ -29,7 +31,7 @@ def ex_close(win):
         tab_son_data["Dungeons"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
     threading.Thread(target=system.fade_out, args=(win, 0.8)).start()
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     system.animate_window_close(win, initial_height, window_width, step=20, delay=1)
 
 def check_fatigue(rank):
@@ -66,7 +68,7 @@ def open_e_dunfile(eve):
         with open("Files/Player Data/Todays_Dungeon.json", 'w') as final_dun_full:
             ujson.dump(dun_full_data, final_dun_full, indent=6)
 
-        subprocess.Popen(['python', f'{theme} Version/Dungeon Runs/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Dungeon Runs/gui.py')])
         ex_close(eve)
 
 def open_d_dunfile(eve):
@@ -87,7 +89,7 @@ def open_d_dunfile(eve):
         with open("Files/Player Data/Todays_Dungeon.json", 'w') as final_dun_full:
             ujson.dump(dun_full_data, final_dun_full, indent=6)
 
-        subprocess.Popen(['python', f'{theme} Version/Dungeon Runs/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Dungeon Runs/gui.py')])
         ex_close(eve)
 
 def open_c_dunfile(eve):
@@ -108,7 +110,7 @@ def open_c_dunfile(eve):
         with open("Files/Player Data/Todays_Dungeon.json", 'w') as final_dun_full:
             ujson.dump(dun_full_data, final_dun_full, indent=6)
 
-        subprocess.Popen(['python', f'{theme} Version/Dungeon Runs/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Dungeon Runs/gui.py')])
         ex_close(eve)
 
 def open_b_dunfile(eve):
@@ -129,7 +131,7 @@ def open_b_dunfile(eve):
         with open("Files/Player Data/Todays_Dungeon.json", 'w') as final_dun_full:
             ujson.dump(dun_full_data, final_dun_full, indent=6)
 
-        subprocess.Popen(['python', f'{theme} Version/Dungeon Runs/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Dungeon Runs/gui.py')])
         ex_close(eve)
 
 def open_a_dunfile(eve):
@@ -150,7 +152,7 @@ def open_a_dunfile(eve):
         with open("Files/Player Data/Todays_Dungeon.json", 'w') as final_dun_full:
             ujson.dump(dun_full_data, final_dun_full, indent=6)
 
-        subprocess.Popen(['python', f'{theme} Version/Dungeon Runs/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Dungeon Runs/gui.py')])
         ex_close(eve)
 
 def open_s_dunfile(eve):
@@ -171,7 +173,7 @@ def open_s_dunfile(eve):
         with open("Files/Player Data/Todays_Dungeon.json", 'w') as final_dun_full:
             ujson.dump(dun_full_data, final_dun_full, indent=6)
 
-        subprocess.Popen(['python', f'{theme} Version/Dungeon Runs/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Dungeon Runs/gui.py')])
         ex_close(eve)
 
 rank_order = {'E': 1, 'D': 2, 'C': 3, 'B': 4, 'A': 5, 'S': 6}
@@ -219,13 +221,13 @@ def instance_dungeon(eve):
             rank=item_data.get('rank', '')
         fat_check=check_fatigue(rank)
         if fat_check==False:
-            subprocess.Popen(['python', f'{theme} Version/Instance Dungeon Confirm/gui.py'])
+            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Instance Dungeon Confirm/gui.py')])
             ex_close(eve)
     else:
         with open("Files/Checks/Message.csv", 'w', newline='') as check_file:
             check_fw = csv.writer(check_file)
             check_fw.writerow(["No Instance Keys"])
-        subprocess.Popen(['python', f'{theme} Version/Message/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Message/gui.py')])
 
 def get_item_name_from_csv():
     # Read the item name from the CSV file
@@ -271,7 +273,7 @@ def update_inventory(window):
     with open("Files/Player Data/Todays_Dungeon.json", 'w') as final_dun_full:
         ujson.dump(dun_full_data, final_dun_full, indent=6)
 
-    subprocess.Popen(['python', 'Manwha Version/Dungeon Runs/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Manwha Version/Dungeon Runs/gui.py')])
     window.quit()
 
 def dun_check():
diff --git a/thesystem/events.py b/thesystem/events.py
index 30b5967..ca7e5f8 100644
--- a/thesystem/events.py
+++ b/thesystem/events.py
@@ -8,6 +8,8 @@ import thesystem.system
 from PIL import Image, ImageTk
 from datetime import datetime, timedelta, date
 import time
+import sys
+from thesystem.misc import resource_path
 
 def event_tracker():
     while True:
@@ -29,7 +31,7 @@ def event_tracker():
                     with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
                         theme_data=ujson.load(themefile)
                         theme=theme_data["Theme"]
-                    subprocess.Popen(['python', f"{theme} Version/Urgent Quest PVE/gui.py"])
+                    subprocess.Popen([sys.executable, resource_path(f"{theme} Version/Urgent Quest PVE/gui.py")])
                 elif current_time > data[key]["time"]:
                     if data[key]["begun"]==False:
                         print()
diff --git a/thesystem/inventory.py b/thesystem/inventory.py
index f347f6b..eeb507a 100644
--- a/thesystem/inventory.py
+++ b/thesystem/inventory.py
@@ -7,6 +7,8 @@ import threading
 import thesystem.system
 import csv
 import os
+import sys
+from thesystem.misc import resource_path
 
 def create_inventory_item(canvas, window, item_data, x, y, button_images, item_images, image5):
     tr_n = item_data.get('name', '')
@@ -48,7 +50,7 @@ def ex_close(win):
     with open("Files/Player Data/Tabs.json",'w') as fin_tab_son:
         tab_son_data["Inventory"]='Close'
         ujson.dump(tab_son_data,fin_tab_son,indent=4)
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(win, win.winfo_height(), win.winfo_width(), step=40, delay=1)
 
 def inventory_name_cut(name):
@@ -73,7 +75,7 @@ def inventory_item_data(name,rank,category,t,r,s,window):
             with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
                 theme_data=ujson.load(themefile)
                 theme=theme_data["Theme"]
-            subprocess.Popen(['python', f'{theme} Version/Item Data/gui.py'])
+            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Item Data/gui.py')])
     
     except:
         print()
@@ -144,12 +146,12 @@ def selling_item(name,window,val):
         theme=theme_data["Theme"]
 
     if closing==True:
-        subprocess.Popen(['python', f'{theme} Version/Inventory/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Inventory/gui.py')])
 
         window.quit()
 
     else:
-        subprocess.Popen(['python', f'{theme} Version/Item Data/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Item Data/gui.py')])
 
         window.quit()
 
diff --git a/thesystem/itemequip.py b/thesystem/itemequip.py
index 37f2a06..6a9eb01 100644
--- a/thesystem/itemequip.py
+++ b/thesystem/itemequip.py
@@ -8,6 +8,8 @@ import cv2
 from PIL import Image, ImageTk
 import sys
 import os
+import sys
+from thesystem.misc import resource_path
 
 current_dir = os.path.dirname(os.path.abspath(__file__))
 
@@ -89,7 +91,7 @@ def handle_selection(val, name, cat, window, dat1, dat2, dat3, dat4, dat5):
             process_item_buffs(new_item_data[new_item_name][0], status_data, sign=1)
 
     save_ujson(STATUS_FILE, status_data)
-    subprocess.Popen(['python', 'Anime Version/Equipment/gui.py'])
+    subprocess.Popen([sys.executable, resource_path('Anime Version/Equipment/gui.py')])
     window.quit()
 
 def equip_item(cat,item_full_data, window):
@@ -315,7 +317,7 @@ def equip_item(cat,item_full_data, window):
                 tab_son_data=ujson.load(tab_son)
 
             if tab_son_data["Inventory"]=='Close':
-                subprocess.Popen(['python', f'{theme} Version/Equipment/gui.py'])
+                subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Equipment/gui.py')])
             window.quit()
 
     elif cat.upper()=="RUNE STONE":
@@ -384,7 +386,7 @@ def equip_item(cat,item_full_data, window):
         with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
             theme_data = ujson.load(themefile)
             theme = theme_data["Theme"]
-        subprocess.Popen(['python', f'{theme} Version/Inventory/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Inventory/gui.py')])
         window.quit()
 
     if cat=="ORDER":
@@ -392,7 +394,7 @@ def equip_item(cat,item_full_data, window):
             data_fininv=ujson.load(fson)
         del data_fininv["The Orb of Order"]
 
-        subprocess.Popen(['python', "First/The Order/gui.py"])
+        subprocess.Popen([sys.executable, resource_path("First/The Order/gui.py")])
         window.quit()
 
 
diff --git a/thesystem/misc.py b/thesystem/misc.py
index 18a998a..5f8eacf 100644
--- a/thesystem/misc.py
+++ b/thesystem/misc.py
@@ -1,9 +1,20 @@
 import subprocess
 import ujson
 import time
+import sys
+import os
 
 import thesystem.system
 
+def resource_path(relative_path):
+    try:
+        # PyInstaller creates a temp folder and stores path in _MEIPASS
+        base_path = sys._MEIPASS
+    except Exception:
+        base_path = os.path.abspath(".")
+
+    return os.path.join(base_path, relative_path)
+
 def return_status():
     with open("Files/Player Data/Status.json", 'r') as fson:
         data=ujson.load(fson)
@@ -48,7 +59,7 @@ def voice_activate():
             data=ujson.load(fson)
             
         if data["Settings"]["Microphone"]=="True" and first_run==False:
-            subprocess.Popen(['python', 'voice.py'])
+            subprocess.Popen([sys.executable, resource_path('voice.py')])
             thesystem.system.info_open("Voice")
             first_run=True
         
diff --git a/thesystem/nightmarket.py b/thesystem/nightmarket.py
index 111b6f4..be380f0 100644
--- a/thesystem/nightmarket.py
+++ b/thesystem/nightmarket.py
@@ -2,6 +2,8 @@ import ujson
 from datetime import datetime, timedelta
 import os
 import random
+import sys
+from thesystem.misc import resource_path
 
 def get_weekly_night_market_data():
     """
diff --git a/thesystem/penalty.py b/thesystem/penalty.py
index ad17d5e..d68c5bf 100644
--- a/thesystem/penalty.py
+++ b/thesystem/penalty.py
@@ -4,6 +4,8 @@ import csv
 import thesystem.system
 import ctypes
 import sys
+import sys
+from thesystem.misc import resource_path
 
 def complete(entry_1, entry_2, window):
     hr=entry_1.get()
@@ -22,11 +24,11 @@ def complete(entry_1, entry_2, window):
         fw=csv.writer(first_open_check_file)
         fw.writerow(["True"])
 
-    subprocess.Popen(['python', 'gui.py'])
+    subprocess.Popen([sys.executable, resource_path('gui.py')])
     ex_close(window)
 
 def ex_close(window):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx_close.py'])
+    subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_close.py')])
     thesystem.system.animate_window_close(window, window.winfo_height(), window.winfo_width(), step=30, delay=1)
 
 def is_admin():
diff --git a/thesystem/quests.py b/thesystem/quests.py
index a11d077..d2c4f50 100644
--- a/thesystem/quests.py
+++ b/thesystem/quests.py
@@ -6,6 +6,8 @@ import subprocess
 import os
 import thesystem.system
 from PIL import Image, ImageTk
+import sys
+from thesystem.misc import resource_path
 
 def quest_adding_func(entry_1,entry_2,entry_3,entry_4,entry_5,entry_6,window):
     try:
@@ -112,7 +114,7 @@ def quest_adding_func(entry_1,entry_2,entry_3,entry_4,entry_5,entry_6,window):
 
     window.quit()
 
-    subprocess.Popen(['python', f'{theme} Version/Quests/gui.py'])
+    subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Quests/gui.py')])
 
 def quest_reward(window,dicts,rank,name,special=False):
     rol=list(dicts.keys())
@@ -158,7 +160,7 @@ def quest_reward(window,dicts,rank,name,special=False):
             with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
                 theme_data=ujson.load(themefile)
                 theme=theme_data["Theme"]
-            subprocess.Popen(['python', f'{theme} Version/Leveled up/gui.py'])
+            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Leveled up/gui.py')])
 
         elif k=="STRav":
             for k in range(dicts[k]):
@@ -227,13 +229,13 @@ def quest_reward(window,dicts,rank,name,special=False):
             with open("Files\Temp Files\Quest Rewards.json", 'w') as fols:
                 ujson.dump(data_quest_rewards, fols, indent=6)
             
-            subprocess.Popen(['python', f'{theme} Version/New Items/gui.py'])
+            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/New Items/gui.py')])
         else:
             thesystem.system.message_open("Quest Completed")
-            subprocess.Popen(['python', f'{theme} Version/Quests/gui.py'])
+            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Quests/gui.py')])
     else:
         thesystem.system.message_open("Revertion")
-        subprocess.Popen(['python', 'First/Vows/gui.py'])
+        subprocess.Popen([sys.executable, resource_path('First/Vows/gui.py')])
 
     window.quit()
 
@@ -249,7 +251,7 @@ def abandon_quest(name,window):
     with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
         theme_data=ujson.load(themefile)
         theme=theme_data["Theme"]
-    subprocess.Popen(['python', f'{theme} Version/Quests/gui.py'])
+    subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Quests/gui.py')])
 
     window.quit()
 
@@ -302,7 +304,7 @@ def open_write_quest(name,id,type,window):
                 rec=[name,id,type]
                 fw.writerow(rec)
 
-        subprocess.Popen(['python', f'{theme} Version/Quest Info/gui.py'])
+        subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Quest Info/gui.py')])
 
         with open("Files/Player Data/Tabs.json",'r') as tab_son:
             tab_son_data=ujson.load(tab_son)
diff --git a/thesystem/shop.py b/thesystem/shop.py
index 3c37d3f..5abf3a1 100644
--- a/thesystem/shop.py
+++ b/thesystem/shop.py
@@ -2,6 +2,8 @@ import random
 import ujson
 import subprocess
 import thesystem.system
+import sys
+from thesystem.misc import resource_path
 
 def quests_add(rank, vals, read_status_file_data, window):
     ab_points = ["STR", "AGI", "VIT", "INT", "PER", "MAN"]
@@ -82,7 +84,7 @@ def quests_add(rank, vals, read_status_file_data, window):
             quest_main_names = ujson.load(f)
         quest_main_keys = list(quest_main_names.keys())
         final_quest_main_name = random.choice(quest_main_keys) if quest_main_keys else ""
-        details = quest_main_names.get(final_quest_main_name, [{}])[0]
+        details = quest_main_names.get(final_quest_main_name, [])[0]
 
         # --- Build Rewards Dictionary ---
         rew_dict = {rew1: 1}
@@ -148,7 +150,10 @@ def quests_add(rank, vals, read_status_file_data, window):
             addition = abs(vals) * percentile
 
         # --- Update Status ---
-        read_status_file_data["status"][0]['coins'] -= int(vals-addition)
+        # # Convert the current coins to an int before subtracting
+        current_coins = int(read_status_file_data["status"][0]['coins'])
+        amount_to_subtract = int(vals) - addition # Also ensure 'vals' is an int
+        read_status_file_data["status"][0]['coins'] = current_coins - amount_to_subtract
         with open("Files/Player Data/Status.json", 'w') as f:
             ujson.dump(read_status_file_data, f, indent=4)
 
@@ -168,6 +173,6 @@ def quests_add(rank, vals, read_status_file_data, window):
             ujson.dump(tab_son_data, fin_tab_son, indent=4)
 
         inv_name = f"{theme} Version/Shop/gui.py"
-        subprocess.Popen(['python', inv_name])
+        subprocess.Popen([sys.executable, resource_path(inv_name)])
 
     window.quit()
\ No newline at end of file
diff --git a/thesystem/skills.py b/thesystem/skills.py
index a4acba3..b1e1647 100644
--- a/thesystem/skills.py
+++ b/thesystem/skills.py
@@ -4,6 +4,8 @@ import os
 import subprocess
 from datetime import datetime, timedelta, date
 import thesystem.system
+import sys
+from thesystem.misc import resource_path
 
 def skill_use(skill_name,cooldown):
     with open("Files/Player Data/Skill tracker.json", "r") as f:
@@ -78,7 +80,7 @@ def skill_tracking_and_fatigue():
                     ujson.dump(status_data, f, indent=6)
 
             if fatigue_open==False:
-                subprocess.Popen(['python', f"{theme} Version/Fatigue/gui.py"])
+                subprocess.Popen([sys.executable, resource_path(f"{theme} Version/Fatigue/gui.py")])
                 fatigue_open=True
 
         if fat_percent<50:
diff --git a/thesystem/system.py b/thesystem/system.py
index 0b5e249..31360fd 100644
--- a/thesystem/system.py
+++ b/thesystem/system.py
@@ -41,12 +41,12 @@ def fin_pen():
     with open("Files/Player Data/Settings.json", 'r') as settings_open:
         setting_data=ujson.load(settings_open)
     if yesterday==p_date and status=="UNDONE" and setting_data["Settings"]["Main_Penalty"]!="False":
-        subprocess.Popen(['python', f'{theme} Version/Penalty Quest/gui.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/Penalty Quest/gui.py')])
         with open('Files/Checks/Daily_time_check.csv', 'w', newline='') as fout_final:
             fout_final_wr=csv.writer(fout_final)
             fout_final_wr.writerow([dates,"DONE","Complete"])
     elif yesterday!=p_date or status=="UNDONE" and setting_data["Settings"]["Main_Penalty"]!="False":
-        subprocess.Popen(['python', f'{theme} Version/Penalty Quest/gui.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/Penalty Quest/gui.py')])
         with open('Files/Checks/Daily_time_check.csv', 'w', newline='') as fout_final:
             fout_final_wr=csv.writer(fout_final)
             fout_final_wr.writerow([dates,"DONE","Complete"])
@@ -96,7 +96,7 @@ def fin_pen():
 
     current_time = time.time()
     if cal_pen and (current_time - last_run > cooldown):
-        subprocess.Popen(['python', 'First/Calorie Penalty/gui.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('First/Calorie Penalty/gui.py'))])
         last_run = current_time  # Update the last run time
 
     '''
@@ -158,7 +158,7 @@ def run_once_prog(stp_eve, thrd):
     if first_run_file_check==True and second_run_file_check==True:
         requirements_file='requirements.txt'
         #try:
-        #    subprocess.check_call([sys.executable, '-m', 'pip', 'install', '-r', requirements_file])
+        #    subprocess.check_call([sys.executable, '-m', 'pip', 'install', '-r', requirements_file)])
         #    print(f"Installed packages from {requirements_file} successfully.")
         #except subprocess.CalledProcessError as e:
         #    print(f"Failed to install packages from {requirements_file}. Error: {e}")
@@ -167,7 +167,7 @@ def run_once_prog(stp_eve, thrd):
         # Wait for the thread to finish
         thrd.join()
     
-        subprocess.Popen(['python', 'First/Check/gui.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('First/Check/gui.py')])
 
         sys.exit()
     
@@ -177,7 +177,7 @@ def run_once_prog(stp_eve, thrd):
         # Wait for the thread to finish
         thrd.join()
 
-        subprocess.Popen(['python', 'First/Check/gui.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path('First/Check/gui.py')])
 
         sys.exit()
 
@@ -620,7 +620,7 @@ def animate_window_open(window,target_height: int, width: int, step: int = 2, de
 
     # --- Trigger one-time effect at 20% progress ---
     if not threshold_triggered and current_height < 0.2 * target_height <= new_height:
-        # Example trigger: subprocess.Popen(['python', 'Files\\Mod\\default\\sfx.py'])
+        # Example trigger: subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files\\Mod\\default\\sfx.py'))])
         threshold_triggered = True
 
     # --- Schedule next frame ---
@@ -932,7 +932,7 @@ def set_preview_temp(o_name1,qt1):
     with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
             theme_data=ujson.load(themefile)
             theme=theme_data["Theme"]
-    subprocess.Popen(['python', f'{theme} Version/Item Data/gui.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/Item Data/gui.py')])
 
 def center_window(root, width, height):
     # Get screen width and height
@@ -960,7 +960,7 @@ def update_penalty_countdown(duration_seconds, countdown_label, canvas, window):
             with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
                 theme_data = ujson.load(themefile)
                 theme = theme_data["Theme"]
-            subprocess.Popen(['python', f'{theme} Version/Penalty Quest Rewards/gui.py'])
+            subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/Penalty Quest Rewards/gui.py')])
             window.quit()
             return
 
@@ -1075,12 +1075,12 @@ def rank_up(old_lvl, new_lvl):
     old_rank=give_ranking(old_lvl)
     new_rank=give_ranking(new_lvl)
     if old_rank==new_rank:
-        subprocess.Popen(['python', f'{theme} Version/Leveled up/gui.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/Leveled up/gui.py')])
     else:
         with open("Files/Temp Files/Rank file.csv", "w", newline="") as f:
             writer=csv.writer(f)
             writer.writerow([f"{old_lvl}"])
-        subprocess.Popen(['python', f'{theme} Version/Rank up/gui.py'])
+        subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/Rank up/gui.py')])
 
 def rank_up_skill(name_of_skill, old_level):
     with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
@@ -1090,14 +1090,14 @@ def rank_up_skill(name_of_skill, old_level):
     with open("Files/Temp Files/Skill file.csv", "w", newline="") as f:
         writer=csv.writer(f)
         writer.writerow([f"{name_of_skill}", f"{old_level}"])
-    subprocess.Popen(['python', f'{theme} Version/Skill Level up/gui.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/Skill Level up/gui.py')])
 
 def return_back_to_tab(loc,window):
     with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
         theme_data=ujson.load(themefile)
         theme=theme_data["Theme"]
         fin_loc=f'{theme} Version/{loc}/gui.py'
-    subprocess.Popen(['python', fin_loc])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path(fin_loc)])
     window.quit()   
 
 def fade_out(window, alpha):
@@ -1165,7 +1165,7 @@ def message_open(message):
     with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
         theme_data=ujson.load(themefile)
         theme=theme_data["Theme"]
-    subprocess.Popen(['python', f"{theme} Version/Message/gui.py"])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path(f"{theme} Version/Message/gui.py")])
 
 def resize_image_cv(image_path, size):
     """
@@ -1318,7 +1318,7 @@ def side_bar(image, size, alt=False):
         return None
 
 def info_open(message):
-    subprocess.Popen(['python', 'Files/Mod/default/sfx.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path('Files/Mod/default/sfx.py')])
     fout=open('Files/Temp Files/help.csv', 'w', newline='')
     fw=csv.writer(fout)
     rec=[message]
@@ -1327,7 +1327,7 @@ def info_open(message):
     with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
         theme_data=ujson.load(themefile)
         theme=theme_data["Theme"]
-    subprocess.Popen(['python', f"{theme} Version/Info/gui.py"])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path(f"{theme} Version/Info/gui.py")])
 
 def event_tracker():
     while True:
@@ -1349,7 +1349,7 @@ def event_tracker():
                     with open('Files/Player Data/Theme_Check.json', 'r') as themefile:
                         theme_data=ujson.load(themefile)
                         theme=theme_data["Theme"]
-                    subprocess.Popen(['python', f"{theme} Version/Urgent Quest PVE/gui.py"])
+                    subprocess.Popen([sys.executable, thesystem.misc.resource_path(f"{theme} Version/Urgent Quest PVE/gui.py")])
                 elif current_time > data[key]["time"]:
                     if data[key]["begun"]==False:
                         print()
@@ -1364,7 +1364,7 @@ def skill_message(skill_name):
         writer = csv.writer(f)
         writer.writerow([skill_name])
     
-    subprocess.Popen(['python', f'{theme} Version/Skill Use/gui.py'])
+    subprocess.Popen([sys.executable, thesystem.misc.resource_path(f'{theme} Version/Skill Use/gui.py')])
 
 def skill_use(skill_name,cooldown, mana=0, skill_open=True):
     with open("Files/Player Data/Status.json", 'r') as f:
@@ -1464,7 +1464,7 @@ def skill_tracking_and_fatigue():
                     ujson.dump(status_data, f, indent=6)
 
             if fatigue_open==False:
-                subprocess.Popen(['python', f"{theme} Version/Fatigue/gui.py"])
+                subprocess.Popen([sys.executable, thesystem.misc.resource_path(f"{theme} Version/Fatigue/gui.py")])
                 fatigue_open=True
 
         if fat_percent<50:
diff --git a/thesystem/titleequip.py b/thesystem/titleequip.py
index e612f4c..df20021 100644
--- a/thesystem/titleequip.py
+++ b/thesystem/titleequip.py
@@ -26,7 +26,7 @@ def final(name0,window):
             with open("Files/Player Data/Status.json", 'w') as fina_write_fson:
                 ujson.dump(fina_read_data, fina_write_fson, indent=4)
 
-            subprocess.Popen(['python', 'Anime Version/Status Tab/gui.py'])
+            subprocess.Popen([sys.executable, resource_path('Anime Version/Status Tab/gui.py')])
 
             window.quit()
 
@@ -49,7 +49,7 @@ def final(name0,window):
             with open("Files/Player Data/Status.json", 'w') as fina_write_fson:
                 ujson.dump(fina_read_data, fina_write_fson, indent=4)
 
-            subprocess.Popen(['python', 'Anime Version/Status Tab/gui.py'])
+            subprocess.Popen([sys.executable, resource_path('Anime Version/Status Tab/gui.py')])
 
             window.quit()
 
diff --git a/thesystem/update_txt.txt b/thesystem/update_txt.txt
index 5898af6..9752a69 100644
--- a/thesystem/update_txt.txt
+++ b/thesystem/update_txt.txt
@@ -1,4 +1,5 @@
 import requests
+from thesystem.misc import resource_path
 import pandas as pd
 from packaging import version
 import zipfile
@@ -87,7 +88,7 @@ def get_remote_version(raw_csv_url):
         df = pd.read_csv(raw_csv_url, header=None)
         if df.empty:
             raise ValueError("Remote CSV is empty.")
-        return str(df.iloc[0, 0]).strip()
+        return str(df.iloc[0, 0)]).strip()
     except Exception as e:
         log(f"Error reading remote CSV: {e}")
         return None
@@ -97,7 +98,7 @@ def get_local_version(local_path):
         df = pd.read_csv(local_path, header=None)
         if df.empty:
             raise ValueError("Local CSV is empty.")
-        return str(df.iloc[0, 0]).strip()
+        return str(df.iloc[0, 0)]).strip()
     except Exception as e:
         log(f"Error reading local CSV: {e}")
         return None
@@ -166,7 +167,7 @@ def download_and_replace(zip_url, destination):
     with zipfile.ZipFile(temp_zip_path, 'r') as zip_ref:
         zip_ref.extractall(temp_extract_dir)
 
-    extracted_folder = os.path.join(temp_extract_dir, os.listdir(temp_extract_dir)[0])
+    extracted_folder = os.path.join(temp_extract_dir, os.listdir(temp_extract_dir)[0)])
     total_files = sum([len(files) for r, d, files in os.walk(extracted_folder)])
     moved_files = 0
 
diff --git a/update.py b/update.py
index a267997..9752a69 100644
--- a/update.py
+++ b/update.py
@@ -1,16 +1,16 @@
 import requests
+from thesystem.misc import resource_path
 import pandas as pd
 from packaging import version
 import zipfile
 import shutil
 import os
+from io import BytesIO
 import time
 import threading
 from datetime import datetime
 import tkinter as tk
 from tkinter import ttk
-import json
-import patch_ng # Requires "pip install patch-ng"
 
 # --- CONFIGURATION ---
 
@@ -42,13 +42,18 @@ def finish_update():
     progress["value"] = 100
     close_btn.lift()
 
-# --- NEW CONFIGURATION ---
-# URL to the JSON file that describes the patches
-patches_manifest_url = "https://raw.githubusercontent.com/YOUR_USERNAME/YOUR_REPO/main/patches.json"
+# --- CONFIGURATION ---
+
+github_csv_url = "https://raw.githubusercontent.com/Venexs/The-System/refs/heads/Update_RAW/version.csv"
 local_csv_path = "version.csv"
+repo_zip_url = "https://github.com/Venexs/The-System/archive/refs/heads/Update_RAW.zip"
 target_directory = "."
 
+def github_blob_to_raw(url):
+    return url.replace("github.com", "raw.githubusercontent.com").replace("/blob/", "/")
+
 def create_backup(source_dir, backup_dir="Update Backup"):
+    # Remove existing zip backups
     if os.path.exists(backup_dir):
         for file in os.listdir(backup_dir):
             if file.endswith(".zip"):
@@ -58,9 +63,11 @@ def create_backup(source_dir, backup_dir="Update Backup"):
                 except Exception as e:
                     log(f"Failed to delete {file}: {e}")
 
+    # Create backup filename
     timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
     os.makedirs(backup_dir, exist_ok=True)
     backup_path = os.path.join(backup_dir, f"backup_{timestamp}.zip")
+
     log(f"Creating backup at: {backup_path}")
 
     def zipdir(path, ziph):
@@ -73,15 +80,17 @@ def create_backup(source_dir, backup_dir="Update Backup"):
 
     with zipfile.ZipFile(backup_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
         zipdir(source_dir, zipf)
+
     log("Backup complete.")
 
-def get_remote_manifest(url):
+def get_remote_version(raw_csv_url):
     try:
-        response = requests.get(url)
-        response.raise_for_status()
-        return response.json()
+        df = pd.read_csv(raw_csv_url, header=None)
+        if df.empty:
+            raise ValueError("Remote CSV is empty.")
+        return str(df.iloc[0, 0)]).strip()
     except Exception as e:
-        log(f"Error fetching remote manifest: {e}")
+        log(f"Error reading remote CSV: {e}")
         return None
 
 def get_local_version(local_path):
@@ -89,18 +98,55 @@ def get_local_version(local_path):
         df = pd.read_csv(local_path, header=None)
         if df.empty:
             raise ValueError("Local CSV is empty.")
-        return str(df.iloc[0, 0]).strip()
+        return str(df.iloc[0, 0)]).strip()
     except Exception as e:
         log(f"Error reading local CSV: {e}")
         return None
 
-def download_file_with_progress(url, output_path):
-    log("Downloading patch...")
+def is_file_locked(filepath):
+    try:
+        with open(filepath, 'a'):
+            return False
+    except IOError:
+        return True
+
+def safe_move(src, dst):
+    for _ in range(3):
+        if not is_file_locked(src):
+            try:
+                shutil.move(src, dst)
+                return True
+            except Exception as e:
+                log(f"Error moving {src} to {dst}: {e}")
+        log(f"Retrying move for: {src}")
+        time.sleep(1)
+    log(f"Failed to move: {src}")
+    return False
+
+def force_remove(path):
+    if os.path.isdir(path):
+        for _ in range(3):
+            try:
+                shutil.rmtree(path, ignore_errors=False)
+                return
+            except PermissionError:
+                log(f"Retrying delete of folder: {path}")
+                time.sleep(1)
+    elif os.path.exists(path):
+        for _ in range(3):
+            try:
+                os.remove(path)
+                return
+            except PermissionError:
+                log(f"Retrying delete of file: {path}")
+                time.sleep(1)
+
+def download_zip_with_progress(url, output_path):
+    log("Starting download...")
     response = requests.get(url, stream=True)
-    response.raise_for_status()
     total = int(response.headers.get('content-length', 0))
     downloaded = 0
-    chunk_size = 8192
+    chunk_size = 8192  # 8KB
 
     with open(output_path, 'wb') as f:
         for chunk in response.iter_content(chunk_size=chunk_size):
@@ -112,87 +158,75 @@ def download_file_with_progress(url, output_path):
                 log(f"Downloading... {percent:.2f}%")
     log("Download complete.")
 
-
-def download_and_apply_patch(patch_url, destination):
-    temp_patch_file = "__temp_patch__.diff"
-    
-    try:
-        download_file_with_progress(patch_url, temp_patch_file)
-        log("Applying patch...")
-        
-        # Use the patch library to apply the diff
-        patch_set = patch.fromfile(temp_patch_file)
-        if not patch_set:
-            log("Could not parse patch file.")
-            return False
-
-        if patch_set.apply(root=destination):
-            log("Patch applied successfully.")
-            progress["value"] = 100
+def download_and_replace(zip_url, destination):
+    temp_zip_path = "__temp_download__.zip"
+    temp_extract_dir = "__temp_extract__"
+
+    download_zip_with_progress(zip_url, temp_zip_path)
+
+    with zipfile.ZipFile(temp_zip_path, 'r') as zip_ref:
+        zip_ref.extractall(temp_extract_dir)
+
+    extracted_folder = os.path.join(temp_extract_dir, os.listdir(temp_extract_dir)[0)])
+    total_files = sum([len(files) for r, d, files in os.walk(extracted_folder)])
+    moved_files = 0
+
+    for item in os.listdir(extracted_folder):
+        s = os.path.join(extracted_folder, item)
+        d = os.path.join(destination, item)
+
+        if os.path.exists(d):
+            if os.path.isdir(s):
+                for root_dir, dirs, files in os.walk(s):
+                    rel_path = os.path.relpath(root_dir, s)
+                    target_subdir = os.path.join(d, rel_path)
+                    os.makedirs(target_subdir, exist_ok=True)
+                    for file in files:
+                        src_file = os.path.join(root_dir, file)
+                        dst_file = os.path.join(target_subdir, file)
+                        if os.path.exists(dst_file):
+                            force_remove(dst_file)
+                        safe_move(src_file, dst_file)
+                        moved_files += 1
+                        progress["value"] = 100 * moved_files / total_files
+                        log(f"Updating: {file}")
+            else:
+                force_remove(d)
+                safe_move(s, d)
+                moved_files += 1
+                progress["value"] = 100 * moved_files / total_files
         else:
-            log("Failed to apply patch. Please check logs.")
-            # Optionally, you could restore the backup here.
-            return False
-
-    except Exception as e:
-        log(f"An error occurred during patching: {e}")
-        return False
-    finally:
-        if os.path.exists(temp_patch_file):
-            os.remove(temp_patch_file)
-            
-    return True
-
-
+            safe_move(s, d)
+            moved_files += 1
+            progress["value"] = 100 * moved_files / total_files
+
+    os.remove(temp_zip_path)
+    shutil.rmtree(temp_extract_dir, ignore_errors=True)
+    log("Update process finished.")
+    finish_update()
 def run_update_thread():
     try:
-        manifest = get_remote_manifest(patches_manifest_url)
+        raw_url = github_blob_to_raw(github_csv_url)
+        remote_ver = get_remote_version(raw_url)
         local_ver = get_local_version(local_csv_path)
 
-        if not manifest or not local_ver:
-            log("Could not read version files.")
-            finish_update()
-            return
-
-        remote_ver = manifest.get("latest")
-        if not remote_ver:
-            log("Invalid remote manifest format.")
-            finish_update()
+        if remote_ver is None or local_ver is None:
+            log("Could not read one or both version files.")
             return
 
         log(f"Local version: {local_ver}")
         log(f"Remote version: {remote_ver}")
 
         if version.parse(remote_ver) > version.parse(local_ver):
-            log("Newer version found.")
-            
-            # Find the correct patch to apply
-            patch_to_apply = None
-            for p in manifest.get("patches", []):
-                if p.get("from") == local_ver and p.get("to") == remote_ver:
-                    patch_to_apply = p
-                    break
-            
-            if not patch_to_apply:
-                log(f"No direct patch found from {local_ver} to {remote_ver}.")
-                log("Consider implementing multi-step patching or a full download fallback.")
-                finish_update()
-                return
-
+            log("Newer version found on GitHub.")
             create_backup(target_directory)
-            
-            if download_and_apply_patch(patch_to_apply["url"], target_directory):
-                with open(local_csv_path, "w") as f:
-                    f.write(remote_ver)
-                log("Update complete. Local version file updated.")
-            else:
-                log("Update failed. Please check the backup folder.")
-
-            finish_update()
+            download_and_replace(repo_zip_url, target_directory)
+            with open(local_csv_path, "w") as f:
+                f.write(remote_ver)
+            log("Local version file updated.")
         else:
             log("You already have the latest version.")
             finish_update()
-            
     except Exception as e:
         log(f"[Update Thread] Error: {e}")
         finish_update()
diff --git a/update_new.txt b/update_new.txt
index 8ba0e53..3bf2560 100644
--- a/update_new.txt
+++ b/update_new.txt
@@ -3,6 +3,7 @@ from tkinter import messagebox
 from tkinter import ttk
 import threading
 import requests
+from thesystem.misc import resource_path
 import pandas as pd
 from packaging import version
 import zipfile
@@ -89,7 +90,7 @@ def get_remote_version(raw_csv_url):
         df = pd.read_csv(raw_csv_url, header=None)
         if df.empty:
             raise ValueError("Remote CSV is empty.")
-        return str(df.iloc[0, 0]).strip()
+        return str(df.iloc[0, 0)]).strip()
     except Exception as e:
         log(f"Error reading remote CSV: {e}")
         return None
@@ -99,7 +100,7 @@ def get_local_version(local_path):
         df = pd.read_csv(local_path, header=None)
         if df.empty:
             raise ValueError("Local CSV is empty.")
-        return str(df.iloc[0, 0]).strip()
+        return str(df.iloc[0, 0)]).strip()
     except Exception as e:
         log(f"Error reading local CSV: {e}")
         return None
@@ -200,7 +201,7 @@ def download_and_replace(zip_url, destination, num_threads=4):
         with zipfile.ZipFile(temp_zip_path, 'r') as zip_ref:
             zip_ref.extractall(temp_dir)
 
-        extracted_folder = os.path.join(temp_dir, os.listdir(temp_dir)[0])
+        extracted_folder = os.path.join(temp_dir, os.listdir(temp_dir)[0)])
 
         for item in os.listdir(extracted_folder):
             s = os.path.join(extracted_folder, item)
diff --git a/voice.py b/voice.py
index 784d1db..ef60c06 100644
--- a/voice.py
+++ b/voice.py
@@ -60,33 +60,33 @@ def recognize_speech():
                 for keyword, value in COMMANDS.items():
                     if keyword in command:
                         print(f"Hotkey and command '{keyword}' detected. Output: {value}")
-                        subprocess.Popen(['python', 'Files/Mod/default/sfx_button.py'])
+                        subprocess.Popen([sys.executable, resource_path('Files/Mod/default/sfx_button.py')])
                         if value==1:
-                            subprocess.Popen(['python', f'{theme} Version/Status Tab/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Status Tab/gui.py')])
                         elif value==2:
-                            subprocess.Popen(['python', f'{theme} Version/Inventory/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Inventory/gui.py')])
                         elif value==3:
-                            subprocess.Popen(['python', f'{theme} Version/Quests/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Quests/gui.py')])
                         elif value==4:
-                            subprocess.Popen(['python', f'{theme} Version/Daily Quest/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Daily Quest/gui.py')])
                         elif value==5:
-                            subprocess.Popen(['python', f'{theme} Version/Skills Tab/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Skills Tab/gui.py')])
                         elif value==6:
-                            subprocess.Popen(['python', f'{theme} Version/Equipment/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Equipment/gui.py')])
                         elif value==8:
-                            subprocess.Popen(['python', f'{theme} Version/Dungeon/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Dungeon/gui.py')])
                         elif value==9:
-                            subprocess.Popen(['python', f'{theme} Version/Credits/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Credits/gui.py')])
                         elif value==10:
-                            subprocess.Popen(['python', f'{theme} Version/Settings/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Settings/gui.py')])
                         elif value==11:
-                            subprocess.Popen(['python', f'{theme} Version/Demon Castle/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Demon Castle/gui.py')])
                         elif value==12:
-                            subprocess.Popen(['python', f'{theme} Version/Shop/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Shop/gui.py')])
                         elif value==13:
-                            subprocess.Popen(['python', f'{theme} Version/Intro/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Intro/gui.py')])
                         elif value==14:
-                            subprocess.Popen(['python', f'{theme} Version/Fatigue/gui.py'])
+                            subprocess.Popen([sys.executable, resource_path(f'{theme} Version/Fatigue/gui.py')])
                         break  # Continue listening after processing the command
         except sr.UnknownValueError:
             pass  # Ignore unrecognized speech
